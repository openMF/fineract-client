apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'eclipse'
//apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'

group = 'org.mifos'
version = '2.0.4-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.9.22'
    repositories {
maven { url "https://repo1.maven.org/maven2" }
jcenter()
}
dependencies {
classpath 'com.android.tools.build:gradle:2.3.+'
classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.24.23'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
}
}

repositories {
jcenter()
}


if(hasProperty('target') && target == 'android') {

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

android {
compileSdkVersion 25
buildToolsVersion '25.0.2'
defaultConfig {
minSdkVersion 14
targetSdkVersion 25
}
compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
}

// Rename the aar correctly
libraryVariants.all { variant ->
variant.outputs.each { output ->
def outputFile = output.outputFile
if (outputFile != null && outputFile.name.endsWith('.aar')) {
def fileName = "${project.name}-${variant.baseName}-${version}.aar"
output.outputFile = new File(outputFile.parent, fileName)
}
}
}

dependencies {
provided 'javax.annotation:jsr250-api:1.0'
}
}

afterEvaluate {
android.libraryVariants.all { variant ->
def task = project.tasks.create "jar${variant.name.capitalize()}", Jar
task.description = "Create jar artifact for ${variant.name}"
task.dependsOn variant.javaCompile
task.from variant.javaCompile.destinationDir
task.destinationDir = project.file("${project.buildDir}/outputs/jar")
task.archiveName = "${project.name}-${variant.baseName}-${version}.jar"
artifacts.add('archives', task);
}
}

task sourcesJar(type: Jar) {
from android.sourceSets.main.java.srcDirs
classifier = 'sources'
}

artifacts {
archives sourcesJar
}

} else {

apply plugin: 'java'
//apply plugin: 'maven'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

//install {
//repositories.mavenInstaller {
//pom.artifactId = 'openapi-java-client'
//}
//}

task execute(type:JavaExec) {
main = System.getProperty('mainClass')
classpath = sourceSets.main.runtimeClasspath
}
}

ext {
oltu_version = "1.0.1"
retrofit_version = "2.1.0"
okhttp3_version = "3.5.0"
swagger_annotations_version = "1.5.22"
junit_version = "4.13.1"
    rx_java_version = "1.1.4"
json_fire_version = "1.8.0"
}

dependencies {
implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"
implementation "com.squareup.okhttp3:okhttp:$okhttp3_version"
    implementation "com.squareup.retrofit2:adapter-rxjava:$retrofit_version"
    implementation "io.reactivex:rxjava:$rx_java_version"
implementation "io.swagger:swagger-annotations:$swagger_annotations_version"
implementation "com.google.code.findbugs:jsr305:3.0.2"
implementation ("org.apache.oltu.oauth2:org.apache.oltu.oauth2.client:$oltu_version"){
exclude group:'org.apache.oltu.oauth2' , module: 'org.apache.oltu.oauth2.common'
}
implementation "io.gsonfire:gson-fire:$json_fire_version"
implementation 'javax.annotation:javax.annotation-api:1.3.2'
testImplementation "junit:junit:$junit_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

group = 'org.mifos'
version = '2.0.4-SNAPSHOT'
sourceCompatibility = '1.8'
def artifactId = 'fineract-client'
def versionNumber = version

publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)
//            artifactId = rootProject.name
        }
    }
}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar {
    enabled = true
}

artifactory {
    contextUrl = 'https://jfrog.sandbox.fynarfin.io/artifactory' // base artifactory url
    publish {
        repository {
            repoKey = 'fyn-libs-snapshot'    //Artifactory repository key to publish to
            // username = 'avik@fynarfin.io'    publisher user name
            // password = '****'                publisher password
            username = "<admin>"
            password = "<password>"
            maven = true
        }
        defaults {
            publications('mavenJava')
        }
    }

}

artifactoryPublish {
    dependsOn jar
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
