/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.ClientCollateralManagementData
import org.openapitools.client.models.ClientFamilyMembersData
import org.openapitools.client.models.ClientTimelineData
import org.openapitools.client.models.CodeValueData
import org.openapitools.client.models.DatatableData
import org.openapitools.client.models.EnumOptionData
import org.openapitools.client.models.ExternalId
import org.openapitools.client.models.GroupGeneralData
import org.openapitools.client.models.OfficeData
import org.openapitools.client.models.SavingsAccountData
import org.openapitools.client.models.SavingsProductData
import org.openapitools.client.models.StaffData

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param accountNo 
 * @param activationDate 
 * @param active 
 * @param address 
 * @param clientClassification 
 * @param clientClassificationId 
 * @param clientClassificationOptions 
 * @param clientCollateralManagements 
 * @param clientLegalFormOptions 
 * @param clientNonPersonConstitutionOptions 
 * @param clientNonPersonDetails 
 * @param clientNonPersonMainBusinessLineOptions 
 * @param clientType 
 * @param clientTypeId 
 * @param clientTypeOptions 
 * @param datatables 
 * @param dateFormat 
 * @param dateOfBirth 
 * @param displayName 
 * @param emailAddress 
 * @param externalId 
 * @param familyMemberOptions 
 * @param firstname 
 * @param fullname 
 * @param gender 
 * @param genderId 
 * @param genderOptions 
 * @param groups 
 * @param id 
 * @param imageId 
 * @param imagePresent 
 * @param isAddressEnabled 
 * @param isStaff 
 * @param lastname 
 * @param legalForm 
 * @param legalFormId 
 * @param locale 
 * @param middlename 
 * @param mobileNo 
 * @param narrations 
 * @param officeId 
 * @param officeName 
 * @param officeOptions 
 * @param rowIndex 
 * @param savingAccountOptions 
 * @param savingProductOptions 
 * @param savingsAccountId 
 * @param savingsProductId 
 * @param savingsProductName 
 * @param staffId 
 * @param staffName 
 * @param staffOptions 
 * @param status 
 * @param subStatus 
 * @param submittedOnDate 
 * @param timeline 
 * @param transferToOfficeId 
 * @param transferToOfficeName 
 */


data class ClientData (

    @Json(name = "accountNo")
    val accountNo: kotlin.String? = null,

    @Json(name = "activationDate")
    val activationDate: java.time.LocalDate? = null,

    @Json(name = "active")
    val active: kotlin.Boolean? = null,

    @Json(name = "address")
    val address: kotlin.collections.List<kotlin.Any>? = null,

    @Json(name = "clientClassification")
    val clientClassification: CodeValueData? = null,

    @Json(name = "clientClassificationId")
    val clientClassificationId: kotlin.Long? = null,

    @Json(name = "clientClassificationOptions")
    val clientClassificationOptions: kotlin.collections.List<CodeValueData>? = null,

    @Json(name = "clientCollateralManagements")
    val clientCollateralManagements: kotlin.collections.Set<ClientCollateralManagementData>? = null,

    @Json(name = "clientLegalFormOptions")
    val clientLegalFormOptions: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "clientNonPersonConstitutionOptions")
    val clientNonPersonConstitutionOptions: kotlin.collections.List<CodeValueData>? = null,

    @Json(name = "clientNonPersonDetails")
    val clientNonPersonDetails: kotlin.Any? = null,

    @Json(name = "clientNonPersonMainBusinessLineOptions")
    val clientNonPersonMainBusinessLineOptions: kotlin.collections.List<CodeValueData>? = null,

    @Json(name = "clientType")
    val clientType: CodeValueData? = null,

    @Json(name = "clientTypeId")
    val clientTypeId: kotlin.Long? = null,

    @Json(name = "clientTypeOptions")
    val clientTypeOptions: kotlin.collections.List<CodeValueData>? = null,

    @Json(name = "datatables")
    val datatables: kotlin.collections.List<DatatableData>? = null,

    @Json(name = "dateFormat")
    val dateFormat: kotlin.String? = null,

    @Json(name = "dateOfBirth")
    val dateOfBirth: java.time.LocalDate? = null,

    @Json(name = "displayName")
    val displayName: kotlin.String? = null,

    @Json(name = "emailAddress")
    val emailAddress: kotlin.String? = null,

    @Json(name = "externalId")
    val externalId: ExternalId? = null,

    @Json(name = "familyMemberOptions")
    val familyMemberOptions: ClientFamilyMembersData? = null,

    @Json(name = "firstname")
    val firstname: kotlin.String? = null,

    @Json(name = "fullname")
    val fullname: kotlin.String? = null,

    @Json(name = "gender")
    val gender: CodeValueData? = null,

    @Json(name = "genderId")
    val genderId: kotlin.Long? = null,

    @Json(name = "genderOptions")
    val genderOptions: kotlin.collections.List<CodeValueData>? = null,

    @Json(name = "groups")
    val groups: kotlin.collections.List<GroupGeneralData>? = null,

    @Json(name = "id")
    val id: kotlin.Long? = null,

    @Json(name = "imageId")
    val imageId: kotlin.Long? = null,

    @Json(name = "imagePresent")
    val imagePresent: kotlin.Boolean? = null,

    @Json(name = "isAddressEnabled")
    val isAddressEnabled: kotlin.Boolean? = null,

    @Json(name = "isStaff")
    val isStaff: kotlin.Boolean? = null,

    @Json(name = "lastname")
    val lastname: kotlin.String? = null,

    @Json(name = "legalForm")
    val legalForm: EnumOptionData? = null,

    @Json(name = "legalFormId")
    val legalFormId: kotlin.Long? = null,

    @Json(name = "locale")
    val locale: kotlin.String? = null,

    @Json(name = "middlename")
    val middlename: kotlin.String? = null,

    @Json(name = "mobileNo")
    val mobileNo: kotlin.String? = null,

    @Json(name = "narrations")
    val narrations: kotlin.collections.List<CodeValueData>? = null,

    @Json(name = "officeId")
    val officeId: kotlin.Long? = null,

    @Json(name = "officeName")
    val officeName: kotlin.String? = null,

    @Json(name = "officeOptions")
    val officeOptions: kotlin.collections.List<OfficeData>? = null,

    @Json(name = "rowIndex")
    val rowIndex: kotlin.Int? = null,

    @Json(name = "savingAccountOptions")
    val savingAccountOptions: kotlin.collections.List<SavingsAccountData>? = null,

    @Json(name = "savingProductOptions")
    val savingProductOptions: kotlin.collections.List<SavingsProductData>? = null,

    @Json(name = "savingsAccountId")
    val savingsAccountId: kotlin.Long? = null,

    @Json(name = "savingsProductId")
    val savingsProductId: kotlin.Long? = null,

    @Json(name = "savingsProductName")
    val savingsProductName: kotlin.String? = null,

    @Json(name = "staffId")
    val staffId: kotlin.Long? = null,

    @Json(name = "staffName")
    val staffName: kotlin.String? = null,

    @Json(name = "staffOptions")
    val staffOptions: kotlin.collections.List<StaffData>? = null,

    @Json(name = "status")
    val status: EnumOptionData? = null,

    @Json(name = "subStatus")
    val subStatus: CodeValueData? = null,

    @Json(name = "submittedOnDate")
    val submittedOnDate: java.time.LocalDate? = null,

    @Json(name = "timeline")
    val timeline: ClientTimelineData? = null,

    @Json(name = "transferToOfficeId")
    val transferToOfficeId: kotlin.Long? = null,

    @Json(name = "transferToOfficeName")
    val transferToOfficeName: kotlin.String? = null

) {


}

