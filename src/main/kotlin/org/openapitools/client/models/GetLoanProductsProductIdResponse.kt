/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.AdvancedPaymentData
import org.openapitools.client.models.EnumOptionData
import org.openapitools.client.models.GetDelinquencyBucketsResponse
import org.openapitools.client.models.GetLoanAccountingMappings
import org.openapitools.client.models.GetLoanFeeToIncomeAccountMappings
import org.openapitools.client.models.GetLoanPaymentChannelToFundSourceMappings
import org.openapitools.client.models.GetLoanProductsAccountingRule
import org.openapitools.client.models.GetLoanProductsAmortizationType
import org.openapitools.client.models.GetLoanProductsCurrency
import org.openapitools.client.models.GetLoanProductsInterestRateFrequencyType
import org.openapitools.client.models.GetLoanProductsInterestTemplateType
import org.openapitools.client.models.GetLoanProductsPrincipalVariationsForBorrowerCycle
import org.openapitools.client.models.GetLoanProductsRepaymentFrequencyType
import org.openapitools.client.models.GetLoanProductsRepaymentStartDateType
import org.openapitools.client.models.GetLoansProductsInterestCalculationPeriodType

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * GetLoanProductsProductIdResponse
 *
 * @param accountingMappings 
 * @param accountingRule 
 * @param amortizationType 
 * @param annualInterestRate 
 * @param charges 
 * @param currency 
 * @param delinquencyBucket 
 * @param disableScheduleExtensionForDownPayment 
 * @param disallowExpectedDisbursements 
 * @param disbursedAmountPercentageForDownPayment 
 * @param dueDaysForRepaymentEvent 
 * @param enableAutoRepaymentForDownPayment 
 * @param enableDownPayment 
 * @param enableInstallmentLevelDelinquency 
 * @param feeToIncomeAccountMappings 
 * @param fixedPrincipalPercentagePerInstallment 
 * @param id 
 * @param inArrearsTolerance 
 * @param includeInBorrowerCycle 
 * @param interestCalculationPeriodType 
 * @param interestRateFrequencyType 
 * @param interestRatePerPeriod 
 * @param interestRateVariationsForBorrowerCycle 
 * @param interestType 
 * @param loanScheduleProcessingType 
 * @param loanScheduleType 
 * @param maxPrincipal 
 * @param maxTrancheCount 
 * @param minPrincipal 
 * @param multiDisburseLoan 
 * @param name 
 * @param numberOfRepaymentVariationsForBorrowerCycle 
 * @param numberOfRepayments 
 * @param outstandingLoanBalance 
 * @param overDueDaysForRepaymentEvent 
 * @param overdueDaysForNPA 
 * @param paymentAllocation 
 * @param paymentChannelToFundSourceMappings 
 * @param principal 
 * @param principalThresholdForLastInstalment 
 * @param productsPrincipalVariationsForBorrowerCycle 
 * @param repaymentEvery 
 * @param repaymentFrequencyType 
 * @param repaymentStartDateType 
 * @param shortName 
 * @param status 
 * @param transactionProcessingStrategyCode 
 * @param transactionProcessingStrategyName 
 * @param useBorrowerCycle 
 */


data class GetLoanProductsProductIdResponse (

    @Json(name = "accountingMappings")
    val accountingMappings: GetLoanAccountingMappings? = null,

    @Json(name = "accountingRule")
    val accountingRule: GetLoanProductsAccountingRule? = null,

    @Json(name = "amortizationType")
    val amortizationType: GetLoanProductsAmortizationType? = null,

    @Json(name = "annualInterestRate")
    val annualInterestRate: kotlin.Double? = null,

    @Json(name = "charges")
    val charges: kotlin.collections.List<kotlin.Int>? = null,

    @Json(name = "currency")
    val currency: GetLoanProductsCurrency? = null,

    @Json(name = "delinquencyBucket")
    val delinquencyBucket: GetDelinquencyBucketsResponse? = null,

    @Json(name = "disableScheduleExtensionForDownPayment")
    val disableScheduleExtensionForDownPayment: kotlin.Boolean? = null,

    @Json(name = "disallowExpectedDisbursements")
    val disallowExpectedDisbursements: kotlin.Boolean? = null,

    @Json(name = "disbursedAmountPercentageForDownPayment")
    val disbursedAmountPercentageForDownPayment: java.math.BigDecimal? = null,

    @Json(name = "dueDaysForRepaymentEvent")
    val dueDaysForRepaymentEvent: kotlin.Int? = null,

    @Json(name = "enableAutoRepaymentForDownPayment")
    val enableAutoRepaymentForDownPayment: kotlin.Boolean? = null,

    @Json(name = "enableDownPayment")
    val enableDownPayment: kotlin.Boolean? = null,

    @Json(name = "enableInstallmentLevelDelinquency")
    val enableInstallmentLevelDelinquency: kotlin.Boolean? = null,

    @Json(name = "feeToIncomeAccountMappings")
    val feeToIncomeAccountMappings: kotlin.collections.Set<GetLoanFeeToIncomeAccountMappings>? = null,

    @Json(name = "fixedPrincipalPercentagePerInstallment")
    val fixedPrincipalPercentagePerInstallment: java.math.BigDecimal? = null,

    @Json(name = "id")
    val id: kotlin.Long? = null,

    @Json(name = "inArrearsTolerance")
    val inArrearsTolerance: kotlin.Int? = null,

    @Json(name = "includeInBorrowerCycle")
    val includeInBorrowerCycle: kotlin.Boolean? = null,

    @Json(name = "interestCalculationPeriodType")
    val interestCalculationPeriodType: GetLoansProductsInterestCalculationPeriodType? = null,

    @Json(name = "interestRateFrequencyType")
    val interestRateFrequencyType: GetLoanProductsInterestRateFrequencyType? = null,

    @Json(name = "interestRatePerPeriod")
    val interestRatePerPeriod: kotlin.Double? = null,

    @Json(name = "interestRateVariationsForBorrowerCycle")
    val interestRateVariationsForBorrowerCycle: kotlin.collections.List<kotlin.Int>? = null,

    @Json(name = "interestType")
    val interestType: GetLoanProductsInterestTemplateType? = null,

    @Json(name = "loanScheduleProcessingType")
    val loanScheduleProcessingType: EnumOptionData? = null,

    @Json(name = "loanScheduleType")
    val loanScheduleType: EnumOptionData? = null,

    @Json(name = "maxPrincipal")
    val maxPrincipal: kotlin.Double? = null,

    @Json(name = "maxTrancheCount")
    val maxTrancheCount: kotlin.Int? = null,

    @Json(name = "minPrincipal")
    val minPrincipal: kotlin.Double? = null,

    @Json(name = "multiDisburseLoan")
    val multiDisburseLoan: kotlin.Boolean? = null,

    @Json(name = "name")
    val name: kotlin.String? = null,

    @Json(name = "numberOfRepaymentVariationsForBorrowerCycle")
    val numberOfRepaymentVariationsForBorrowerCycle: kotlin.collections.List<kotlin.Int>? = null,

    @Json(name = "numberOfRepayments")
    val numberOfRepayments: kotlin.Int? = null,

    @Json(name = "outstandingLoanBalance")
    val outstandingLoanBalance: kotlin.Double? = null,

    @Json(name = "overDueDaysForRepaymentEvent")
    val overDueDaysForRepaymentEvent: kotlin.Int? = null,

    @Json(name = "overdueDaysForNPA")
    val overdueDaysForNPA: kotlin.Int? = null,

    @Json(name = "paymentAllocation")
    val paymentAllocation: kotlin.collections.List<AdvancedPaymentData>? = null,

    @Json(name = "paymentChannelToFundSourceMappings")
    val paymentChannelToFundSourceMappings: kotlin.collections.Set<GetLoanPaymentChannelToFundSourceMappings>? = null,

    @Json(name = "principal")
    val principal: kotlin.Double? = null,

    @Json(name = "principalThresholdForLastInstalment")
    val principalThresholdForLastInstalment: kotlin.Int? = null,

    @Json(name = "productsPrincipalVariationsForBorrowerCycle")
    val productsPrincipalVariationsForBorrowerCycle: kotlin.collections.Set<GetLoanProductsPrincipalVariationsForBorrowerCycle>? = null,

    @Json(name = "repaymentEvery")
    val repaymentEvery: kotlin.Int? = null,

    @Json(name = "repaymentFrequencyType")
    val repaymentFrequencyType: GetLoanProductsRepaymentFrequencyType? = null,

    @Json(name = "repaymentStartDateType")
    val repaymentStartDateType: GetLoanProductsRepaymentStartDateType? = null,

    @Json(name = "shortName")
    val shortName: kotlin.String? = null,

    @Json(name = "status")
    val status: kotlin.String? = null,

    @Json(name = "transactionProcessingStrategyCode")
    val transactionProcessingStrategyCode: kotlin.String? = null,

    @Json(name = "transactionProcessingStrategyName")
    val transactionProcessingStrategyName: kotlin.String? = null,

    @Json(name = "useBorrowerCycle")
    val useBorrowerCycle: kotlin.Boolean? = null

) {


}

