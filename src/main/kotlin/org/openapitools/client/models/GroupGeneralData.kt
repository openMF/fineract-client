/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.CalendarData
import org.openapitools.client.models.CenterData
import org.openapitools.client.models.ClientData
import org.openapitools.client.models.CodeValueData
import org.openapitools.client.models.DatatableData
import org.openapitools.client.models.EnumOptionData
import org.openapitools.client.models.GroupRoleData
import org.openapitools.client.models.OfficeData
import org.openapitools.client.models.StaffData

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param accountNo 
 * @param activationDate 
 * @param active 
 * @param activeClientMembers 
 * @param availableRoles 
 * @param calendarsData 
 * @param centerId 
 * @param centerName 
 * @param centerOptions 
 * @param childGroup 
 * @param clientMembers 
 * @param clientOptions 
 * @param closureReasons 
 * @param collectionMeetingCalendar 
 * @param datatables 
 * @param dateFormat 
 * @param externalId 
 * @param groupLevel 
 * @param groupRoles 
 * @param hierarchy 
 * @param id 
 * @param locale 
 * @param name 
 * @param officeId 
 * @param officeName 
 * @param officeOptions 
 * @param parentId 
 * @param rowIndex 
 * @param selectedRole 
 * @param staffId 
 * @param staffName 
 * @param staffOptions 
 * @param status 
 * @param submittedOnDate 
 * @param timeline 
 */


data class GroupGeneralData (

    @Json(name = "accountNo")
    val accountNo: kotlin.String? = null,

    @Json(name = "activationDate")
    val activationDate: java.time.LocalDate? = null,

    @Json(name = "active")
    val active: kotlin.Boolean? = null,

    @Json(name = "activeClientMembers")
    val activeClientMembers: kotlin.collections.List<ClientData>? = null,

    @Json(name = "availableRoles")
    val availableRoles: kotlin.collections.List<CodeValueData>? = null,

    @Json(name = "calendarsData")
    val calendarsData: kotlin.collections.List<CalendarData>? = null,

    @Json(name = "centerId")
    val centerId: kotlin.Long? = null,

    @Json(name = "centerName")
    val centerName: kotlin.String? = null,

    @Json(name = "centerOptions")
    val centerOptions: kotlin.collections.List<CenterData>? = null,

    @Json(name = "childGroup")
    val childGroup: kotlin.Boolean? = null,

    @Json(name = "clientMembers")
    val clientMembers: kotlin.collections.List<ClientData>? = null,

    @Json(name = "clientOptions")
    val clientOptions: kotlin.collections.List<ClientData>? = null,

    @Json(name = "closureReasons")
    val closureReasons: kotlin.collections.List<CodeValueData>? = null,

    @Json(name = "collectionMeetingCalendar")
    val collectionMeetingCalendar: CalendarData? = null,

    @Json(name = "datatables")
    val datatables: kotlin.collections.List<DatatableData>? = null,

    @Json(name = "dateFormat")
    val dateFormat: kotlin.String? = null,

    @Json(name = "externalId")
    val externalId: kotlin.String? = null,

    @Json(name = "groupLevel")
    val groupLevel: kotlin.String? = null,

    @Json(name = "groupRoles")
    val groupRoles: kotlin.collections.List<GroupRoleData>? = null,

    @Json(name = "hierarchy")
    val hierarchy: kotlin.String? = null,

    @Json(name = "id")
    val id: kotlin.Long? = null,

    @Json(name = "locale")
    val locale: kotlin.String? = null,

    @Json(name = "name")
    val name: kotlin.String? = null,

    @Json(name = "officeId")
    val officeId: kotlin.Long? = null,

    @Json(name = "officeName")
    val officeName: kotlin.String? = null,

    @Json(name = "officeOptions")
    val officeOptions: kotlin.collections.List<OfficeData>? = null,

    @Json(name = "parentId")
    val parentId: kotlin.Long? = null,

    @Json(name = "rowIndex")
    val rowIndex: kotlin.Int? = null,

    @Json(name = "selectedRole")
    val selectedRole: GroupRoleData? = null,

    @Json(name = "staffId")
    val staffId: kotlin.Long? = null,

    @Json(name = "staffName")
    val staffName: kotlin.String? = null,

    @Json(name = "staffOptions")
    val staffOptions: kotlin.collections.List<StaffData>? = null,

    @Json(name = "status")
    val status: EnumOptionData? = null,

    @Json(name = "submittedOnDate")
    val submittedOnDate: java.time.LocalDate? = null,

    @Json(name = "timeline")
    val timeline: kotlin.Any? = null

) {


}

