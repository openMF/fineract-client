/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.CreditDebit
import org.openapitools.client.models.CurrencyData
import org.openapitools.client.models.EnumOptionData
import org.openapitools.client.models.TransactionDetailData

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param accountNumber 
 * @param amount 
 * @param bankNumber 
 * @param checkNumber 
 * @param comments 
 * @param createdByUserId 
 * @param createdByUserName 
 * @param createdDate 
 * @param credits 
 * @param currency 
 * @param currencyCode 
 * @param dateFormat 
 * @param debits 
 * @param entityId 
 * @param entityType 
 * @param entryType 
 * @param glAccountCode 
 * @param glAccountId 
 * @param glAccountName 
 * @param glAccountType 
 * @param id 
 * @param locale 
 * @param manualEntry 
 * @param officeId 
 * @param officeName 
 * @param officeRunningBalance 
 * @param organizationRunningBalance 
 * @param paymentTypeId 
 * @param receiptNumber 
 * @param referenceNumber 
 * @param reversed 
 * @param routingCode 
 * @param rowIndex 
 * @param runningBalanceComputed 
 * @param savingTransactionId 
 * @param submittedOnDate 
 * @param transactionDate 
 * @param transactionDetails 
 * @param transactionId 
 */


data class JournalEntryData (

    @Json(name = "accountNumber")
    val accountNumber: kotlin.String? = null,

    @Json(name = "amount")
    val amount: java.math.BigDecimal? = null,

    @Json(name = "bankNumber")
    val bankNumber: kotlin.String? = null,

    @Json(name = "checkNumber")
    val checkNumber: kotlin.String? = null,

    @Json(name = "comments")
    val comments: kotlin.String? = null,

    @Json(name = "createdByUserId")
    val createdByUserId: kotlin.Long? = null,

    @Json(name = "createdByUserName")
    val createdByUserName: kotlin.String? = null,

    @Json(name = "createdDate")
    val createdDate: java.time.LocalDate? = null,

    @Json(name = "credits")
    val credits: kotlin.collections.List<CreditDebit>? = null,

    @Json(name = "currency")
    val currency: CurrencyData? = null,

    @Json(name = "currencyCode")
    val currencyCode: kotlin.String? = null,

    @Json(name = "dateFormat")
    val dateFormat: kotlin.String? = null,

    @Json(name = "debits")
    val debits: kotlin.collections.List<CreditDebit>? = null,

    @Json(name = "entityId")
    val entityId: kotlin.Long? = null,

    @Json(name = "entityType")
    val entityType: EnumOptionData? = null,

    @Json(name = "entryType")
    val entryType: EnumOptionData? = null,

    @Json(name = "glAccountCode")
    val glAccountCode: kotlin.String? = null,

    @Json(name = "glAccountId")
    val glAccountId: kotlin.Long? = null,

    @Json(name = "glAccountName")
    val glAccountName: kotlin.String? = null,

    @Json(name = "glAccountType")
    val glAccountType: EnumOptionData? = null,

    @Json(name = "id")
    val id: kotlin.Long? = null,

    @Json(name = "locale")
    val locale: kotlin.String? = null,

    @Json(name = "manualEntry")
    val manualEntry: kotlin.Boolean? = null,

    @Json(name = "officeId")
    val officeId: kotlin.Long? = null,

    @Json(name = "officeName")
    val officeName: kotlin.String? = null,

    @Json(name = "officeRunningBalance")
    val officeRunningBalance: java.math.BigDecimal? = null,

    @Json(name = "organizationRunningBalance")
    val organizationRunningBalance: java.math.BigDecimal? = null,

    @Json(name = "paymentTypeId")
    val paymentTypeId: kotlin.Long? = null,

    @Json(name = "receiptNumber")
    val receiptNumber: kotlin.String? = null,

    @Json(name = "referenceNumber")
    val referenceNumber: kotlin.String? = null,

    @Json(name = "reversed")
    val reversed: kotlin.Boolean? = null,

    @Json(name = "routingCode")
    val routingCode: kotlin.String? = null,

    @Json(name = "rowIndex")
    val rowIndex: kotlin.Int? = null,

    @Json(name = "runningBalanceComputed")
    val runningBalanceComputed: kotlin.Boolean? = null,

    @Json(name = "savingTransactionId")
    val savingTransactionId: kotlin.Long? = null,

    @Json(name = "submittedOnDate")
    val submittedOnDate: java.time.LocalDate? = null,

    @Json(name = "transactionDate")
    val transactionDate: java.time.LocalDate? = null,

    @Json(name = "transactionDetails")
    val transactionDetails: TransactionDetailData? = null,

    @Json(name = "transactionId")
    val transactionId: kotlin.String? = null

) {


}

