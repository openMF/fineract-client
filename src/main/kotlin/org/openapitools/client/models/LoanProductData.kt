/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.AdvancedPaymentData
import org.openapitools.client.models.ChargeData
import org.openapitools.client.models.ChargeToGLAccountMapper
import org.openapitools.client.models.CurrencyData
import org.openapitools.client.models.DelinquencyBucketData
import org.openapitools.client.models.EnumOptionData
import org.openapitools.client.models.FloatingRateData
import org.openapitools.client.models.FundData
import org.openapitools.client.models.GLAccountData
import org.openapitools.client.models.LoanProductBorrowerCycleVariationData
import org.openapitools.client.models.LoanProductConfigurableAttributes
import org.openapitools.client.models.LoanProductGuaranteeData
import org.openapitools.client.models.LoanProductInterestRecalculationData
import org.openapitools.client.models.PaymentTypeData
import org.openapitools.client.models.PaymentTypeToGLAccountMapper
import org.openapitools.client.models.RateData
import org.openapitools.client.models.TransactionProcessingStrategyData

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param accountMovesOutOfNPAOnlyOnArrearsCompletion 
 * @param accountingMappingOptions 
 * @param accountingMappings 
 * @param accountingRule 
 * @param accountingRuleOptions 
 * @param advancedPaymentAllocationFutureInstallmentAllocationRules 
 * @param advancedPaymentAllocationTransactionTypes 
 * @param advancedPaymentAllocationTypes 
 * @param allowApprovedDisbursedAmountsOverApplied 
 * @param allowAttributeOverrides 
 * @param allowPartialPeriodInterestCalculation 
 * @param allowVariableInstallments 
 * @param amortizationType 
 * @param amortizationTypeOptions 
 * @param annualInterestRate 
 * @param canDefineInstallmentAmount 
 * @param canUseForTopup 
 * @param chargeOptions 
 * @param charges 
 * @param closeDate 
 * @param compoundingToBePostedAsTransaction 
 * @param currency 
 * @param currencyOptions 
 * @param daysInMonthType 
 * @param daysInMonthTypeOptions 
 * @param daysInYearType 
 * @param daysInYearTypeOptions 
 * @param defaultDifferentialLendingRate 
 * @param delinquencyBucket 
 * @param delinquencyBucketOptions 
 * @param description 
 * @param disableScheduleExtensionForDownPayment 
 * @param disallowExpectedDisbursements 
 * @param disbursedAmountPercentageForDownPayment 
 * @param dueDaysForRepaymentEvent 
 * @param enableAutoRepaymentForDownPayment 
 * @param enableDownPayment 
 * @param enableInstallmentLevelDelinquency 
 * @param equalAmortization 
 * @param externalId 
 * @param feeToIncomeAccountMappings 
 * @param fixedPrincipalPercentagePerInstallment 
 * @param floatingInterestRateCalculationAllowed 
 * @param floatingRateId 
 * @param floatingRateName 
 * @param floatingRateOptions 
 * @param fundId 
 * @param fundName 
 * @param fundOptions 
 * @param graceOnArrearsAgeing 
 * @param graceOnInterestCharged 
 * @param graceOnInterestPayment 
 * @param graceOnPrincipalPayment 
 * @param holdGuaranteeFunds 
 * @param id 
 * @param inArrearsTolerance 
 * @param includeInBorrowerCycle 
 * @param installmentAmountInMultiplesOf 
 * @param interestCalculationPeriodType 
 * @param interestCalculationPeriodTypeOptions 
 * @param interestRateDifferential 
 * @param interestRateFrequencyType 
 * @param interestRateFrequencyTypeOptions 
 * @param interestRatePerPeriod 
 * @param interestRateVariationsForBorrowerCycle 
 * @param interestRecalculationCompoundingTypeOptions 
 * @param interestRecalculationData 
 * @param interestRecalculationDayOfWeekTypeOptions 
 * @param interestRecalculationEnabled 
 * @param interestRecalculationFrequencyTypeOptions 
 * @param interestRecalculationNthDayTypeOptions 
 * @param interestType 
 * @param interestTypeOptions 
 * @param isAllowPartialPeriodInterestCalculation 
 * @param isEqualAmortization 
 * @param isFloatingInterestRateCalculationAllowed 
 * @param isInterestRecalculationEnabled 
 * @param isLinkedToFloatingInterestRates 
 * @param isRatesEnabled 
 * @param linkedToFloatingInterestRates 
 * @param loanProductConfigurableAttributes 
 * @param loanScheduleProcessingType 
 * @param loanScheduleProcessingTypeOptions 
 * @param loanScheduleType 
 * @param loanScheduleTypeOptions 
 * @param maxDifferentialLendingRate 
 * @param maxInterestRatePerPeriod 
 * @param maxNumberOfRepayments 
 * @param maxPrincipal 
 * @param maxTrancheCount 
 * @param maximumGap 
 * @param minDifferentialLendingRate 
 * @param minInterestRatePerPeriod 
 * @param minNumberOfRepayments 
 * @param minPrincipal 
 * @param minimumDaysBetweenDisbursalAndFirstRepayment 
 * @param minimumGap 
 * @param multiDisburseLoan 
 * @param name 
 * @param numberOfRepaymentVariationsForBorrowerCycle 
 * @param numberOfRepayments 
 * @param outstandingLoanBalance 
 * @param overAppliedCalculationType 
 * @param overAppliedNumber 
 * @param overDueDaysForRepaymentEvent 
 * @param overdueDaysForNPA 
 * @param paymentAllocation 
 * @param paymentChannelToFundSourceMappings 
 * @param paymentTypeOptions 
 * @param penaltyOptions 
 * @param penaltyToIncomeAccountMappings 
 * @param preClosureInterestCalculationStrategyOptions 
 * @param principal 
 * @param principalThresholdForLastInstallment 
 * @param principalVariationsForBorrowerCycle 
 * @param productGuaranteeData 
 * @param rateOptions 
 * @param rates 
 * @param ratesEnabled 
 * @param recurringMoratoriumOnPrincipalPeriods 
 * @param repaymentEvery 
 * @param repaymentFrequencyType 
 * @param repaymentFrequencyTypeOptions 
 * @param repaymentStartDateType 
 * @param repaymentStartDateTypeOptions 
 * @param rescheduleStrategyTypeOptions 
 * @param shortName 
 * @param startDate 
 * @param status 
 * @param syncExpectedWithDisbursementDate 
 * @param transactionProcessingStrategyCode 
 * @param transactionProcessingStrategyName 
 * @param transactionProcessingStrategyOptions 
 * @param useBorrowerCycle 
 * @param valueConditionTypeOptions 
 */


data class LoanProductData (

    @Json(name = "accountMovesOutOfNPAOnlyOnArrearsCompletion")
    val accountMovesOutOfNPAOnlyOnArrearsCompletion: kotlin.Boolean? = null,

    @Json(name = "accountingMappingOptions")
    val accountingMappingOptions: kotlin.collections.Map<kotlin.String, kotlin.collections.List<GLAccountData>>? = null,

    @Json(name = "accountingMappings")
    val accountingMappings: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null,

    @Json(name = "accountingRule")
    val accountingRule: EnumOptionData? = null,

    @Json(name = "accountingRuleOptions")
    val accountingRuleOptions: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "advancedPaymentAllocationFutureInstallmentAllocationRules")
    val advancedPaymentAllocationFutureInstallmentAllocationRules: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "advancedPaymentAllocationTransactionTypes")
    val advancedPaymentAllocationTransactionTypes: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "advancedPaymentAllocationTypes")
    val advancedPaymentAllocationTypes: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "allowApprovedDisbursedAmountsOverApplied")
    val allowApprovedDisbursedAmountsOverApplied: kotlin.Boolean? = null,

    @Json(name = "allowAttributeOverrides")
    val allowAttributeOverrides: LoanProductConfigurableAttributes? = null,

    @Json(name = "allowPartialPeriodInterestCalculation")
    val allowPartialPeriodInterestCalculation: kotlin.Boolean? = null,

    @Json(name = "allowVariableInstallments")
    val allowVariableInstallments: kotlin.Boolean? = null,

    @Json(name = "amortizationType")
    val amortizationType: EnumOptionData? = null,

    @Json(name = "amortizationTypeOptions")
    val amortizationTypeOptions: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "annualInterestRate")
    val annualInterestRate: java.math.BigDecimal? = null,

    @Json(name = "canDefineInstallmentAmount")
    val canDefineInstallmentAmount: kotlin.Boolean? = null,

    @Json(name = "canUseForTopup")
    val canUseForTopup: kotlin.Boolean? = null,

    @Json(name = "chargeOptions")
    val chargeOptions: kotlin.collections.List<ChargeData>? = null,

    @Json(name = "charges")
    val charges: kotlin.collections.List<ChargeData>? = null,

    @Json(name = "closeDate")
    val closeDate: java.time.LocalDate? = null,

    @Json(name = "compoundingToBePostedAsTransaction")
    val compoundingToBePostedAsTransaction: kotlin.Boolean? = null,

    @Json(name = "currency")
    val currency: CurrencyData? = null,

    @Json(name = "currencyOptions")
    val currencyOptions: kotlin.collections.List<CurrencyData>? = null,

    @Json(name = "daysInMonthType")
    val daysInMonthType: EnumOptionData? = null,

    @Json(name = "daysInMonthTypeOptions")
    val daysInMonthTypeOptions: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "daysInYearType")
    val daysInYearType: EnumOptionData? = null,

    @Json(name = "daysInYearTypeOptions")
    val daysInYearTypeOptions: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "defaultDifferentialLendingRate")
    val defaultDifferentialLendingRate: java.math.BigDecimal? = null,

    @Json(name = "delinquencyBucket")
    val delinquencyBucket: DelinquencyBucketData? = null,

    @Json(name = "delinquencyBucketOptions")
    val delinquencyBucketOptions: kotlin.collections.List<DelinquencyBucketData>? = null,

    @Json(name = "description")
    val description: kotlin.String? = null,

    @Json(name = "disableScheduleExtensionForDownPayment")
    val disableScheduleExtensionForDownPayment: kotlin.Boolean? = null,

    @Json(name = "disallowExpectedDisbursements")
    val disallowExpectedDisbursements: kotlin.Boolean? = null,

    @Json(name = "disbursedAmountPercentageForDownPayment")
    val disbursedAmountPercentageForDownPayment: java.math.BigDecimal? = null,

    @Json(name = "dueDaysForRepaymentEvent")
    val dueDaysForRepaymentEvent: kotlin.Int? = null,

    @Json(name = "enableAutoRepaymentForDownPayment")
    val enableAutoRepaymentForDownPayment: kotlin.Boolean? = null,

    @Json(name = "enableDownPayment")
    val enableDownPayment: kotlin.Boolean? = null,

    @Json(name = "enableInstallmentLevelDelinquency")
    val enableInstallmentLevelDelinquency: kotlin.Boolean? = null,

    @Json(name = "equalAmortization")
    val equalAmortization: kotlin.Boolean? = null,

    @Json(name = "externalId")
    val externalId: kotlin.String? = null,

    @Json(name = "feeToIncomeAccountMappings")
    val feeToIncomeAccountMappings: kotlin.collections.List<ChargeToGLAccountMapper>? = null,

    @Json(name = "fixedPrincipalPercentagePerInstallment")
    val fixedPrincipalPercentagePerInstallment: java.math.BigDecimal? = null,

    @Json(name = "floatingInterestRateCalculationAllowed")
    val floatingInterestRateCalculationAllowed: kotlin.Boolean? = null,

    @Json(name = "floatingRateId")
    val floatingRateId: kotlin.Int? = null,

    @Json(name = "floatingRateName")
    val floatingRateName: kotlin.String? = null,

    @Json(name = "floatingRateOptions")
    val floatingRateOptions: kotlin.collections.List<FloatingRateData>? = null,

    @Json(name = "fundId")
    val fundId: kotlin.Long? = null,

    @Json(name = "fundName")
    val fundName: kotlin.String? = null,

    @Json(name = "fundOptions")
    val fundOptions: kotlin.collections.List<FundData>? = null,

    @Json(name = "graceOnArrearsAgeing")
    val graceOnArrearsAgeing: kotlin.Int? = null,

    @Json(name = "graceOnInterestCharged")
    val graceOnInterestCharged: kotlin.Int? = null,

    @Json(name = "graceOnInterestPayment")
    val graceOnInterestPayment: kotlin.Int? = null,

    @Json(name = "graceOnPrincipalPayment")
    val graceOnPrincipalPayment: kotlin.Int? = null,

    @Json(name = "holdGuaranteeFunds")
    val holdGuaranteeFunds: kotlin.Boolean? = null,

    @Json(name = "id")
    val id: kotlin.Long? = null,

    @Json(name = "inArrearsTolerance")
    val inArrearsTolerance: java.math.BigDecimal? = null,

    @Json(name = "includeInBorrowerCycle")
    val includeInBorrowerCycle: kotlin.Boolean? = null,

    @Json(name = "installmentAmountInMultiplesOf")
    val installmentAmountInMultiplesOf: kotlin.Int? = null,

    @Json(name = "interestCalculationPeriodType")
    val interestCalculationPeriodType: EnumOptionData? = null,

    @Json(name = "interestCalculationPeriodTypeOptions")
    val interestCalculationPeriodTypeOptions: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "interestRateDifferential")
    val interestRateDifferential: java.math.BigDecimal? = null,

    @Json(name = "interestRateFrequencyType")
    val interestRateFrequencyType: EnumOptionData? = null,

    @Json(name = "interestRateFrequencyTypeOptions")
    val interestRateFrequencyTypeOptions: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "interestRatePerPeriod")
    val interestRatePerPeriod: java.math.BigDecimal? = null,

    @Json(name = "interestRateVariationsForBorrowerCycle")
    val interestRateVariationsForBorrowerCycle: kotlin.collections.List<LoanProductBorrowerCycleVariationData>? = null,

    @Json(name = "interestRecalculationCompoundingTypeOptions")
    val interestRecalculationCompoundingTypeOptions: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "interestRecalculationData")
    val interestRecalculationData: LoanProductInterestRecalculationData? = null,

    @Json(name = "interestRecalculationDayOfWeekTypeOptions")
    val interestRecalculationDayOfWeekTypeOptions: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "interestRecalculationEnabled")
    val interestRecalculationEnabled: kotlin.Boolean? = null,

    @Json(name = "interestRecalculationFrequencyTypeOptions")
    val interestRecalculationFrequencyTypeOptions: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "interestRecalculationNthDayTypeOptions")
    val interestRecalculationNthDayTypeOptions: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "interestType")
    val interestType: EnumOptionData? = null,

    @Json(name = "interestTypeOptions")
    val interestTypeOptions: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "isAllowPartialPeriodInterestCalculation")
    val isAllowPartialPeriodInterestCalculation: kotlin.Boolean? = null,

    @Json(name = "isEqualAmortization")
    val isEqualAmortization: kotlin.Boolean? = null,

    @Json(name = "isFloatingInterestRateCalculationAllowed")
    val isFloatingInterestRateCalculationAllowed: kotlin.Boolean? = null,

    @Json(name = "isInterestRecalculationEnabled")
    val isInterestRecalculationEnabled: kotlin.Boolean? = null,

    @Json(name = "isLinkedToFloatingInterestRates")
    val isLinkedToFloatingInterestRates: kotlin.Boolean? = null,

    @Json(name = "isRatesEnabled")
    val isRatesEnabled: kotlin.Boolean? = null,

    @Json(name = "linkedToFloatingInterestRates")
    val linkedToFloatingInterestRates: kotlin.Boolean? = null,

    @Json(name = "loanProductConfigurableAttributes")
    val loanProductConfigurableAttributes: LoanProductConfigurableAttributes? = null,

    @Json(name = "loanScheduleProcessingType")
    val loanScheduleProcessingType: EnumOptionData? = null,

    @Json(name = "loanScheduleProcessingTypeOptions")
    val loanScheduleProcessingTypeOptions: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "loanScheduleType")
    val loanScheduleType: EnumOptionData? = null,

    @Json(name = "loanScheduleTypeOptions")
    val loanScheduleTypeOptions: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "maxDifferentialLendingRate")
    val maxDifferentialLendingRate: java.math.BigDecimal? = null,

    @Json(name = "maxInterestRatePerPeriod")
    val maxInterestRatePerPeriod: java.math.BigDecimal? = null,

    @Json(name = "maxNumberOfRepayments")
    val maxNumberOfRepayments: kotlin.Int? = null,

    @Json(name = "maxPrincipal")
    val maxPrincipal: java.math.BigDecimal? = null,

    @Json(name = "maxTrancheCount")
    val maxTrancheCount: kotlin.Int? = null,

    @Json(name = "maximumGap")
    val maximumGap: kotlin.Int? = null,

    @Json(name = "minDifferentialLendingRate")
    val minDifferentialLendingRate: java.math.BigDecimal? = null,

    @Json(name = "minInterestRatePerPeriod")
    val minInterestRatePerPeriod: java.math.BigDecimal? = null,

    @Json(name = "minNumberOfRepayments")
    val minNumberOfRepayments: kotlin.Int? = null,

    @Json(name = "minPrincipal")
    val minPrincipal: java.math.BigDecimal? = null,

    @Json(name = "minimumDaysBetweenDisbursalAndFirstRepayment")
    val minimumDaysBetweenDisbursalAndFirstRepayment: kotlin.Int? = null,

    @Json(name = "minimumGap")
    val minimumGap: kotlin.Int? = null,

    @Json(name = "multiDisburseLoan")
    val multiDisburseLoan: kotlin.Boolean? = null,

    @Json(name = "name")
    val name: kotlin.String? = null,

    @Json(name = "numberOfRepaymentVariationsForBorrowerCycle")
    val numberOfRepaymentVariationsForBorrowerCycle: kotlin.collections.List<LoanProductBorrowerCycleVariationData>? = null,

    @Json(name = "numberOfRepayments")
    val numberOfRepayments: kotlin.Int? = null,

    @Json(name = "outstandingLoanBalance")
    val outstandingLoanBalance: java.math.BigDecimal? = null,

    @Json(name = "overAppliedCalculationType")
    val overAppliedCalculationType: kotlin.String? = null,

    @Json(name = "overAppliedNumber")
    val overAppliedNumber: kotlin.Int? = null,

    @Json(name = "overDueDaysForRepaymentEvent")
    val overDueDaysForRepaymentEvent: kotlin.Int? = null,

    @Json(name = "overdueDaysForNPA")
    val overdueDaysForNPA: kotlin.Int? = null,

    @Json(name = "paymentAllocation")
    val paymentAllocation: kotlin.collections.List<AdvancedPaymentData>? = null,

    @Json(name = "paymentChannelToFundSourceMappings")
    val paymentChannelToFundSourceMappings: kotlin.collections.List<PaymentTypeToGLAccountMapper>? = null,

    @Json(name = "paymentTypeOptions")
    val paymentTypeOptions: kotlin.collections.List<PaymentTypeData>? = null,

    @Json(name = "penaltyOptions")
    val penaltyOptions: kotlin.collections.List<ChargeData>? = null,

    @Json(name = "penaltyToIncomeAccountMappings")
    val penaltyToIncomeAccountMappings: kotlin.collections.List<ChargeToGLAccountMapper>? = null,

    @Json(name = "preClosureInterestCalculationStrategyOptions")
    val preClosureInterestCalculationStrategyOptions: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "principal")
    val principal: java.math.BigDecimal? = null,

    @Json(name = "principalThresholdForLastInstallment")
    val principalThresholdForLastInstallment: java.math.BigDecimal? = null,

    @Json(name = "principalVariationsForBorrowerCycle")
    val principalVariationsForBorrowerCycle: kotlin.collections.List<LoanProductBorrowerCycleVariationData>? = null,

    @Json(name = "productGuaranteeData")
    val productGuaranteeData: LoanProductGuaranteeData? = null,

    @Json(name = "rateOptions")
    val rateOptions: kotlin.collections.List<RateData>? = null,

    @Json(name = "rates")
    val rates: kotlin.collections.List<RateData>? = null,

    @Json(name = "ratesEnabled")
    val ratesEnabled: kotlin.Boolean? = null,

    @Json(name = "recurringMoratoriumOnPrincipalPeriods")
    val recurringMoratoriumOnPrincipalPeriods: kotlin.Int? = null,

    @Json(name = "repaymentEvery")
    val repaymentEvery: kotlin.Int? = null,

    @Json(name = "repaymentFrequencyType")
    val repaymentFrequencyType: EnumOptionData? = null,

    @Json(name = "repaymentFrequencyTypeOptions")
    val repaymentFrequencyTypeOptions: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "repaymentStartDateType")
    val repaymentStartDateType: EnumOptionData? = null,

    @Json(name = "repaymentStartDateTypeOptions")
    val repaymentStartDateTypeOptions: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "rescheduleStrategyTypeOptions")
    val rescheduleStrategyTypeOptions: kotlin.collections.List<EnumOptionData>? = null,

    @Json(name = "shortName")
    val shortName: kotlin.String? = null,

    @Json(name = "startDate")
    val startDate: java.time.LocalDate? = null,

    @Json(name = "status")
    val status: kotlin.String? = null,

    @Json(name = "syncExpectedWithDisbursementDate")
    val syncExpectedWithDisbursementDate: kotlin.Boolean? = null,

    @Json(name = "transactionProcessingStrategyCode")
    val transactionProcessingStrategyCode: kotlin.String? = null,

    @Json(name = "transactionProcessingStrategyName")
    val transactionProcessingStrategyName: kotlin.String? = null,

    @Json(name = "transactionProcessingStrategyOptions")
    val transactionProcessingStrategyOptions: kotlin.collections.List<TransactionProcessingStrategyData>? = null,

    @Json(name = "useBorrowerCycle")
    val useBorrowerCycle: kotlin.Boolean? = null,

    @Json(name = "valueConditionTypeOptions")
    val valueConditionTypeOptions: kotlin.collections.List<EnumOptionData>? = null

) {


}

