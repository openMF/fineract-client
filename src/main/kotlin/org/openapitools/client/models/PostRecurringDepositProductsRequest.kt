/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.PostRecurringDepositProductsCharts

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * PostRecurringDepositProductsRequest
 *
 * @param accountingRule 
 * @param charts 
 * @param currencyCode 
 * @param depositAmount 
 * @param description 
 * @param digitsAfterDecimal 
 * @param inMultiplesOf 
 * @param interestCalculationDaysInYearType 
 * @param interestCalculationType 
 * @param interestCompoundingPeriodType 
 * @param interestPostingPeriodType 
 * @param locale 
 * @param maxDepositAmount 
 * @param maxDepositTerm 
 * @param maxDepositTermTypeId 
 * @param minDepositAmount 
 * @param minDepositTerm 
 * @param minDepositTermTypeId 
 * @param name 
 * @param preClosurePenalApplicable 
 * @param preClosurePenalInterest 
 * @param preClosurePenalInterestOnTypeId 
 * @param recurringDepositFrequency 
 * @param recurringDepositFrequencyTypeId 
 * @param shortName 
 */


data class PostRecurringDepositProductsRequest (

    @Json(name = "accountingRule")
    val accountingRule: kotlin.Int? = null,

    @Json(name = "charts")
    val charts: kotlin.collections.Set<PostRecurringDepositProductsCharts>? = null,

    @Json(name = "currencyCode")
    val currencyCode: kotlin.String? = null,

    @Json(name = "depositAmount")
    val depositAmount: kotlin.Long? = null,

    @Json(name = "description")
    val description: kotlin.String? = null,

    @Json(name = "digitsAfterDecimal")
    val digitsAfterDecimal: kotlin.Int? = null,

    @Json(name = "inMultiplesOf")
    val inMultiplesOf: kotlin.Int? = null,

    @Json(name = "interestCalculationDaysInYearType")
    val interestCalculationDaysInYearType: kotlin.Int? = null,

    @Json(name = "interestCalculationType")
    val interestCalculationType: kotlin.Int? = null,

    @Json(name = "interestCompoundingPeriodType")
    val interestCompoundingPeriodType: kotlin.Int? = null,

    @Json(name = "interestPostingPeriodType")
    val interestPostingPeriodType: kotlin.Int? = null,

    @Json(name = "locale")
    val locale: kotlin.String? = null,

    @Json(name = "maxDepositAmount")
    val maxDepositAmount: kotlin.Long? = null,

    @Json(name = "maxDepositTerm")
    val maxDepositTerm: kotlin.Int? = null,

    @Json(name = "maxDepositTermTypeId")
    val maxDepositTermTypeId: kotlin.Int? = null,

    @Json(name = "minDepositAmount")
    val minDepositAmount: kotlin.Long? = null,

    @Json(name = "minDepositTerm")
    val minDepositTerm: kotlin.Int? = null,

    @Json(name = "minDepositTermTypeId")
    val minDepositTermTypeId: kotlin.Int? = null,

    @Json(name = "name")
    val name: kotlin.String? = null,

    @Json(name = "preClosurePenalApplicable")
    val preClosurePenalApplicable: kotlin.Boolean? = null,

    @Json(name = "preClosurePenalInterest")
    val preClosurePenalInterest: kotlin.Double? = null,

    @Json(name = "preClosurePenalInterestOnTypeId")
    val preClosurePenalInterestOnTypeId: kotlin.Int? = null,

    @Json(name = "recurringDepositFrequency")
    val recurringDepositFrequency: kotlin.Int? = null,

    @Json(name = "recurringDepositFrequencyTypeId")
    val recurringDepositFrequencyTypeId: kotlin.Int? = null,

    @Json(name = "shortName")
    val shortName: kotlin.String? = null

) {


}

