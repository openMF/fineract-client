/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.CodesApi
import org.openapitools.client.models.DeleteCodesResponse
import org.openapitools.client.models.GetCodesResponse
import org.openapitools.client.models.PostCodesRequest
import org.openapitools.client.models.PostCodesResponse
import org.openapitools.client.models.PutCodesRequest
import org.openapitools.client.models.PutCodesResponse

class CodesApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CodesApi
        //val apiInstance = CodesApi()

        // to test createCode
        should("test createCode") {
            // uncomment below to test createCode
            //val postCodesRequest : PostCodesRequest =  // PostCodesRequest | 
            //val result : PostCodesResponse = apiInstance.createCode(postCodesRequest)
            //result shouldBe ("TODO")
        }

        // to test deleteCode
        should("test deleteCode") {
            // uncomment below to test deleteCode
            //val codeId : kotlin.Long = 789 // kotlin.Long | codeId
            //val result : DeleteCodesResponse = apiInstance.deleteCode(codeId)
            //result shouldBe ("TODO")
        }

        // to test retrieveCode
        should("test retrieveCode") {
            // uncomment below to test retrieveCode
            //val codeId : kotlin.Long = 789 // kotlin.Long | codeId
            //val result : GetCodesResponse = apiInstance.retrieveCode(codeId)
            //result shouldBe ("TODO")
        }

        // to test retrieveCodes
        should("test retrieveCodes") {
            // uncomment below to test retrieveCodes
            //val result : kotlin.collections.List<GetCodesResponse> = apiInstance.retrieveCodes()
            //result shouldBe ("TODO")
        }

        // to test updateCode
        should("test updateCode") {
            // uncomment below to test updateCode
            //val codeId : kotlin.Long = 789 // kotlin.Long | codeId
            //val putCodesRequest : PutCodesRequest =  // PutCodesRequest | 
            //val result : PutCodesResponse = apiInstance.updateCode(codeId, putCodesRequest)
            //result shouldBe ("TODO")
        }

    }
}
