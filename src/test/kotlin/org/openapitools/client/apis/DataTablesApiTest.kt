/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.DataTablesApi
import org.openapitools.client.models.DeleteDataTablesDatatableAppTableIdDatatableIdResponse
import org.openapitools.client.models.DeleteDataTablesDatatableAppTableIdResponse
import org.openapitools.client.models.DeleteDataTablesResponse
import org.openapitools.client.models.GetDataTablesResponse
import org.openapitools.client.models.PagedLocalRequestAdvancedQueryData
import org.openapitools.client.models.PostDataTablesAppTableIdResponse
import org.openapitools.client.models.PostDataTablesRequest
import org.openapitools.client.models.PostDataTablesResponse
import org.openapitools.client.models.PutDataTablesAppTableIdDatatableIdResponse
import org.openapitools.client.models.PutDataTablesAppTableIdResponse
import org.openapitools.client.models.PutDataTablesRequest
import org.openapitools.client.models.PutDataTablesResponse

class DataTablesApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of DataTablesApi
        //val apiInstance = DataTablesApi()

        // to test advancedQuery
        should("test advancedQuery") {
            // uncomment below to test advancedQuery
            //val datatable : kotlin.String = datatable_example // kotlin.String | datatable
            //val pagedLocalRequestAdvancedQueryData : PagedLocalRequestAdvancedQueryData =  // PagedLocalRequestAdvancedQueryData | 
            //val result : kotlin.String = apiInstance.advancedQuery(datatable, pagedLocalRequestAdvancedQueryData)
            //result shouldBe ("TODO")
        }

        // to test createDatatable
        should("test createDatatable") {
            // uncomment below to test createDatatable
            //val postDataTablesRequest : PostDataTablesRequest =  // PostDataTablesRequest | 
            //val result : PostDataTablesResponse = apiInstance.createDatatable(postDataTablesRequest)
            //result shouldBe ("TODO")
        }

        // to test createDatatableEntry
        should("test createDatatableEntry") {
            // uncomment below to test createDatatableEntry
            //val datatable : kotlin.String = datatable_example // kotlin.String | datatable
            //val apptableId : kotlin.Long = 789 // kotlin.Long | apptableId
            //val body : kotlin.String = body_example // kotlin.String | {   \"BusinessDescription\": \"Livestock sales\",   \"Comment\": \"First comment made\",   \"Education_cv\": \"Primary\",   \"Gender_cd\": 6,   \"HighestRatePaid\": 8.5,   \"NextVisit\": \"01 October 2012\",   \"YearsinBusiness\": 5,   \"dateFormat\": \"dd MMMM yyyy\",   \"locale\": \"en\" }
            //val result : PostDataTablesAppTableIdResponse = apiInstance.createDatatableEntry(datatable, apptableId, body)
            //result shouldBe ("TODO")
        }

        // to test deleteDatatable
        should("test deleteDatatable") {
            // uncomment below to test deleteDatatable
            //val datatableName : kotlin.String = datatableName_example // kotlin.String | datatableName
            //val result : DeleteDataTablesResponse = apiInstance.deleteDatatable(datatableName)
            //result shouldBe ("TODO")
        }

        // to test deleteDatatableEntries
        should("test deleteDatatableEntries") {
            // uncomment below to test deleteDatatableEntries
            //val datatable : kotlin.String = datatable_example // kotlin.String | datatable
            //val apptableId : kotlin.Long = 789 // kotlin.Long | apptableId
            //val result : DeleteDataTablesDatatableAppTableIdResponse = apiInstance.deleteDatatableEntries(datatable, apptableId)
            //result shouldBe ("TODO")
        }

        // to test deleteDatatableEntry
        should("test deleteDatatableEntry") {
            // uncomment below to test deleteDatatableEntry
            //val datatable : kotlin.String = {} // kotlin.String | datatable
            //val apptableId : kotlin.Long = 789 // kotlin.Long | apptableId
            //val datatableId : kotlin.Long = 789 // kotlin.Long | datatableId
            //val result : DeleteDataTablesDatatableAppTableIdDatatableIdResponse = apiInstance.deleteDatatableEntry(datatable, apptableId, datatableId)
            //result shouldBe ("TODO")
        }

        // to test deregisterDatatable
        should("test deregisterDatatable") {
            // uncomment below to test deregisterDatatable
            //val datatable : kotlin.String = datatable_example // kotlin.String | datatable
            //val result : PutDataTablesResponse = apiInstance.deregisterDatatable(datatable)
            //result shouldBe ("TODO")
        }

        // to test getDatatable
        should("test getDatatable") {
            // uncomment below to test getDatatable
            //val datatable : kotlin.String = datatable_example // kotlin.String | datatable
            //val result : GetDataTablesResponse = apiInstance.getDatatable(datatable)
            //result shouldBe ("TODO")
        }

        // to test getDatatable1
        should("test getDatatable1") {
            // uncomment below to test getDatatable1
            //val datatable : kotlin.String = datatable_example // kotlin.String | datatable
            //val apptableId : kotlin.Long = 789 // kotlin.Long | apptableId
            //val order : kotlin.String = order_example // kotlin.String | order
            //val result : kotlin.String = apiInstance.getDatatable1(datatable, apptableId, order)
            //result shouldBe ("TODO")
        }

        // to test getDatatableManyEntry
        should("test getDatatableManyEntry") {
            // uncomment below to test getDatatableManyEntry
            //val datatable : kotlin.String = datatable_example // kotlin.String | 
            //val apptableId : kotlin.Long = 789 // kotlin.Long | 
            //val datatableId : kotlin.Long = 789 // kotlin.Long | 
            //val order : kotlin.String = order_example // kotlin.String | 
            //val genericResultSet : kotlin.Boolean = true // kotlin.Boolean | Optional flag to format the response
            //val result : kotlin.String = apiInstance.getDatatableManyEntry(datatable, apptableId, datatableId, order, genericResultSet)
            //result shouldBe ("TODO")
        }

        // to test getDatatables
        should("test getDatatables") {
            // uncomment below to test getDatatables
            //val apptable : kotlin.String = apptable_example // kotlin.String | apptable
            //val result : kotlin.collections.List<GetDataTablesResponse> = apiInstance.getDatatables(apptable)
            //result shouldBe ("TODO")
        }

        // to test queryValues
        should("test queryValues") {
            // uncomment below to test queryValues
            //val datatable : kotlin.String = datatable_example // kotlin.String | datatable
            //val columnFilter : kotlin.String = columnFilter_example // kotlin.String | columnFilter
            //val valueFilter : kotlin.String = valueFilter_example // kotlin.String | valueFilter
            //val resultColumns : kotlin.String = resultColumns_example // kotlin.String | resultColumns
            //val result : kotlin.String = apiInstance.queryValues(datatable, columnFilter, valueFilter, resultColumns)
            //result shouldBe ("TODO")
        }

        // to test registerDatatable
        should("test registerDatatable") {
            // uncomment below to test registerDatatable
            //val datatable : kotlin.String = datatable_example // kotlin.String | datatable
            //val apptable : kotlin.String = apptable_example // kotlin.String | apptable
            //val body : kotlin.Any = Object // kotlin.Any | 
            //val result : PutDataTablesResponse = apiInstance.registerDatatable(datatable, apptable, body)
            //result shouldBe ("TODO")
        }

        // to test updateDatatable
        should("test updateDatatable") {
            // uncomment below to test updateDatatable
            //val datatableName : kotlin.String = datatableName_example // kotlin.String | datatableName
            //val putDataTablesRequest : PutDataTablesRequest =  // PutDataTablesRequest | 
            //val result : PutDataTablesResponse = apiInstance.updateDatatable(datatableName, putDataTablesRequest)
            //result shouldBe ("TODO")
        }

        // to test updateDatatableEntryOneToMany
        should("test updateDatatableEntryOneToMany") {
            // uncomment below to test updateDatatableEntryOneToMany
            //val datatable : kotlin.String = datatable_example // kotlin.String | datatable
            //val apptableId : kotlin.Long = 789 // kotlin.Long | apptableId
            //val datatableId : kotlin.Long = 789 // kotlin.Long | datatableId
            //val body : kotlin.String = body_example // kotlin.String | 
            //val result : PutDataTablesAppTableIdDatatableIdResponse = apiInstance.updateDatatableEntryOneToMany(datatable, apptableId, datatableId, body)
            //result shouldBe ("TODO")
        }

        // to test updateDatatableEntryOnetoOne
        should("test updateDatatableEntryOnetoOne") {
            // uncomment below to test updateDatatableEntryOnetoOne
            //val datatable : kotlin.String = datatable_example // kotlin.String | datatable
            //val apptableId : kotlin.Long = 789 // kotlin.Long | apptableId
            //val body : kotlin.String = body_example // kotlin.String | 
            //val result : PutDataTablesAppTableIdResponse = apiInstance.updateDatatableEntryOnetoOne(datatable, apptableId, body)
            //result shouldBe ("TODO")
        }

    }
}
