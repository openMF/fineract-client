/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.DefaultApi
import org.openapitools.client.models.AdvancedPaymentData
import org.openapitools.client.models.CommandProcessingResult
import org.openapitools.client.models.CommandWrapper
import org.openapitools.client.models.SmsCampaignData

class DefaultApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of DefaultApi
        //val apiInstance = DefaultApi()

        // to test activate
        should("test activate") {
            // uncomment below to test activate
            //val resourceId : kotlin.Long = 789 // kotlin.Long | 
            //val command : kotlin.String = command_example // kotlin.String | 
            //val body : kotlin.String = body_example // kotlin.String | 
            //val result : kotlin.String = apiInstance.activate(resourceId, command, body)
            //result shouldBe ("TODO")
        }

        // to test addCreditReport
        should("test addCreditReport") {
            // uncomment below to test addCreditReport
            //val creditBureauId : kotlin.Long = 789 // kotlin.Long | creditBureauId
            //val dateFormat : kotlin.String = dateFormat_example // kotlin.String | 
            //val locale : kotlin.String = locale_example // kotlin.String | 
            //val uploadedInputStream : java.io.File = BINARY_DATA_HERE // java.io.File | 
            //val result : kotlin.String = apiInstance.addCreditReport(creditBureauId, dateFormat, locale, uploadedInputStream)
            //result shouldBe ("TODO")
        }

        // to test addNewClientImage1
        should("test addNewClientImage1") {
            // uncomment below to test addNewClientImage1
            //val entity : kotlin.String = entity_example // kotlin.String | 
            //val entityId : kotlin.Long = 789 // kotlin.Long | 
            //val contentLength : kotlin.Long = 789 // kotlin.Long | 
            //val dateFormat : kotlin.String = dateFormat_example // kotlin.String | 
            //val locale : kotlin.String = locale_example // kotlin.String | 
            //val uploadedInputStream : java.io.File = BINARY_DATA_HERE // java.io.File | 
            //val result : kotlin.String = apiInstance.addNewClientImage1(entity, entityId, contentLength, dateFormat, locale, uploadedInputStream)
            //result shouldBe ("TODO")
        }

        // to test create1
        should("test create1") {
            // uncomment below to test create1
            //val body : kotlin.String = body_example // kotlin.String | 
            //val result : kotlin.String = apiInstance.create1(body)
            //result shouldBe ("TODO")
        }

        // to test createCampaign
        should("test createCampaign") {
            // uncomment below to test createCampaign
            //val body : kotlin.String = body_example // kotlin.String | 
            //val result : kotlin.String = apiInstance.createCampaign(body)
            //result shouldBe ("TODO")
        }

        // to test createCampaign1
        should("test createCampaign1") {
            // uncomment below to test createCampaign1
            //val commandWrapper : CommandWrapper =  // CommandWrapper | 
            //val result : CommandProcessingResult = apiInstance.createCampaign1(commandWrapper)
            //result shouldBe ("TODO")
        }

        // to test delete1
        should("test delete1") {
            // uncomment below to test delete1
            //val resourceId : kotlin.Long = 789 // kotlin.Long | 
            //val result : kotlin.String = apiInstance.delete1(resourceId)
            //result shouldBe ("TODO")
        }

        // to test delete2
        should("test delete2") {
            // uncomment below to test delete2
            //val resourceId : kotlin.Long = 789 // kotlin.Long | 
            //val result : kotlin.String = apiInstance.delete2(resourceId)
            //result shouldBe ("TODO")
        }

        // to test delete3
        should("test delete3") {
            // uncomment below to test delete3
            //val campaignId : kotlin.Long = 789 // kotlin.Long | 
            //val result : CommandProcessingResult = apiInstance.delete3(campaignId)
            //result shouldBe ("TODO")
        }

        // to test delete8
        should("test delete8") {
            // uncomment below to test delete8
            //val transactionId : kotlin.Long = 789 // kotlin.Long | 
            //val result : kotlin.String = apiInstance.delete8(transactionId)
            //result shouldBe ("TODO")
        }

        // to test deleteClientImage
        should("test deleteClientImage") {
            // uncomment below to test deleteClientImage
            //val entity : kotlin.String = entity_example // kotlin.String | 
            //val entityId : kotlin.Long = 789 // kotlin.Long | 
            //val result : kotlin.String = apiInstance.deleteClientImage(entity, entityId)
            //result shouldBe ("TODO")
        }

        // to test deleteCreditReport
        should("test deleteCreditReport") {
            // uncomment below to test deleteCreditReport
            //val creditBureauId : kotlin.Long = 789 // kotlin.Long | creditBureauId
            //val result : kotlin.String = apiInstance.deleteCreditReport(creditBureauId)
            //result shouldBe ("TODO")
        }

        // to test fetchCreditReport
        should("test fetchCreditReport") {
            // uncomment below to test fetchCreditReport
            //val body : kotlin.Any = Object // kotlin.Any | Fetch credit report
            //val result : kotlin.String = apiInstance.fetchCreditReport(body)
            //result shouldBe ("TODO")
        }

        // to test get
        should("test get") {
            // uncomment below to test get
            //val result : kotlin.String = apiInstance.get()
            //result shouldBe ("TODO")
        }

        // to test getAdvancedPaymentAllocationRulesOfLoan
        should("test getAdvancedPaymentAllocationRulesOfLoan") {
            // uncomment below to test getAdvancedPaymentAllocationRulesOfLoan
            //val loanId : kotlin.Long = 789 // kotlin.Long | 
            //val result : kotlin.collections.List<AdvancedPaymentData> = apiInstance.getAdvancedPaymentAllocationRulesOfLoan(loanId)
            //result shouldBe ("TODO")
        }

        // to test getClientAuditFields
        should("test getClientAuditFields") {
            // uncomment below to test getClientAuditFields
            //val clientId : kotlin.Long = 789 // kotlin.Long | 
            //val result : kotlin.String = apiInstance.getClientAuditFields(clientId)
            //result shouldBe ("TODO")
        }

        // to test getCobPartitions
        should("test getCobPartitions") {
            // uncomment below to test getCobPartitions
            //val partitionSize : kotlin.Int = 56 // kotlin.Int | 
            //val result : kotlin.String = apiInstance.getCobPartitions(partitionSize)
            //result shouldBe ("TODO")
        }

        // to test getExternalGrammar
        should("test getExternalGrammar") {
            // uncomment below to test getExternalGrammar
            //val path : kotlin.String = path_example // kotlin.String | 
            //apiInstance.getExternalGrammar(path)
        }

        // to test getLoanAuditFields
        should("test getLoanAuditFields") {
            // uncomment below to test getLoanAuditFields
            //val loanId : kotlin.Long = 789 // kotlin.Long | 
            //val result : kotlin.String = apiInstance.getLoanAuditFields(loanId)
            //result shouldBe ("TODO")
        }

        // to test getLoanTransactionAuditFields
        should("test getLoanTransactionAuditFields") {
            // uncomment below to test getLoanTransactionAuditFields
            //val loanId : kotlin.Long = 789 // kotlin.Long | 
            //val transactionId : kotlin.Long = 789 // kotlin.Long | 
            //val result : kotlin.String = apiInstance.getLoanTransactionAuditFields(loanId, transactionId)
            //result shouldBe ("TODO")
        }

        // to test getLoansByStatus
        should("test getLoansByStatus") {
            // uncomment below to test getLoansByStatus
            //val statusId : kotlin.Int = 56 // kotlin.Int | 
            //val result : kotlin.String = apiInstance.getLoansByStatus(statusId)
            //result shouldBe ("TODO")
        }

        // to test getSavedCreditReport
        should("test getSavedCreditReport") {
            // uncomment below to test getSavedCreditReport
            //val creditBureauId : kotlin.Long = 789 // kotlin.Long | creditBureauId
            //val result : kotlin.String = apiInstance.getSavedCreditReport(creditBureauId)
            //result shouldBe ("TODO")
        }

        // to test getWadl
        should("test getWadl") {
            // uncomment below to test getWadl
            //apiInstance.getWadl()
        }

        // to test handleCommands
        should("test handleCommands") {
            // uncomment below to test handleCommands
            //val campaignId : kotlin.Long = 789 // kotlin.Long | 
            //val command : kotlin.String = command_example // kotlin.String | 
            //val result : CommandProcessingResult = apiInstance.handleCommands(campaignId, command)
            //result shouldBe ("TODO")
        }

        // to test newOfficeTransactionDetails
        should("test newOfficeTransactionDetails") {
            // uncomment below to test newOfficeTransactionDetails
            //val result : kotlin.String = apiInstance.newOfficeTransactionDetails()
            //result shouldBe ("TODO")
        }

        // to test placeLockOnLoanAccount
        should("test placeLockOnLoanAccount") {
            // uncomment below to test placeLockOnLoanAccount
            //val loanId : kotlin.Long = 789 // kotlin.Long | 
            //val lockOwner : kotlin.String = lockOwner_example // kotlin.String | 
            //val body : kotlin.String = body_example // kotlin.String | 
            //apiInstance.placeLockOnLoanAccount(loanId, lockOwner, body)
        }

        // to test preview
        should("test preview") {
            // uncomment below to test preview
            //val body : kotlin.String = body_example // kotlin.String | 
            //val result : kotlin.String = apiInstance.preview(body)
            //result shouldBe ("TODO")
        }

        // to test preview1
        should("test preview1") {
            // uncomment below to test preview1
            //val body : kotlin.String = body_example // kotlin.String | 
            //val result : kotlin.String = apiInstance.preview1(body)
            //result shouldBe ("TODO")
        }

        // to test retrieveAll5
        should("test retrieveAll5") {
            // uncomment below to test retrieveAll5
            //val result : kotlin.String = apiInstance.retrieveAll5()
            //result shouldBe ("TODO")
        }

        // to test retrieveAll9
        should("test retrieveAll9") {
            // uncomment below to test retrieveAll9
            //val result : kotlin.String = apiInstance.retrieveAll9()
            //result shouldBe ("TODO")
        }

        // to test retrieveAllCampaign
        should("test retrieveAllCampaign") {
            // uncomment below to test retrieveAllCampaign
            //val result : kotlin.String = apiInstance.retrieveAllCampaign()
            //result shouldBe ("TODO")
        }

        // to test retrieveAllEmailByStatus
        should("test retrieveAllEmailByStatus") {
            // uncomment below to test retrieveAllEmailByStatus
            //val sqlSearch : kotlin.String = sqlSearch_example // kotlin.String | 
            //val offset : kotlin.Int = 56 // kotlin.Int | 
            //val limit : kotlin.Int = 56 // kotlin.Int | 
            //val status : kotlin.Int = 56 // kotlin.Int | 
            //val orderBy : kotlin.String = orderBy_example // kotlin.String | 
            //val sortOrder : kotlin.String = sortOrder_example // kotlin.String | 
            //val fromDate : kotlin.Any = Object // kotlin.Any | 
            //val toDate : kotlin.Any = Object // kotlin.Any | 
            //val locale : kotlin.String = locale_example // kotlin.String | 
            //val dateFormat : kotlin.String = dateFormat_example // kotlin.String | 
            //val result : kotlin.String = apiInstance.retrieveAllEmailByStatus(sqlSearch, offset, limit, status, orderBy, sortOrder, fromDate, toDate, locale, dateFormat)
            //result shouldBe ("TODO")
        }

        // to test retrieveAllEmails
        should("test retrieveAllEmails") {
            // uncomment below to test retrieveAllEmails
            //val result : kotlin.String = apiInstance.retrieveAllEmails()
            //result shouldBe ("TODO")
        }

        // to test retrieveAllEmails1
        should("test retrieveAllEmails1") {
            // uncomment below to test retrieveAllEmails1
            //val offset : kotlin.Int = 56 // kotlin.Int | 
            //val limit : kotlin.Int = 56 // kotlin.Int | 
            //val orderBy : kotlin.String = orderBy_example // kotlin.String | 
            //val sortOrder : kotlin.String = sortOrder_example // kotlin.String | 
            //val result : SmsCampaignData = apiInstance.retrieveAllEmails1(offset, limit, orderBy, sortOrder)
            //result shouldBe ("TODO")
        }

        // to test retrieveCampaign
        should("test retrieveCampaign") {
            // uncomment below to test retrieveCampaign
            //val resourceId : kotlin.Long = 789 // kotlin.Long | 
            //val result : SmsCampaignData = apiInstance.retrieveCampaign(resourceId)
            //result shouldBe ("TODO")
        }

        // to test retrieveFailedEmail
        should("test retrieveFailedEmail") {
            // uncomment below to test retrieveFailedEmail
            //val sqlSearch : kotlin.String = sqlSearch_example // kotlin.String | 
            //val offset : kotlin.Int = 56 // kotlin.Int | 
            //val limit : kotlin.Int = 56 // kotlin.Int | 
            //val orderBy : kotlin.String = orderBy_example // kotlin.String | 
            //val sortOrder : kotlin.String = sortOrder_example // kotlin.String | 
            //val result : kotlin.String = apiInstance.retrieveFailedEmail(sqlSearch, offset, limit, orderBy, sortOrder)
            //result shouldBe ("TODO")
        }

        // to test retrieveImage
        should("test retrieveImage") {
            // uncomment below to test retrieveImage
            //val entity : kotlin.String = entity_example // kotlin.String | 
            //val entityId : kotlin.Long = 789 // kotlin.Long | 
            //val maxWidth : kotlin.Int = 56 // kotlin.Int | 
            //val maxHeight : kotlin.Int = 56 // kotlin.Int | 
            //val output : kotlin.String = output_example // kotlin.String | 
            //val accept : kotlin.String = accept_example // kotlin.String | 
            //apiInstance.retrieveImage(entity, entityId, maxWidth, maxHeight, output, accept)
        }

        // to test retrieveOfficeTransactions
        should("test retrieveOfficeTransactions") {
            // uncomment below to test retrieveOfficeTransactions
            //val result : kotlin.String = apiInstance.retrieveOfficeTransactions()
            //result shouldBe ("TODO")
        }

        // to test retrieveOne1
        should("test retrieveOne1") {
            // uncomment below to test retrieveOne1
            //val resourceId : kotlin.Long = 789 // kotlin.Long | 
            //val result : kotlin.String = apiInstance.retrieveOne1(resourceId)
            //result shouldBe ("TODO")
        }

        // to test retrieveOneCampaign
        should("test retrieveOneCampaign") {
            // uncomment below to test retrieveOneCampaign
            //val resourceId : kotlin.Long = 789 // kotlin.Long | 
            //val result : kotlin.String = apiInstance.retrieveOneCampaign(resourceId)
            //result shouldBe ("TODO")
        }

        // to test retrieveOneTemplate
        should("test retrieveOneTemplate") {
            // uncomment below to test retrieveOneTemplate
            //val resourceId : kotlin.Long = 789 // kotlin.Long | 
            //val result : kotlin.String = apiInstance.retrieveOneTemplate(resourceId)
            //result shouldBe ("TODO")
        }

        // to test retrievePendingEmail
        should("test retrievePendingEmail") {
            // uncomment below to test retrievePendingEmail
            //val offset : kotlin.Int = 56 // kotlin.Int | 
            //val limit : kotlin.Int = 56 // kotlin.Int | 
            //val orderBy : kotlin.String = orderBy_example // kotlin.String | 
            //val sortOrder : kotlin.String = sortOrder_example // kotlin.String | 
            //val result : kotlin.String = apiInstance.retrievePendingEmail(offset, limit, orderBy, sortOrder)
            //result shouldBe ("TODO")
        }

        // to test retrieveSentEmail
        should("test retrieveSentEmail") {
            // uncomment below to test retrieveSentEmail
            //val offset : kotlin.Int = 56 // kotlin.Int | 
            //val limit : kotlin.Int = 56 // kotlin.Int | 
            //val orderBy : kotlin.String = orderBy_example // kotlin.String | 
            //val sortOrder : kotlin.String = sortOrder_example // kotlin.String | 
            //val result : kotlin.String = apiInstance.retrieveSentEmail(offset, limit, orderBy, sortOrder)
            //result shouldBe ("TODO")
        }

        // to test saveCreditReport
        should("test saveCreditReport") {
            // uncomment below to test saveCreditReport
            //val creditBureauId : kotlin.Long = 789 // kotlin.Long | creditBureauId
            //val nationalId : kotlin.String = nationalId_example // kotlin.String | nationalId
            //val result : kotlin.String = apiInstance.saveCreditReport(creditBureauId, nationalId)
            //result shouldBe ("TODO")
        }

        // to test template1
        should("test template1") {
            // uncomment below to test template1
            //val result : kotlin.String = apiInstance.template1()
            //result shouldBe ("TODO")
        }

        // to test template2
        should("test template2") {
            // uncomment below to test template2
            //val result : SmsCampaignData = apiInstance.template2()
            //result shouldBe ("TODO")
        }

        // to test transferMoneyFrom
        should("test transferMoneyFrom") {
            // uncomment below to test transferMoneyFrom
            //val body : kotlin.String = body_example // kotlin.String | 
            //val result : kotlin.String = apiInstance.transferMoneyFrom(body)
            //result shouldBe ("TODO")
        }

        // to test update2
        should("test update2") {
            // uncomment below to test update2
            //val resourceId : kotlin.Long = 789 // kotlin.Long | 
            //val body : kotlin.String = body_example // kotlin.String | 
            //val result : kotlin.String = apiInstance.update2(resourceId, body)
            //result shouldBe ("TODO")
        }

        // to test updateCampaign
        should("test updateCampaign") {
            // uncomment below to test updateCampaign
            //val resourceId : kotlin.Long = 789 // kotlin.Long | 
            //val body : kotlin.String = body_example // kotlin.String | 
            //val result : kotlin.String = apiInstance.updateCampaign(resourceId, body)
            //result shouldBe ("TODO")
        }

        // to test updateCampaign1
        should("test updateCampaign1") {
            // uncomment below to test updateCampaign1
            //val campaignId : kotlin.Long = 789 // kotlin.Long | 
            //val commandWrapper : CommandWrapper =  // CommandWrapper | 
            //val result : CommandProcessingResult = apiInstance.updateCampaign1(campaignId, commandWrapper)
            //result shouldBe ("TODO")
        }

        // to test updateClientImage1
        should("test updateClientImage1") {
            // uncomment below to test updateClientImage1
            //val entity : kotlin.String = entity_example // kotlin.String | 
            //val entityId : kotlin.Long = 789 // kotlin.Long | 
            //val contentLength : kotlin.Long = 789 // kotlin.Long | 
            //val dateFormat : kotlin.String = dateFormat_example // kotlin.String | 
            //val locale : kotlin.String = locale_example // kotlin.String | 
            //val uploadedInputStream : java.io.File = BINARY_DATA_HERE // java.io.File | 
            //val result : kotlin.String = apiInstance.updateClientImage1(entity, entityId, contentLength, dateFormat, locale, uploadedInputStream)
            //result shouldBe ("TODO")
        }

        // to test updateConfiguration
        should("test updateConfiguration") {
            // uncomment below to test updateConfiguration
            //val body : kotlin.String = body_example // kotlin.String | 
            //val result : kotlin.String = apiInstance.updateConfiguration(body)
            //result shouldBe ("TODO")
        }

        // to test updateConfiguration3
        should("test updateConfiguration3") {
            // uncomment below to test updateConfiguration3
            //val body : kotlin.String = body_example // kotlin.String | 
            //val result : kotlin.String = apiInstance.updateConfiguration3(body)
            //result shouldBe ("TODO")
        }

    }
}
