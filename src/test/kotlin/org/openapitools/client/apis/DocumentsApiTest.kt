/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.DocumentsApi
import org.openapitools.client.models.DeleteEntityTypeEntityIdDocumentsResponse
import org.openapitools.client.models.GetEntityTypeEntityIdDocumentsResponse
import org.openapitools.client.models.PostEntityTypeEntityIdDocumentsResponse
import org.openapitools.client.models.PutEntityTypeEntityIdDocumentsResponse

class DocumentsApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of DocumentsApi
        //val apiInstance = DocumentsApi()

        // to test createDocument
        should("test createDocument") {
            // uncomment below to test createDocument
            //val entityType : kotlin.String = entityType_example // kotlin.String | entityType
            //val entityId : kotlin.Long = 789 // kotlin.Long | entityId
            //val contentLength : kotlin.Long = 789 // kotlin.Long | Content-Length
            //val dateFormat : kotlin.String = dateFormat_example // kotlin.String | 
            //val description : kotlin.String = description_example // kotlin.String | 
            //val locale : kotlin.String = locale_example // kotlin.String | 
            //val name : kotlin.String = name_example // kotlin.String | 
            //val uploadedInputStream : java.io.File = BINARY_DATA_HERE // java.io.File | 
            //val result : PostEntityTypeEntityIdDocumentsResponse = apiInstance.createDocument(entityType, entityId, contentLength, dateFormat, description, locale, name, uploadedInputStream)
            //result shouldBe ("TODO")
        }

        // to test deleteDocument
        should("test deleteDocument") {
            // uncomment below to test deleteDocument
            //val entityType : kotlin.String = entityType_example // kotlin.String | entityType
            //val entityId : kotlin.Long = 789 // kotlin.Long | entityId
            //val documentId : kotlin.Long = 789 // kotlin.Long | documentId
            //val result : DeleteEntityTypeEntityIdDocumentsResponse = apiInstance.deleteDocument(entityType, entityId, documentId)
            //result shouldBe ("TODO")
        }

        // to test downloadFile
        should("test downloadFile") {
            // uncomment below to test downloadFile
            //val entityType : kotlin.String = entityType_example // kotlin.String | entityType
            //val entityId : kotlin.Long = 789 // kotlin.Long | entityId
            //val documentId : kotlin.Long = 789 // kotlin.Long | documentId
            //apiInstance.downloadFile(entityType, entityId, documentId)
        }

        // to test getDocument
        should("test getDocument") {
            // uncomment below to test getDocument
            //val entityType : kotlin.String = entityType_example // kotlin.String | entityType
            //val entityId : kotlin.Long = 789 // kotlin.Long | entityId
            //val documentId : kotlin.Long = 789 // kotlin.Long | documentId
            //val result : GetEntityTypeEntityIdDocumentsResponse = apiInstance.getDocument(entityType, entityId, documentId)
            //result shouldBe ("TODO")
        }

        // to test retrieveAllDocuments
        should("test retrieveAllDocuments") {
            // uncomment below to test retrieveAllDocuments
            //val entityType : kotlin.String = entityType_example // kotlin.String | entityType
            //val entityId : kotlin.Long = 789 // kotlin.Long | entityId
            //val result : kotlin.collections.List<GetEntityTypeEntityIdDocumentsResponse> = apiInstance.retrieveAllDocuments(entityType, entityId)
            //result shouldBe ("TODO")
        }

        // to test updateDocument
        should("test updateDocument") {
            // uncomment below to test updateDocument
            //val entityType : kotlin.String = entityType_example // kotlin.String | entityType
            //val entityId : kotlin.Long = 789 // kotlin.Long | entityId
            //val documentId : kotlin.Long = 789 // kotlin.Long | documentId
            //val contentLength : kotlin.Long = 789 // kotlin.Long | Content-Length
            //val dateFormat : kotlin.String = dateFormat_example // kotlin.String | 
            //val description : kotlin.String = description_example // kotlin.String | 
            //val locale : kotlin.String = locale_example // kotlin.String | 
            //val name : kotlin.String = name_example // kotlin.String | 
            //val uploadedInputStream : java.io.File = BINARY_DATA_HERE // java.io.File | 
            //val result : PutEntityTypeEntityIdDocumentsResponse = apiInstance.updateDocument(entityType, entityId, documentId, contentLength, dateFormat, description, locale, name, uploadedInputStream)
            //result shouldBe ("TODO")
        }

    }
}
