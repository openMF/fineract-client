/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.ExternalAssetOwnersApi
import org.openapitools.client.models.ExternalOwnerJournalEntryData
import org.openapitools.client.models.ExternalOwnerTransferJournalEntryData
import org.openapitools.client.models.ExternalTransferData
import org.openapitools.client.models.PageExternalTransferData
import org.openapitools.client.models.PagedRequestExternalAssetOwnerSearchRequest
import org.openapitools.client.models.PostInitiateTransferRequest
import org.openapitools.client.models.PostInitiateTransferResponse

class ExternalAssetOwnersApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ExternalAssetOwnersApi
        //val apiInstance = ExternalAssetOwnersApi()

        // to test getActiveTransfer
        should("test getActiveTransfer") {
            // uncomment below to test getActiveTransfer
            //val transferExternalId : kotlin.String = transferExternalId_example // kotlin.String | transferExternalId
            //val loanId : kotlin.Long = 789 // kotlin.Long | loanId
            //val loanExternalId : kotlin.String = loanExternalId_example // kotlin.String | loanExternalId
            //val result : ExternalTransferData = apiInstance.getActiveTransfer(transferExternalId, loanId, loanExternalId)
            //result shouldBe ("TODO")
        }

        // to test getJournalEntriesOfOwner
        should("test getJournalEntriesOfOwner") {
            // uncomment below to test getJournalEntriesOfOwner
            //val ownerExternalId : kotlin.String = ownerExternalId_example // kotlin.String | ownerExternalId
            //val offset : kotlin.Int = 56 // kotlin.Int | offset
            //val limit : kotlin.Int = 56 // kotlin.Int | limit
            //val result : ExternalOwnerJournalEntryData = apiInstance.getJournalEntriesOfOwner(ownerExternalId, offset, limit)
            //result shouldBe ("TODO")
        }

        // to test getJournalEntriesOfTransfer
        should("test getJournalEntriesOfTransfer") {
            // uncomment below to test getJournalEntriesOfTransfer
            //val transferId : kotlin.Long = 789 // kotlin.Long | transferId
            //val offset : kotlin.Int = 56 // kotlin.Int | offset
            //val limit : kotlin.Int = 56 // kotlin.Int | limit
            //val result : ExternalOwnerTransferJournalEntryData = apiInstance.getJournalEntriesOfTransfer(transferId, offset, limit)
            //result shouldBe ("TODO")
        }

        // to test getTransfers
        should("test getTransfers") {
            // uncomment below to test getTransfers
            //val transferExternalId : kotlin.String = transferExternalId_example // kotlin.String | transferExternalId
            //val loanId : kotlin.Long = 789 // kotlin.Long | loanId
            //val loanExternalId : kotlin.String = loanExternalId_example // kotlin.String | loanExternalId
            //val offset : kotlin.Int = 56 // kotlin.Int | offset
            //val limit : kotlin.Int = 56 // kotlin.Int | limit
            //val result : PageExternalTransferData = apiInstance.getTransfers(transferExternalId, loanId, loanExternalId, offset, limit)
            //result shouldBe ("TODO")
        }

        // to test searchInvestorData
        should("test searchInvestorData") {
            // uncomment below to test searchInvestorData
            //val pagedRequestExternalAssetOwnerSearchRequest : PagedRequestExternalAssetOwnerSearchRequest =  // PagedRequestExternalAssetOwnerSearchRequest | 
            //val result : PageExternalTransferData = apiInstance.searchInvestorData(pagedRequestExternalAssetOwnerSearchRequest)
            //result shouldBe ("TODO")
        }

        // to test transferRequestWithId
        should("test transferRequestWithId") {
            // uncomment below to test transferRequestWithId
            //val id : kotlin.Long = 789 // kotlin.Long | 
            //val command : kotlin.String = command_example // kotlin.String | command
            //val result : PostInitiateTransferResponse = apiInstance.transferRequestWithId(id, command)
            //result shouldBe ("TODO")
        }

        // to test transferRequestWithId1
        should("test transferRequestWithId1") {
            // uncomment below to test transferRequestWithId1
            //val externalId : kotlin.String = externalId_example // kotlin.String | 
            //val command : kotlin.String = command_example // kotlin.String | command
            //val result : PostInitiateTransferResponse = apiInstance.transferRequestWithId1(externalId, command)
            //result shouldBe ("TODO")
        }

        // to test transferRequestWithLoanExternalId
        should("test transferRequestWithLoanExternalId") {
            // uncomment below to test transferRequestWithLoanExternalId
            //val loanExternalId : kotlin.String = loanExternalId_example // kotlin.String | 
            //val postInitiateTransferRequest : PostInitiateTransferRequest =  // PostInitiateTransferRequest | 
            //val command : kotlin.String = command_example // kotlin.String | command
            //val result : PostInitiateTransferResponse = apiInstance.transferRequestWithLoanExternalId(loanExternalId, postInitiateTransferRequest, command)
            //result shouldBe ("TODO")
        }

        // to test transferRequestWithLoanId
        should("test transferRequestWithLoanId") {
            // uncomment below to test transferRequestWithLoanId
            //val loanId : kotlin.Long = 789 // kotlin.Long | 
            //val postInitiateTransferRequest : PostInitiateTransferRequest =  // PostInitiateTransferRequest | 
            //val command : kotlin.String = command_example // kotlin.String | command
            //val result : PostInitiateTransferResponse = apiInstance.transferRequestWithLoanId(loanId, postInitiateTransferRequest, command)
            //result shouldBe ("TODO")
        }

    }
}
