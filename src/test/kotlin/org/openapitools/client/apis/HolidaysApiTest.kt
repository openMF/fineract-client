/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.HolidaysApi
import org.openapitools.client.models.DeleteHolidaysHolidayIdResponse
import org.openapitools.client.models.GetHolidaysResponse
import org.openapitools.client.models.PostHolidaysHolidayIdResponse
import org.openapitools.client.models.PostHolidaysRequest
import org.openapitools.client.models.PostHolidaysResponse
import org.openapitools.client.models.PutHolidaysHolidayIdRequest
import org.openapitools.client.models.PutHolidaysHolidayIdResponse

class HolidaysApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of HolidaysApi
        //val apiInstance = HolidaysApi()

        // to test createNewHoliday
        should("test createNewHoliday") {
            // uncomment below to test createNewHoliday
            //val postHolidaysRequest : PostHolidaysRequest =  // PostHolidaysRequest | 
            //val result : PostHolidaysResponse = apiInstance.createNewHoliday(postHolidaysRequest)
            //result shouldBe ("TODO")
        }

        // to test delete7
        should("test delete7") {
            // uncomment below to test delete7
            //val holidayId : kotlin.Long = 789 // kotlin.Long | holidayId
            //val result : DeleteHolidaysHolidayIdResponse = apiInstance.delete7(holidayId)
            //result shouldBe ("TODO")
        }

        // to test handleCommands1
        should("test handleCommands1") {
            // uncomment below to test handleCommands1
            //val holidayId : kotlin.Long = 789 // kotlin.Long | holidayId
            //val body : kotlin.Any = Object // kotlin.Any | 
            //val command : kotlin.String = command_example // kotlin.String | command
            //val result : PostHolidaysHolidayIdResponse = apiInstance.handleCommands1(holidayId, body, command)
            //result shouldBe ("TODO")
        }

        // to test retrieveAllHolidays
        should("test retrieveAllHolidays") {
            // uncomment below to test retrieveAllHolidays
            //val officeId : kotlin.Long = 789 // kotlin.Long | officeId
            //val fromDate : kotlin.Any = Object // kotlin.Any | fromDate
            //val toDate : kotlin.Any = Object // kotlin.Any | toDate
            //val locale : kotlin.String = locale_example // kotlin.String | locale
            //val dateFormat : kotlin.String = dateFormat_example // kotlin.String | dateFormat
            //val result : kotlin.collections.List<GetHolidaysResponse> = apiInstance.retrieveAllHolidays(officeId, fromDate, toDate, locale, dateFormat)
            //result shouldBe ("TODO")
        }

        // to test retrieveOne7
        should("test retrieveOne7") {
            // uncomment below to test retrieveOne7
            //val holidayId : kotlin.Long = 789 // kotlin.Long | holidayId
            //val result : GetHolidaysResponse = apiInstance.retrieveOne7(holidayId)
            //result shouldBe ("TODO")
        }

        // to test retrieveRepaymentScheduleUpdationTyeOptions
        should("test retrieveRepaymentScheduleUpdationTyeOptions") {
            // uncomment below to test retrieveRepaymentScheduleUpdationTyeOptions
            //val result : kotlin.String = apiInstance.retrieveRepaymentScheduleUpdationTyeOptions()
            //result shouldBe ("TODO")
        }

        // to test update6
        should("test update6") {
            // uncomment below to test update6
            //val holidayId : kotlin.Long = 789 // kotlin.Long | holidayId
            //val putHolidaysHolidayIdRequest : PutHolidaysHolidayIdRequest =  // PutHolidaysHolidayIdRequest | 
            //val result : PutHolidaysHolidayIdResponse = apiInstance.update6(holidayId, putHolidaysHolidayIdRequest)
            //result shouldBe ("TODO")
        }

    }
}
