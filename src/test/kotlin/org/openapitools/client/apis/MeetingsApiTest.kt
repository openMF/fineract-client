/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.MeetingsApi

class MeetingsApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of MeetingsApi
        //val apiInstance = MeetingsApi()

        // to test createMeeting
        should("test createMeeting") {
            // uncomment below to test createMeeting
            //val entityType : kotlin.String = entityType_example // kotlin.String | 
            //val entityId : kotlin.Long = 789 // kotlin.Long | 
            //val body : kotlin.String = body_example // kotlin.String | 
            //val result : kotlin.String = apiInstance.createMeeting(entityType, entityId, body)
            //result shouldBe ("TODO")
        }

        // to test deleteMeeting
        should("test deleteMeeting") {
            // uncomment below to test deleteMeeting
            //val entityType : kotlin.String = entityType_example // kotlin.String | 
            //val entityId : kotlin.Long = 789 // kotlin.Long | 
            //val meetingId : kotlin.Long = 789 // kotlin.Long | 
            //val result : kotlin.String = apiInstance.deleteMeeting(entityType, entityId, meetingId)
            //result shouldBe ("TODO")
        }

        // to test performMeetingCommands
        should("test performMeetingCommands") {
            // uncomment below to test performMeetingCommands
            //val entityType : kotlin.String = entityType_example // kotlin.String | 
            //val entityId : kotlin.Long = 789 // kotlin.Long | 
            //val meetingId : kotlin.Long = 789 // kotlin.Long | 
            //val command : kotlin.String = command_example // kotlin.String | 
            //val body : kotlin.String = body_example // kotlin.String | 
            //val result : kotlin.String = apiInstance.performMeetingCommands(entityType, entityId, meetingId, command, body)
            //result shouldBe ("TODO")
        }

        // to test retrieveMeeting
        should("test retrieveMeeting") {
            // uncomment below to test retrieveMeeting
            //val meetingId : kotlin.Long = 789 // kotlin.Long | 
            //val entityType : kotlin.String = entityType_example // kotlin.String | 
            //val entityId : kotlin.Long = 789 // kotlin.Long | 
            //val result : kotlin.String = apiInstance.retrieveMeeting(meetingId, entityType, entityId)
            //result shouldBe ("TODO")
        }

        // to test retrieveMeetings
        should("test retrieveMeetings") {
            // uncomment below to test retrieveMeetings
            //val entityType : kotlin.String = entityType_example // kotlin.String | 
            //val entityId : kotlin.Long = 789 // kotlin.Long | 
            //val limit : kotlin.Int = 56 // kotlin.Int | 
            //val result : kotlin.String = apiInstance.retrieveMeetings(entityType, entityId, limit)
            //result shouldBe ("TODO")
        }

        // to test template11
        should("test template11") {
            // uncomment below to test template11
            //val entityType : kotlin.String = entityType_example // kotlin.String | 
            //val entityId : kotlin.Long = 789 // kotlin.Long | 
            //val calendarId : kotlin.Long = 789 // kotlin.Long | 
            //val result : kotlin.String = apiInstance.template11(entityType, entityId, calendarId)
            //result shouldBe ("TODO")
        }

        // to test updateMeeting
        should("test updateMeeting") {
            // uncomment below to test updateMeeting
            //val entityType : kotlin.String = entityType_example // kotlin.String | 
            //val entityId : kotlin.Long = 789 // kotlin.Long | 
            //val meetingId : kotlin.Long = 789 // kotlin.Long | 
            //val body : kotlin.String = body_example // kotlin.String | 
            //val result : kotlin.String = apiInstance.updateMeeting(entityType, entityId, meetingId, body)
            //result shouldBe ("TODO")
        }

    }
}
