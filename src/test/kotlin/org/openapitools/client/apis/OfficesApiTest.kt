/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.OfficesApi
import org.openapitools.client.models.GetOfficesResponse
import org.openapitools.client.models.GetOfficesTemplateResponse
import org.openapitools.client.models.PostOfficesRequest
import org.openapitools.client.models.PostOfficesResponse
import org.openapitools.client.models.PutOfficesOfficeIdRequest
import org.openapitools.client.models.PutOfficesOfficeIdResponse

class OfficesApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of OfficesApi
        //val apiInstance = OfficesApi()

        // to test createOffice
        should("test createOffice") {
            // uncomment below to test createOffice
            //val postOfficesRequest : PostOfficesRequest =  // PostOfficesRequest | 
            //val result : PostOfficesResponse = apiInstance.createOffice(postOfficesRequest)
            //result shouldBe ("TODO")
        }

        // to test getOfficeTemplate
        should("test getOfficeTemplate") {
            // uncomment below to test getOfficeTemplate
            //val dateFormat : kotlin.String = dateFormat_example // kotlin.String | 
            //apiInstance.getOfficeTemplate(dateFormat)
        }

        // to test postOfficeTemplate
        should("test postOfficeTemplate") {
            // uncomment below to test postOfficeTemplate
            //val dateFormat : kotlin.String = dateFormat_example // kotlin.String | 
            //val locale : kotlin.String = locale_example // kotlin.String | 
            //val uploadedInputStream : java.io.File = BINARY_DATA_HERE // java.io.File | 
            //val result : kotlin.String = apiInstance.postOfficeTemplate(dateFormat, locale, uploadedInputStream)
            //result shouldBe ("TODO")
        }

        // to test retrieveOffice
        should("test retrieveOffice") {
            // uncomment below to test retrieveOffice
            //val officeId : kotlin.Long = 789 // kotlin.Long | officeId
            //val result : GetOfficesResponse = apiInstance.retrieveOffice(officeId)
            //result shouldBe ("TODO")
        }

        // to test retrieveOfficeByExternalId
        should("test retrieveOfficeByExternalId") {
            // uncomment below to test retrieveOfficeByExternalId
            //val externalId : kotlin.String = externalId_example // kotlin.String | externalId
            //val result : GetOfficesResponse = apiInstance.retrieveOfficeByExternalId(externalId)
            //result shouldBe ("TODO")
        }

        // to test retrieveOfficeTemplate1
        should("test retrieveOfficeTemplate1") {
            // uncomment below to test retrieveOfficeTemplate1
            //val result : GetOfficesTemplateResponse = apiInstance.retrieveOfficeTemplate1()
            //result shouldBe ("TODO")
        }

        // to test retrieveOffices
        should("test retrieveOffices") {
            // uncomment below to test retrieveOffices
            //val includeAllOffices : kotlin.Boolean = true // kotlin.Boolean | includeAllOffices
            //val orderBy : kotlin.String = orderBy_example // kotlin.String | orderBy
            //val sortOrder : kotlin.String = sortOrder_example // kotlin.String | sortOrder
            //val result : kotlin.collections.List<GetOfficesResponse> = apiInstance.retrieveOffices(includeAllOffices, orderBy, sortOrder)
            //result shouldBe ("TODO")
        }

        // to test updateOffice
        should("test updateOffice") {
            // uncomment below to test updateOffice
            //val officeId : kotlin.Long = 789 // kotlin.Long | officeId
            //val putOfficesOfficeIdRequest : PutOfficesOfficeIdRequest =  // PutOfficesOfficeIdRequest | 
            //val result : PutOfficesOfficeIdResponse = apiInstance.updateOffice(officeId, putOfficesOfficeIdRequest)
            //result shouldBe ("TODO")
        }

        // to test updateOfficeWithExternalId
        should("test updateOfficeWithExternalId") {
            // uncomment below to test updateOfficeWithExternalId
            //val externalId : kotlin.String = externalId_example // kotlin.String | externalId
            //val putOfficesOfficeIdRequest : PutOfficesOfficeIdRequest =  // PutOfficesOfficeIdRequest | 
            //val result : PutOfficesOfficeIdResponse = apiInstance.updateOfficeWithExternalId(externalId, putOfficesOfficeIdRequest)
            //result shouldBe ("TODO")
        }

    }
}
