/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.PaymentTypeApi
import org.openapitools.client.models.DeletePaymentTypesPaymentTypeIdResponse
import org.openapitools.client.models.GetPaymentTypesPaymentTypeIdResponse
import org.openapitools.client.models.GetPaymentTypesResponse
import org.openapitools.client.models.PostPaymentTypesRequest
import org.openapitools.client.models.PostPaymentTypesResponse
import org.openapitools.client.models.PutPaymentTypesPaymentTypeIdRequest
import org.openapitools.client.models.PutPaymentTypesPaymentTypeIdResponse

class PaymentTypeApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of PaymentTypeApi
        //val apiInstance = PaymentTypeApi()

        // to test createPaymentType
        should("test createPaymentType") {
            // uncomment below to test createPaymentType
            //val postPaymentTypesRequest : PostPaymentTypesRequest =  // PostPaymentTypesRequest | 
            //val result : PostPaymentTypesResponse = apiInstance.createPaymentType(postPaymentTypesRequest)
            //result shouldBe ("TODO")
        }

        // to test deleteCode1
        should("test deleteCode1") {
            // uncomment below to test deleteCode1
            //val paymentTypeId : kotlin.Long = 789 // kotlin.Long | paymentTypeId
            //val result : DeletePaymentTypesPaymentTypeIdResponse = apiInstance.deleteCode1(paymentTypeId)
            //result shouldBe ("TODO")
        }

        // to test getAllPaymentTypes
        should("test getAllPaymentTypes") {
            // uncomment below to test getAllPaymentTypes
            //val onlyWithCode : kotlin.Boolean = true // kotlin.Boolean | onlyWithCode
            //val result : kotlin.collections.List<GetPaymentTypesResponse> = apiInstance.getAllPaymentTypes(onlyWithCode)
            //result shouldBe ("TODO")
        }

        // to test retrieveOnePaymentType
        should("test retrieveOnePaymentType") {
            // uncomment below to test retrieveOnePaymentType
            //val paymentTypeId : kotlin.Long = 789 // kotlin.Long | paymentTypeId
            //val result : GetPaymentTypesPaymentTypeIdResponse = apiInstance.retrieveOnePaymentType(paymentTypeId)
            //result shouldBe ("TODO")
        }

        // to test updatePaymentType
        should("test updatePaymentType") {
            // uncomment below to test updatePaymentType
            //val paymentTypeId : kotlin.Long = 789 // kotlin.Long | paymentTypeId
            //val putPaymentTypesPaymentTypeIdRequest : PutPaymentTypesPaymentTypeIdRequest =  // PutPaymentTypesPaymentTypeIdRequest | 
            //val result : PutPaymentTypesPaymentTypeIdResponse = apiInstance.updatePaymentType(paymentTypeId, putPaymentTypesPaymentTypeIdRequest)
            //result shouldBe ("TODO")
        }

    }
}
