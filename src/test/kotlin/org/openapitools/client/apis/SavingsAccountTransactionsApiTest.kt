/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.SavingsAccountTransactionsApi
import org.openapitools.client.models.PagedLocalRequestAdvancedQueryRequest
import org.openapitools.client.models.PostSavingsAccountBulkReversalTransactionsRequest
import org.openapitools.client.models.PostSavingsAccountTransactionsRequest
import org.openapitools.client.models.PostSavingsAccountTransactionsResponse
import org.openapitools.client.models.SavingsAccountTransactionsSearchResponse

class SavingsAccountTransactionsApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of SavingsAccountTransactionsApi
        //val apiInstance = SavingsAccountTransactionsApi()

        // to test adjustTransaction1
        should("test adjustTransaction1") {
            // uncomment below to test adjustTransaction1
            //val savingsId : kotlin.Long = 789 // kotlin.Long | 
            //val transactionId : kotlin.Long = 789 // kotlin.Long | 
            //val postSavingsAccountBulkReversalTransactionsRequest : PostSavingsAccountBulkReversalTransactionsRequest =  // PostSavingsAccountBulkReversalTransactionsRequest | 
            //val command : kotlin.String = command_example // kotlin.String | 
            //val result : kotlin.collections.List<PostSavingsAccountBulkReversalTransactionsRequest> = apiInstance.adjustTransaction1(savingsId, transactionId, postSavingsAccountBulkReversalTransactionsRequest, command)
            //result shouldBe ("TODO")
        }

        // to test advancedQuery1
        should("test advancedQuery1") {
            // uncomment below to test advancedQuery1
            //val savingsId : kotlin.Long = 789 // kotlin.Long | savingsId
            //val pagedLocalRequestAdvancedQueryRequest : PagedLocalRequestAdvancedQueryRequest =  // PagedLocalRequestAdvancedQueryRequest | 
            //val result : kotlin.String = apiInstance.advancedQuery1(savingsId, pagedLocalRequestAdvancedQueryRequest)
            //result shouldBe ("TODO")
        }

        // to test retrieveOne24
        should("test retrieveOne24") {
            // uncomment below to test retrieveOne24
            //val savingsId : kotlin.Long = 789 // kotlin.Long | 
            //val transactionId : kotlin.Long = 789 // kotlin.Long | 
            //val result : kotlin.String = apiInstance.retrieveOne24(savingsId, transactionId)
            //result shouldBe ("TODO")
        }

        // to test retrieveTemplate19
        should("test retrieveTemplate19") {
            // uncomment below to test retrieveTemplate19
            //val savingsId : kotlin.Long = 789 // kotlin.Long | 
            //val result : kotlin.String = apiInstance.retrieveTemplate19(savingsId)
            //result shouldBe ("TODO")
        }

        // to test searchTransactions
        should("test searchTransactions") {
            // uncomment below to test searchTransactions
            //val savingsId : kotlin.Long = 789 // kotlin.Long | savings account id
            //val fromDate : kotlin.String = 2023-08-08 // kotlin.String | minimum value date (inclusive)
            //val toDate : kotlin.String = 2023-08-15 // kotlin.String | maximum value date (inclusive)
            //val fromSubmittedDate : kotlin.String = 2023-08-08 // kotlin.String | minimum booking date (inclusive)
            //val toSubmittedDate : kotlin.String = 2023-08-15 // kotlin.String | maximum booking date (inclusive)
            //val fromAmount : java.math.BigDecimal = 1000 // java.math.BigDecimal | minimum transaction amount (inclusive)
            //val toAmount : java.math.BigDecimal = 50000000 // java.math.BigDecimal | maximum transaction amount (inclusive)
            //val types : kotlin.String = 1,2,4,20,21 // kotlin.String | transaction types
            //val credit : kotlin.Boolean = true // kotlin.Boolean | credit
            //val debit : kotlin.Boolean = true // kotlin.Boolean | debit
            //val offset : kotlin.Int = 56 // kotlin.Int | offset
            //val limit : kotlin.Int = 56 // kotlin.Int | limit
            //val orderBy : kotlin.String = createdDate,transactionDate,id // kotlin.String | sort properties
            //val sortOrder : kotlin.String = sortOrder_example // kotlin.String | sort direction
            //val locale : kotlin.String = locale_example // kotlin.String | locale
            //val dateFormat : kotlin.String = yyyy-MM-dd // kotlin.String | date format
            //val result : SavingsAccountTransactionsSearchResponse = apiInstance.searchTransactions(savingsId, fromDate, toDate, fromSubmittedDate, toSubmittedDate, fromAmount, toAmount, types, credit, debit, offset, limit, orderBy, sortOrder, locale, dateFormat)
            //result shouldBe ("TODO")
        }

        // to test transaction2
        should("test transaction2") {
            // uncomment below to test transaction2
            //val savingsId : kotlin.Long = 789 // kotlin.Long | 
            //val postSavingsAccountTransactionsRequest : PostSavingsAccountTransactionsRequest =  // PostSavingsAccountTransactionsRequest | 
            //val command : kotlin.String = command_example // kotlin.String | 
            //val result : PostSavingsAccountTransactionsResponse = apiInstance.transaction2(savingsId, postSavingsAccountTransactionsRequest, command)
            //result shouldBe ("TODO")
        }

    }
}
