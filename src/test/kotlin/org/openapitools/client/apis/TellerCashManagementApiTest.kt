/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.TellerCashManagementApi
import org.openapitools.client.models.DeleteTellersTellerIdCashiersCashierIdResponse
import org.openapitools.client.models.GetTellersResponse
import org.openapitools.client.models.GetTellersTellerIdCashiersCashierIdResponse
import org.openapitools.client.models.GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse
import org.openapitools.client.models.GetTellersTellerIdCashiersCashiersIdTransactionsResponse
import org.openapitools.client.models.GetTellersTellerIdCashiersCashiersIdTransactionsTemplateResponse
import org.openapitools.client.models.GetTellersTellerIdCashiersResponse
import org.openapitools.client.models.GetTellersTellerIdCashiersTemplateResponse
import org.openapitools.client.models.PostTellersRequest
import org.openapitools.client.models.PostTellersResponse
import org.openapitools.client.models.PostTellersTellerIdCashiersCashierIdAllocateRequest
import org.openapitools.client.models.PostTellersTellerIdCashiersCashierIdAllocateResponse
import org.openapitools.client.models.PostTellersTellerIdCashiersCashierIdSettleRequest
import org.openapitools.client.models.PostTellersTellerIdCashiersCashierIdSettleResponse
import org.openapitools.client.models.PostTellersTellerIdCashiersRequest
import org.openapitools.client.models.PostTellersTellerIdCashiersResponse
import org.openapitools.client.models.PutTellersRequest
import org.openapitools.client.models.PutTellersResponse
import org.openapitools.client.models.PutTellersTellerIdCashiersCashierIdRequest
import org.openapitools.client.models.PutTellersTellerIdCashiersCashierIdResponse

class TellerCashManagementApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of TellerCashManagementApi
        //val apiInstance = TellerCashManagementApi()

        // to test allocateCashToCashier
        should("test allocateCashToCashier") {
            // uncomment below to test allocateCashToCashier
            //val tellerId : kotlin.Long = 789 // kotlin.Long | tellerId
            //val cashierId : kotlin.Long = 789 // kotlin.Long | cashierId
            //val postTellersTellerIdCashiersCashierIdAllocateRequest : PostTellersTellerIdCashiersCashierIdAllocateRequest =  // PostTellersTellerIdCashiersCashierIdAllocateRequest | 
            //val result : PostTellersTellerIdCashiersCashierIdAllocateResponse = apiInstance.allocateCashToCashier(tellerId, cashierId, postTellersTellerIdCashiersCashierIdAllocateRequest)
            //result shouldBe ("TODO")
        }

        // to test createCashier
        should("test createCashier") {
            // uncomment below to test createCashier
            //val tellerId : kotlin.Long = 789 // kotlin.Long | tellerId
            //val postTellersTellerIdCashiersRequest : PostTellersTellerIdCashiersRequest =  // PostTellersTellerIdCashiersRequest | 
            //val result : PostTellersTellerIdCashiersResponse = apiInstance.createCashier(tellerId, postTellersTellerIdCashiersRequest)
            //result shouldBe ("TODO")
        }

        // to test createTeller
        should("test createTeller") {
            // uncomment below to test createTeller
            //val postTellersRequest : PostTellersRequest =  // PostTellersRequest | 
            //val result : PostTellersResponse = apiInstance.createTeller(postTellersRequest)
            //result shouldBe ("TODO")
        }

        // to test deleteCashier
        should("test deleteCashier") {
            // uncomment below to test deleteCashier
            //val tellerId : kotlin.Long = 789 // kotlin.Long | tellerId
            //val cashierId : kotlin.Long = 789 // kotlin.Long | cashierId
            //val result : DeleteTellersTellerIdCashiersCashierIdResponse = apiInstance.deleteCashier(tellerId, cashierId)
            //result shouldBe ("TODO")
        }

        // to test deleteTeller
        should("test deleteTeller") {
            // uncomment below to test deleteTeller
            //val tellerId : kotlin.Long = 789 // kotlin.Long | tellerId
            //val result : kotlin.String = apiInstance.deleteTeller(tellerId)
            //result shouldBe ("TODO")
        }

        // to test findCashierData
        should("test findCashierData") {
            // uncomment below to test findCashierData
            //val tellerId : kotlin.Long = 789 // kotlin.Long | tellerId
            //val cashierId : kotlin.Long = 789 // kotlin.Long | cashierId
            //val result : GetTellersTellerIdCashiersCashierIdResponse = apiInstance.findCashierData(tellerId, cashierId)
            //result shouldBe ("TODO")
        }

        // to test findTeller
        should("test findTeller") {
            // uncomment below to test findTeller
            //val tellerId : kotlin.Long = 789 // kotlin.Long | tellerId
            //val result : GetTellersResponse = apiInstance.findTeller(tellerId)
            //result shouldBe ("TODO")
        }

        // to test findTransactionData
        should("test findTransactionData") {
            // uncomment below to test findTransactionData
            //val tellerId : kotlin.Long = 789 // kotlin.Long | tellerId
            //val transactionId : kotlin.Long = 789 // kotlin.Long | transactionId
            //val result : kotlin.String = apiInstance.findTransactionData(tellerId, transactionId)
            //result shouldBe ("TODO")
        }

        // to test getCashierData1
        should("test getCashierData1") {
            // uncomment below to test getCashierData1
            //val tellerId : kotlin.Long = 789 // kotlin.Long | tellerId
            //val fromdate : kotlin.String = fromdate_example // kotlin.String | fromdate
            //val todate : kotlin.String = todate_example // kotlin.String | todate
            //val result : GetTellersTellerIdCashiersResponse = apiInstance.getCashierData1(tellerId, fromdate, todate)
            //result shouldBe ("TODO")
        }

        // to test getCashierTemplate
        should("test getCashierTemplate") {
            // uncomment below to test getCashierTemplate
            //val tellerId : kotlin.Long = 789 // kotlin.Long | tellerId
            //val result : GetTellersTellerIdCashiersTemplateResponse = apiInstance.getCashierTemplate(tellerId)
            //result shouldBe ("TODO")
        }

        // to test getCashierTxnTemplate
        should("test getCashierTxnTemplate") {
            // uncomment below to test getCashierTxnTemplate
            //val tellerId : kotlin.Long = 789 // kotlin.Long | tellerId
            //val cashierId : kotlin.Long = 789 // kotlin.Long | cashierId
            //val result : GetTellersTellerIdCashiersCashiersIdTransactionsTemplateResponse = apiInstance.getCashierTxnTemplate(tellerId, cashierId)
            //result shouldBe ("TODO")
        }

        // to test getJournalData
        should("test getJournalData") {
            // uncomment below to test getJournalData
            //val tellerId : kotlin.Long = 789 // kotlin.Long | tellerId
            //val cashierId : kotlin.Long = 789 // kotlin.Long | cashierId
            //val dateRange : kotlin.String = dateRange_example // kotlin.String | dateRange
            //val result : kotlin.String = apiInstance.getJournalData(tellerId, cashierId, dateRange)
            //result shouldBe ("TODO")
        }

        // to test getTellerData
        should("test getTellerData") {
            // uncomment below to test getTellerData
            //val officeId : kotlin.Long = 789 // kotlin.Long | officeId
            //val result : kotlin.collections.List<GetTellersResponse> = apiInstance.getTellerData(officeId)
            //result shouldBe ("TODO")
        }

        // to test getTransactionData
        should("test getTransactionData") {
            // uncomment below to test getTransactionData
            //val tellerId : kotlin.Long = 789 // kotlin.Long | tellerId
            //val dateRange : kotlin.String = dateRange_example // kotlin.String | dateRange
            //val result : kotlin.String = apiInstance.getTransactionData(tellerId, dateRange)
            //result shouldBe ("TODO")
        }

        // to test getTransactionsForCashier
        should("test getTransactionsForCashier") {
            // uncomment below to test getTransactionsForCashier
            //val tellerId : kotlin.Long = 789 // kotlin.Long | tellerId
            //val cashierId : kotlin.Long = 789 // kotlin.Long | cashierId
            //val currencyCode : kotlin.String = currencyCode_example // kotlin.String | currencyCode
            //val offset : kotlin.Int = 56 // kotlin.Int | offset
            //val limit : kotlin.Int = 56 // kotlin.Int | limit
            //val orderBy : kotlin.String = orderBy_example // kotlin.String | orderBy
            //val sortOrder : kotlin.String = sortOrder_example // kotlin.String | sortOrder
            //val result : kotlin.collections.List<GetTellersTellerIdCashiersCashiersIdTransactionsResponse> = apiInstance.getTransactionsForCashier(tellerId, cashierId, currencyCode, offset, limit, orderBy, sortOrder)
            //result shouldBe ("TODO")
        }

        // to test getTransactionsWtihSummaryForCashier
        should("test getTransactionsWtihSummaryForCashier") {
            // uncomment below to test getTransactionsWtihSummaryForCashier
            //val tellerId : kotlin.Long = 789 // kotlin.Long | tellerId
            //val cashierId : kotlin.Long = 789 // kotlin.Long | cashierId
            //val currencyCode : kotlin.String = currencyCode_example // kotlin.String | currencyCode
            //val offset : kotlin.Int = 56 // kotlin.Int | offset
            //val limit : kotlin.Int = 56 // kotlin.Int | limit
            //val orderBy : kotlin.String = orderBy_example // kotlin.String | orderBy
            //val sortOrder : kotlin.String = sortOrder_example // kotlin.String | sortOrder
            //val result : GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse = apiInstance.getTransactionsWtihSummaryForCashier(tellerId, cashierId, currencyCode, offset, limit, orderBy, sortOrder)
            //result shouldBe ("TODO")
        }

        // to test settleCashFromCashier
        should("test settleCashFromCashier") {
            // uncomment below to test settleCashFromCashier
            //val tellerId : kotlin.Long = 789 // kotlin.Long | tellerId
            //val cashierId : kotlin.Long = 789 // kotlin.Long | cashierId
            //val postTellersTellerIdCashiersCashierIdSettleRequest : PostTellersTellerIdCashiersCashierIdSettleRequest =  // PostTellersTellerIdCashiersCashierIdSettleRequest | 
            //val result : PostTellersTellerIdCashiersCashierIdSettleResponse = apiInstance.settleCashFromCashier(tellerId, cashierId, postTellersTellerIdCashiersCashierIdSettleRequest)
            //result shouldBe ("TODO")
        }

        // to test updateCashier
        should("test updateCashier") {
            // uncomment below to test updateCashier
            //val tellerId : kotlin.Long = 789 // kotlin.Long | tellerId
            //val cashierId : kotlin.Long = 789 // kotlin.Long | cashierId
            //val putTellersTellerIdCashiersCashierIdRequest : PutTellersTellerIdCashiersCashierIdRequest =  // PutTellersTellerIdCashiersCashierIdRequest | 
            //val result : PutTellersTellerIdCashiersCashierIdResponse = apiInstance.updateCashier(tellerId, cashierId, putTellersTellerIdCashiersCashierIdRequest)
            //result shouldBe ("TODO")
        }

        // to test updateTeller
        should("test updateTeller") {
            // uncomment below to test updateTeller
            //val tellerId : kotlin.Long = 789 // kotlin.Long | tellerId
            //val putTellersRequest : PutTellersRequest =  // PutTellersRequest | 
            //val result : PutTellersResponse = apiInstance.updateTeller(tellerId, putTellersRequest)
            //result shouldBe ("TODO")
        }

    }
}
