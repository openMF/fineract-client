/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.UserGeneratedDocumentsApi
import org.openapitools.client.models.DeleteTemplatesTemplateIdResponse
import org.openapitools.client.models.GetTemplatesResponse
import org.openapitools.client.models.GetTemplatesTemplateIdResponse
import org.openapitools.client.models.GetTemplatesTemplateResponse
import org.openapitools.client.models.PostTemplatesRequest
import org.openapitools.client.models.PostTemplatesResponse
import org.openapitools.client.models.PutTemplatesTemplateIdRequest
import org.openapitools.client.models.PutTemplatesTemplateIdResponse

class UserGeneratedDocumentsApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of UserGeneratedDocumentsApi
        //val apiInstance = UserGeneratedDocumentsApi()

        // to test createTemplate
        should("test createTemplate") {
            // uncomment below to test createTemplate
            //val postTemplatesRequest : PostTemplatesRequest =  // PostTemplatesRequest | 
            //val result : PostTemplatesResponse = apiInstance.createTemplate(postTemplatesRequest)
            //result shouldBe ("TODO")
        }

        // to test deleteTemplate
        should("test deleteTemplate") {
            // uncomment below to test deleteTemplate
            //val templateId : kotlin.Long = 789 // kotlin.Long | templateId
            //val result : DeleteTemplatesTemplateIdResponse = apiInstance.deleteTemplate(templateId)
            //result shouldBe ("TODO")
        }

        // to test getTemplateByTemplate
        should("test getTemplateByTemplate") {
            // uncomment below to test getTemplateByTemplate
            //val templateId : kotlin.Long = 789 // kotlin.Long | 
            //val result : kotlin.String = apiInstance.getTemplateByTemplate(templateId)
            //result shouldBe ("TODO")
        }

        // to test mergeTemplate
        should("test mergeTemplate") {
            // uncomment below to test mergeTemplate
            //val templateId : kotlin.Long = 789 // kotlin.Long | 
            //val body : kotlin.String = body_example // kotlin.String | 
            //val result : kotlin.String = apiInstance.mergeTemplate(templateId, body)
            //result shouldBe ("TODO")
        }

        // to test retrieveAll40
        should("test retrieveAll40") {
            // uncomment below to test retrieveAll40
            //val typeId : kotlin.Int = 56 // kotlin.Int | typeId
            //val entityId : kotlin.Int = 56 // kotlin.Int | entityId
            //val result : GetTemplatesResponse = apiInstance.retrieveAll40(typeId, entityId)
            //result shouldBe ("TODO")
        }

        // to test retrieveOne30
        should("test retrieveOne30") {
            // uncomment below to test retrieveOne30
            //val templateId : kotlin.Long = 789 // kotlin.Long | templateId
            //val result : GetTemplatesTemplateIdResponse = apiInstance.retrieveOne30(templateId)
            //result shouldBe ("TODO")
        }

        // to test saveTemplate
        should("test saveTemplate") {
            // uncomment below to test saveTemplate
            //val templateId : kotlin.Long = 789 // kotlin.Long | templateId
            //val putTemplatesTemplateIdRequest : PutTemplatesTemplateIdRequest =  // PutTemplatesTemplateIdRequest | 
            //val result : PutTemplatesTemplateIdResponse = apiInstance.saveTemplate(templateId, putTemplatesTemplateIdRequest)
            //result shouldBe ("TODO")
        }

        // to test template20
        should("test template20") {
            // uncomment below to test template20
            //val result : GetTemplatesTemplateResponse = apiInstance.template20()
            //result shouldBe ("TODO")
        }

    }
}
