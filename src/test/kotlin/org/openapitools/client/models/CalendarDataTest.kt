/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.CalendarData
import org.openapitools.client.models.EnumOptionData

class CalendarDataTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CalendarData
        //val modelInstance = CalendarData()

        // to test the property `calendarInstanceId`
        should("test calendarInstanceId") {
            // uncomment below to test the property
            //modelInstance.calendarInstanceId shouldBe ("TODO")
        }

        // to test the property `calendarTypeOptions`
        should("test calendarTypeOptions") {
            // uncomment below to test the property
            //modelInstance.calendarTypeOptions shouldBe ("TODO")
        }

        // to test the property `centerId`
        should("test centerId") {
            // uncomment below to test the property
            //modelInstance.centerId shouldBe ("TODO")
        }

        // to test the property `createdByUserId`
        should("test createdByUserId") {
            // uncomment below to test the property
            //modelInstance.createdByUserId shouldBe ("TODO")
        }

        // to test the property `createdByUsername`
        should("test createdByUsername") {
            // uncomment below to test the property
            //modelInstance.createdByUsername shouldBe ("TODO")
        }

        // to test the property `createdDate`
        should("test createdDate") {
            // uncomment below to test the property
            //modelInstance.createdDate shouldBe ("TODO")
        }

        // to test the property `dateFormat`
        should("test dateFormat") {
            // uncomment below to test the property
            //modelInstance.dateFormat shouldBe ("TODO")
        }

        // to test the property `description`
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `duration`
        should("test duration") {
            // uncomment below to test the property
            //modelInstance.duration shouldBe ("TODO")
        }

        // to test the property `endDate`
        should("test endDate") {
            // uncomment below to test the property
            //modelInstance.endDate shouldBe ("TODO")
        }

        // to test the property `entityId`
        should("test entityId") {
            // uncomment below to test the property
            //modelInstance.entityId shouldBe ("TODO")
        }

        // to test the property `entityType`
        should("test entityType") {
            // uncomment below to test the property
            //modelInstance.entityType shouldBe ("TODO")
        }

        // to test the property `entityTypeOptions`
        should("test entityTypeOptions") {
            // uncomment below to test the property
            //modelInstance.entityTypeOptions shouldBe ("TODO")
        }

        // to test the property `firstReminder`
        should("test firstReminder") {
            // uncomment below to test the property
            //modelInstance.firstReminder shouldBe ("TODO")
        }

        // to test the property `frequency`
        should("test frequency") {
            // uncomment below to test the property
            //modelInstance.frequency shouldBe ("TODO")
        }

        // to test the property `frequencyNthDayTypeOptions`
        should("test frequencyNthDayTypeOptions") {
            // uncomment below to test the property
            //modelInstance.frequencyNthDayTypeOptions shouldBe ("TODO")
        }

        // to test the property `frequencyOptions`
        should("test frequencyOptions") {
            // uncomment below to test the property
            //modelInstance.frequencyOptions shouldBe ("TODO")
        }

        // to test the property `humanReadable`
        should("test humanReadable") {
            // uncomment below to test the property
            //modelInstance.humanReadable shouldBe ("TODO")
        }

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `interval`
        should("test interval") {
            // uncomment below to test the property
            //modelInstance.interval shouldBe ("TODO")
        }

        // to test the property `lastUpdatedByUserId`
        should("test lastUpdatedByUserId") {
            // uncomment below to test the property
            //modelInstance.lastUpdatedByUserId shouldBe ("TODO")
        }

        // to test the property `lastUpdatedByUsername`
        should("test lastUpdatedByUsername") {
            // uncomment below to test the property
            //modelInstance.lastUpdatedByUsername shouldBe ("TODO")
        }

        // to test the property `lastUpdatedDate`
        should("test lastUpdatedDate") {
            // uncomment below to test the property
            //modelInstance.lastUpdatedDate shouldBe ("TODO")
        }

        // to test the property `locale`
        should("test locale") {
            // uncomment below to test the property
            //modelInstance.locale shouldBe ("TODO")
        }

        // to test the property `location`
        should("test location") {
            // uncomment below to test the property
            //modelInstance.location shouldBe ("TODO")
        }

        // to test the property `meetingTime`
        should("test meetingTime") {
            // uncomment below to test the property
            //modelInstance.meetingTime shouldBe ("TODO")
        }

        // to test the property `nextTenRecurringDates`
        should("test nextTenRecurringDates") {
            // uncomment below to test the property
            //modelInstance.nextTenRecurringDates shouldBe ("TODO")
        }

        // to test the property `recentEligibleMeetingDate`
        should("test recentEligibleMeetingDate") {
            // uncomment below to test the property
            //modelInstance.recentEligibleMeetingDate shouldBe ("TODO")
        }

        // to test the property `recurrence`
        should("test recurrence") {
            // uncomment below to test the property
            //modelInstance.recurrence shouldBe ("TODO")
        }

        // to test the property `recurringDates`
        should("test recurringDates") {
            // uncomment below to test the property
            //modelInstance.recurringDates shouldBe ("TODO")
        }

        // to test the property `remindBy`
        should("test remindBy") {
            // uncomment below to test the property
            //modelInstance.remindBy shouldBe ("TODO")
        }

        // to test the property `remindByOptions`
        should("test remindByOptions") {
            // uncomment below to test the property
            //modelInstance.remindByOptions shouldBe ("TODO")
        }

        // to test the property `repeating`
        should("test repeating") {
            // uncomment below to test the property
            //modelInstance.repeating shouldBe ("TODO")
        }

        // to test the property `repeatsOnDay`
        should("test repeatsOnDay") {
            // uncomment below to test the property
            //modelInstance.repeatsOnDay shouldBe ("TODO")
        }

        // to test the property `repeatsOnDayOfMonth`
        should("test repeatsOnDayOfMonth") {
            // uncomment below to test the property
            //modelInstance.repeatsOnDayOfMonth shouldBe ("TODO")
        }

        // to test the property `repeatsOnDayOptions`
        should("test repeatsOnDayOptions") {
            // uncomment below to test the property
            //modelInstance.repeatsOnDayOptions shouldBe ("TODO")
        }

        // to test the property `repeatsOnNthDayOfMonth`
        should("test repeatsOnNthDayOfMonth") {
            // uncomment below to test the property
            //modelInstance.repeatsOnNthDayOfMonth shouldBe ("TODO")
        }

        // to test the property `rowIndex`
        should("test rowIndex") {
            // uncomment below to test the property
            //modelInstance.rowIndex shouldBe ("TODO")
        }

        // to test the property `secondReminder`
        should("test secondReminder") {
            // uncomment below to test the property
            //modelInstance.secondReminder shouldBe ("TODO")
        }

        // to test the property `startDate`
        should("test startDate") {
            // uncomment below to test the property
            //modelInstance.startDate shouldBe ("TODO")
        }

        // to test the property `title`
        should("test title") {
            // uncomment below to test the property
            //modelInstance.title shouldBe ("TODO")
        }

        // to test the property `type`
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

        // to test the property `typeId`
        should("test typeId") {
            // uncomment below to test the property
            //modelInstance.typeId shouldBe ("TODO")
        }

    }
}
