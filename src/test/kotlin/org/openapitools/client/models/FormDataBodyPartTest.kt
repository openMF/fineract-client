/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.FormDataBodyPart
import org.openapitools.client.models.BodyPartHeaders
import org.openapitools.client.models.BodyPartParameterizedHeaders
import org.openapitools.client.models.ContentDisposition
import org.openapitools.client.models.FormDataContentDisposition
import org.openapitools.client.models.MediaType
import org.openapitools.client.models.MultiPart

class FormDataBodyPartTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of FormDataBodyPart
        //val modelInstance = FormDataBodyPart()

        // to test the property `content`
        should("test content") {
            // uncomment below to test the property
            //modelInstance.content shouldBe ("TODO")
        }

        // to test the property `contentDisposition`
        should("test contentDisposition") {
            // uncomment below to test the property
            //modelInstance.contentDisposition shouldBe ("TODO")
        }

        // to test the property `entity`
        should("test entity") {
            // uncomment below to test the property
            //modelInstance.entity shouldBe ("TODO")
        }

        // to test the property `fileName`
        should("test fileName") {
            // uncomment below to test the property
            //modelInstance.fileName shouldBe ("TODO")
        }

        // to test the property `formDataContentDisposition`
        should("test formDataContentDisposition") {
            // uncomment below to test the property
            //modelInstance.formDataContentDisposition shouldBe ("TODO")
        }

        // to test the property `headers`
        should("test headers") {
            // uncomment below to test the property
            //modelInstance.headers shouldBe ("TODO")
        }

        // to test the property `mediaType`
        should("test mediaType") {
            // uncomment below to test the property
            //modelInstance.mediaType shouldBe ("TODO")
        }

        // to test the property `messageBodyWorkers`
        should("test messageBodyWorkers") {
            // uncomment below to test the property
            //modelInstance.messageBodyWorkers shouldBe ("TODO")
        }

        // to test the property `name`
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `parameterizedHeaders`
        should("test parameterizedHeaders") {
            // uncomment below to test the property
            //modelInstance.parameterizedHeaders shouldBe ("TODO")
        }

        // to test the property `parent`
        should("test parent") {
            // uncomment below to test the property
            //modelInstance.parent shouldBe ("TODO")
        }

        // to test the property `providers`
        should("test providers") {
            // uncomment below to test the property
            //modelInstance.providers shouldBe ("TODO")
        }

        // to test the property `simple`
        should("test simple") {
            // uncomment below to test the property
            //modelInstance.simple shouldBe ("TODO")
        }

        // to test the property ``value``
        should("test `value`") {
            // uncomment below to test the property
            //modelInstance.`value` shouldBe ("TODO")
        }

    }
}
