/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.GetFixedDepositProductsProductIdResponse
import org.openapitools.client.models.GetFixedDepositProductsInterestCalculationDaysInYearType
import org.openapitools.client.models.GetFixedDepositProductsInterestCalculationType
import org.openapitools.client.models.GetFixedDepositProductsInterestPostingPeriodType
import org.openapitools.client.models.GetFixedDepositProductsProductIdAccountingMappings
import org.openapitools.client.models.GetFixedDepositProductsProductIdActiveChart
import org.openapitools.client.models.GetFixedDepositProductsProductIdCurrency
import org.openapitools.client.models.GetFixedDepositProductsProductIdFeeToIncomeAccountMappings
import org.openapitools.client.models.GetFixedDepositProductsProductIdInterestCompoundingPeriodType
import org.openapitools.client.models.GetFixedDepositProductsProductIdMaxDepositTermType
import org.openapitools.client.models.GetFixedDepositProductsProductIdMinDepositTermType
import org.openapitools.client.models.GetFixedDepositProductsProductIdPenaltyToIncomeAccountMappings
import org.openapitools.client.models.GetFixedDepositProductsProductIdPreClosurePenalInterestOnType

class GetFixedDepositProductsProductIdResponseTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of GetFixedDepositProductsProductIdResponse
        //val modelInstance = GetFixedDepositProductsProductIdResponse()

        // to test the property `accountingMappings`
        should("test accountingMappings") {
            // uncomment below to test the property
            //modelInstance.accountingMappings shouldBe ("TODO")
        }

        // to test the property `activeChart`
        should("test activeChart") {
            // uncomment below to test the property
            //modelInstance.activeChart shouldBe ("TODO")
        }

        // to test the property `currency`
        should("test currency") {
            // uncomment below to test the property
            //modelInstance.currency shouldBe ("TODO")
        }

        // to test the property `description`
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `feeToIncomeAccountMappings`
        should("test feeToIncomeAccountMappings") {
            // uncomment below to test the property
            //modelInstance.feeToIncomeAccountMappings shouldBe ("TODO")
        }

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `interestCalculationDaysInYearType`
        should("test interestCalculationDaysInYearType") {
            // uncomment below to test the property
            //modelInstance.interestCalculationDaysInYearType shouldBe ("TODO")
        }

        // to test the property `interestCalculationType`
        should("test interestCalculationType") {
            // uncomment below to test the property
            //modelInstance.interestCalculationType shouldBe ("TODO")
        }

        // to test the property `interestCompoundingPeriodType`
        should("test interestCompoundingPeriodType") {
            // uncomment below to test the property
            //modelInstance.interestCompoundingPeriodType shouldBe ("TODO")
        }

        // to test the property `interestPostingPeriodType`
        should("test interestPostingPeriodType") {
            // uncomment below to test the property
            //modelInstance.interestPostingPeriodType shouldBe ("TODO")
        }

        // to test the property `maxDepositTerm`
        should("test maxDepositTerm") {
            // uncomment below to test the property
            //modelInstance.maxDepositTerm shouldBe ("TODO")
        }

        // to test the property `maxDepositTermType`
        should("test maxDepositTermType") {
            // uncomment below to test the property
            //modelInstance.maxDepositTermType shouldBe ("TODO")
        }

        // to test the property `minDepositTerm`
        should("test minDepositTerm") {
            // uncomment below to test the property
            //modelInstance.minDepositTerm shouldBe ("TODO")
        }

        // to test the property `minDepositTermType`
        should("test minDepositTermType") {
            // uncomment below to test the property
            //modelInstance.minDepositTermType shouldBe ("TODO")
        }

        // to test the property `name`
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `penaltyToIncomeAccountMappings`
        should("test penaltyToIncomeAccountMappings") {
            // uncomment below to test the property
            //modelInstance.penaltyToIncomeAccountMappings shouldBe ("TODO")
        }

        // to test the property `preClosurePenalApplicable`
        should("test preClosurePenalApplicable") {
            // uncomment below to test the property
            //modelInstance.preClosurePenalApplicable shouldBe ("TODO")
        }

        // to test the property `preClosurePenalInterest`
        should("test preClosurePenalInterest") {
            // uncomment below to test the property
            //modelInstance.preClosurePenalInterest shouldBe ("TODO")
        }

        // to test the property `preClosurePenalInterestOnType`
        should("test preClosurePenalInterestOnType") {
            // uncomment below to test the property
            //modelInstance.preClosurePenalInterestOnType shouldBe ("TODO")
        }

        // to test the property `shortName`
        should("test shortName") {
            // uncomment below to test the property
            //modelInstance.shortName shouldBe ("TODO")
        }

    }
}
