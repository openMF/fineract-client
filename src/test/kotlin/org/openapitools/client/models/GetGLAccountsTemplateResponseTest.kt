/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.GetGLAccountsTemplateResponse
import org.openapitools.client.models.CodeValueData
import org.openapitools.client.models.EnumOptionData
import org.openapitools.client.models.GLAccountData

class GetGLAccountsTemplateResponseTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of GetGLAccountsTemplateResponse
        //val modelInstance = GetGLAccountsTemplateResponse()

        // to test the property `accountTypeOptions`
        should("test accountTypeOptions") {
            // uncomment below to test the property
            //modelInstance.accountTypeOptions shouldBe ("TODO")
        }

        // to test the property `allowedAssetsTagOptions`
        should("test allowedAssetsTagOptions") {
            // uncomment below to test the property
            //modelInstance.allowedAssetsTagOptions shouldBe ("TODO")
        }

        // to test the property `allowedEquityTagOptions`
        should("test allowedEquityTagOptions") {
            // uncomment below to test the property
            //modelInstance.allowedEquityTagOptions shouldBe ("TODO")
        }

        // to test the property `allowedExpensesTagOptions`
        should("test allowedExpensesTagOptions") {
            // uncomment below to test the property
            //modelInstance.allowedExpensesTagOptions shouldBe ("TODO")
        }

        // to test the property `allowedIncomeTagOptions`
        should("test allowedIncomeTagOptions") {
            // uncomment below to test the property
            //modelInstance.allowedIncomeTagOptions shouldBe ("TODO")
        }

        // to test the property `allowedLiabilitiesTagOptions`
        should("test allowedLiabilitiesTagOptions") {
            // uncomment below to test the property
            //modelInstance.allowedLiabilitiesTagOptions shouldBe ("TODO")
        }

        // to test the property `assetHeaderAccountOptions`
        should("test assetHeaderAccountOptions") {
            // uncomment below to test the property
            //modelInstance.assetHeaderAccountOptions shouldBe ("TODO")
        }

        // to test the property `disabled`
        should("test disabled") {
            // uncomment below to test the property
            //modelInstance.disabled shouldBe ("TODO")
        }

        // to test the property `equityHeaderAccountOptions`
        should("test equityHeaderAccountOptions") {
            // uncomment below to test the property
            //modelInstance.equityHeaderAccountOptions shouldBe ("TODO")
        }

        // to test the property `expenseHeaderAccountOptions`
        should("test expenseHeaderAccountOptions") {
            // uncomment below to test the property
            //modelInstance.expenseHeaderAccountOptions shouldBe ("TODO")
        }

        // to test the property `liabilityHeaderAccountOptions`
        should("test liabilityHeaderAccountOptions") {
            // uncomment below to test the property
            //modelInstance.liabilityHeaderAccountOptions shouldBe ("TODO")
        }

        // to test the property `manualEntriesAllowed`
        should("test manualEntriesAllowed") {
            // uncomment below to test the property
            //modelInstance.manualEntriesAllowed shouldBe ("TODO")
        }

        // to test the property `type`
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

        // to test the property `usage`
        should("test usage") {
            // uncomment below to test the property
            //modelInstance.usage shouldBe ("TODO")
        }

        // to test the property `usageOptions`
        should("test usageOptions") {
            // uncomment below to test the property
            //modelInstance.usageOptions shouldBe ("TODO")
        }

    }
}
