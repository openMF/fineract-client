/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.GetLoanProductsProductIdResponse
import org.openapitools.client.models.AdvancedPaymentData
import org.openapitools.client.models.EnumOptionData
import org.openapitools.client.models.GetDelinquencyBucketsResponse
import org.openapitools.client.models.GetLoanAccountingMappings
import org.openapitools.client.models.GetLoanFeeToIncomeAccountMappings
import org.openapitools.client.models.GetLoanPaymentChannelToFundSourceMappings
import org.openapitools.client.models.GetLoanProductsAccountingRule
import org.openapitools.client.models.GetLoanProductsAmortizationType
import org.openapitools.client.models.GetLoanProductsCurrency
import org.openapitools.client.models.GetLoanProductsInterestRateFrequencyType
import org.openapitools.client.models.GetLoanProductsInterestTemplateType
import org.openapitools.client.models.GetLoanProductsPrincipalVariationsForBorrowerCycle
import org.openapitools.client.models.GetLoanProductsRepaymentFrequencyType
import org.openapitools.client.models.GetLoanProductsRepaymentStartDateType
import org.openapitools.client.models.GetLoansProductsInterestCalculationPeriodType

class GetLoanProductsProductIdResponseTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of GetLoanProductsProductIdResponse
        //val modelInstance = GetLoanProductsProductIdResponse()

        // to test the property `accountingMappings`
        should("test accountingMappings") {
            // uncomment below to test the property
            //modelInstance.accountingMappings shouldBe ("TODO")
        }

        // to test the property `accountingRule`
        should("test accountingRule") {
            // uncomment below to test the property
            //modelInstance.accountingRule shouldBe ("TODO")
        }

        // to test the property `amortizationType`
        should("test amortizationType") {
            // uncomment below to test the property
            //modelInstance.amortizationType shouldBe ("TODO")
        }

        // to test the property `annualInterestRate`
        should("test annualInterestRate") {
            // uncomment below to test the property
            //modelInstance.annualInterestRate shouldBe ("TODO")
        }

        // to test the property `charges`
        should("test charges") {
            // uncomment below to test the property
            //modelInstance.charges shouldBe ("TODO")
        }

        // to test the property `currency`
        should("test currency") {
            // uncomment below to test the property
            //modelInstance.currency shouldBe ("TODO")
        }

        // to test the property `delinquencyBucket`
        should("test delinquencyBucket") {
            // uncomment below to test the property
            //modelInstance.delinquencyBucket shouldBe ("TODO")
        }

        // to test the property `disableScheduleExtensionForDownPayment`
        should("test disableScheduleExtensionForDownPayment") {
            // uncomment below to test the property
            //modelInstance.disableScheduleExtensionForDownPayment shouldBe ("TODO")
        }

        // to test the property `disallowExpectedDisbursements`
        should("test disallowExpectedDisbursements") {
            // uncomment below to test the property
            //modelInstance.disallowExpectedDisbursements shouldBe ("TODO")
        }

        // to test the property `disbursedAmountPercentageForDownPayment`
        should("test disbursedAmountPercentageForDownPayment") {
            // uncomment below to test the property
            //modelInstance.disbursedAmountPercentageForDownPayment shouldBe ("TODO")
        }

        // to test the property `dueDaysForRepaymentEvent`
        should("test dueDaysForRepaymentEvent") {
            // uncomment below to test the property
            //modelInstance.dueDaysForRepaymentEvent shouldBe ("TODO")
        }

        // to test the property `enableAutoRepaymentForDownPayment`
        should("test enableAutoRepaymentForDownPayment") {
            // uncomment below to test the property
            //modelInstance.enableAutoRepaymentForDownPayment shouldBe ("TODO")
        }

        // to test the property `enableDownPayment`
        should("test enableDownPayment") {
            // uncomment below to test the property
            //modelInstance.enableDownPayment shouldBe ("TODO")
        }

        // to test the property `enableInstallmentLevelDelinquency`
        should("test enableInstallmentLevelDelinquency") {
            // uncomment below to test the property
            //modelInstance.enableInstallmentLevelDelinquency shouldBe ("TODO")
        }

        // to test the property `feeToIncomeAccountMappings`
        should("test feeToIncomeAccountMappings") {
            // uncomment below to test the property
            //modelInstance.feeToIncomeAccountMappings shouldBe ("TODO")
        }

        // to test the property `fixedPrincipalPercentagePerInstallment`
        should("test fixedPrincipalPercentagePerInstallment") {
            // uncomment below to test the property
            //modelInstance.fixedPrincipalPercentagePerInstallment shouldBe ("TODO")
        }

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `inArrearsTolerance`
        should("test inArrearsTolerance") {
            // uncomment below to test the property
            //modelInstance.inArrearsTolerance shouldBe ("TODO")
        }

        // to test the property `includeInBorrowerCycle`
        should("test includeInBorrowerCycle") {
            // uncomment below to test the property
            //modelInstance.includeInBorrowerCycle shouldBe ("TODO")
        }

        // to test the property `interestCalculationPeriodType`
        should("test interestCalculationPeriodType") {
            // uncomment below to test the property
            //modelInstance.interestCalculationPeriodType shouldBe ("TODO")
        }

        // to test the property `interestRateFrequencyType`
        should("test interestRateFrequencyType") {
            // uncomment below to test the property
            //modelInstance.interestRateFrequencyType shouldBe ("TODO")
        }

        // to test the property `interestRatePerPeriod`
        should("test interestRatePerPeriod") {
            // uncomment below to test the property
            //modelInstance.interestRatePerPeriod shouldBe ("TODO")
        }

        // to test the property `interestRateVariationsForBorrowerCycle`
        should("test interestRateVariationsForBorrowerCycle") {
            // uncomment below to test the property
            //modelInstance.interestRateVariationsForBorrowerCycle shouldBe ("TODO")
        }

        // to test the property `interestType`
        should("test interestType") {
            // uncomment below to test the property
            //modelInstance.interestType shouldBe ("TODO")
        }

        // to test the property `loanScheduleProcessingType`
        should("test loanScheduleProcessingType") {
            // uncomment below to test the property
            //modelInstance.loanScheduleProcessingType shouldBe ("TODO")
        }

        // to test the property `loanScheduleType`
        should("test loanScheduleType") {
            // uncomment below to test the property
            //modelInstance.loanScheduleType shouldBe ("TODO")
        }

        // to test the property `maxPrincipal`
        should("test maxPrincipal") {
            // uncomment below to test the property
            //modelInstance.maxPrincipal shouldBe ("TODO")
        }

        // to test the property `maxTrancheCount`
        should("test maxTrancheCount") {
            // uncomment below to test the property
            //modelInstance.maxTrancheCount shouldBe ("TODO")
        }

        // to test the property `minPrincipal`
        should("test minPrincipal") {
            // uncomment below to test the property
            //modelInstance.minPrincipal shouldBe ("TODO")
        }

        // to test the property `multiDisburseLoan`
        should("test multiDisburseLoan") {
            // uncomment below to test the property
            //modelInstance.multiDisburseLoan shouldBe ("TODO")
        }

        // to test the property `name`
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `numberOfRepaymentVariationsForBorrowerCycle`
        should("test numberOfRepaymentVariationsForBorrowerCycle") {
            // uncomment below to test the property
            //modelInstance.numberOfRepaymentVariationsForBorrowerCycle shouldBe ("TODO")
        }

        // to test the property `numberOfRepayments`
        should("test numberOfRepayments") {
            // uncomment below to test the property
            //modelInstance.numberOfRepayments shouldBe ("TODO")
        }

        // to test the property `outstandingLoanBalance`
        should("test outstandingLoanBalance") {
            // uncomment below to test the property
            //modelInstance.outstandingLoanBalance shouldBe ("TODO")
        }

        // to test the property `overDueDaysForRepaymentEvent`
        should("test overDueDaysForRepaymentEvent") {
            // uncomment below to test the property
            //modelInstance.overDueDaysForRepaymentEvent shouldBe ("TODO")
        }

        // to test the property `overdueDaysForNPA`
        should("test overdueDaysForNPA") {
            // uncomment below to test the property
            //modelInstance.overdueDaysForNPA shouldBe ("TODO")
        }

        // to test the property `paymentAllocation`
        should("test paymentAllocation") {
            // uncomment below to test the property
            //modelInstance.paymentAllocation shouldBe ("TODO")
        }

        // to test the property `paymentChannelToFundSourceMappings`
        should("test paymentChannelToFundSourceMappings") {
            // uncomment below to test the property
            //modelInstance.paymentChannelToFundSourceMappings shouldBe ("TODO")
        }

        // to test the property `principal`
        should("test principal") {
            // uncomment below to test the property
            //modelInstance.principal shouldBe ("TODO")
        }

        // to test the property `principalThresholdForLastInstalment`
        should("test principalThresholdForLastInstalment") {
            // uncomment below to test the property
            //modelInstance.principalThresholdForLastInstalment shouldBe ("TODO")
        }

        // to test the property `productsPrincipalVariationsForBorrowerCycle`
        should("test productsPrincipalVariationsForBorrowerCycle") {
            // uncomment below to test the property
            //modelInstance.productsPrincipalVariationsForBorrowerCycle shouldBe ("TODO")
        }

        // to test the property `repaymentEvery`
        should("test repaymentEvery") {
            // uncomment below to test the property
            //modelInstance.repaymentEvery shouldBe ("TODO")
        }

        // to test the property `repaymentFrequencyType`
        should("test repaymentFrequencyType") {
            // uncomment below to test the property
            //modelInstance.repaymentFrequencyType shouldBe ("TODO")
        }

        // to test the property `repaymentStartDateType`
        should("test repaymentStartDateType") {
            // uncomment below to test the property
            //modelInstance.repaymentStartDateType shouldBe ("TODO")
        }

        // to test the property `shortName`
        should("test shortName") {
            // uncomment below to test the property
            //modelInstance.shortName shouldBe ("TODO")
        }

        // to test the property `status`
        should("test status") {
            // uncomment below to test the property
            //modelInstance.status shouldBe ("TODO")
        }

        // to test the property `transactionProcessingStrategyCode`
        should("test transactionProcessingStrategyCode") {
            // uncomment below to test the property
            //modelInstance.transactionProcessingStrategyCode shouldBe ("TODO")
        }

        // to test the property `transactionProcessingStrategyName`
        should("test transactionProcessingStrategyName") {
            // uncomment below to test the property
            //modelInstance.transactionProcessingStrategyName shouldBe ("TODO")
        }

        // to test the property `useBorrowerCycle`
        should("test useBorrowerCycle") {
            // uncomment below to test the property
            //modelInstance.useBorrowerCycle shouldBe ("TODO")
        }

    }
}
