/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.GetLoanProductsTemplateResponse
import org.openapitools.client.models.EnumOptionData
import org.openapitools.client.models.GetLoanProductsAccountingMappingOptions
import org.openapitools.client.models.GetLoanProductsAccountingRule
import org.openapitools.client.models.GetLoanProductsAmortizationType
import org.openapitools.client.models.GetLoanProductsChargeOptions
import org.openapitools.client.models.GetLoanProductsCurrencyOptions
import org.openapitools.client.models.GetLoanProductsDaysInYearTemplateType
import org.openapitools.client.models.GetLoanProductsInterestRateTemplateFrequencyType
import org.openapitools.client.models.GetLoanProductsInterestRecalculationCompoundingFrequencyType
import org.openapitools.client.models.GetLoanProductsInterestRecalculationCompoundingType
import org.openapitools.client.models.GetLoanProductsInterestRecalculationTemplateData
import org.openapitools.client.models.GetLoanProductsInterestTemplateType
import org.openapitools.client.models.GetLoanProductsPaymentTypeOptions
import org.openapitools.client.models.GetLoanProductsPreClosureInterestCalculationStrategy
import org.openapitools.client.models.GetLoanProductsRepaymentStartDateType
import org.openapitools.client.models.GetLoanProductsRepaymentTemplateFrequencyType
import org.openapitools.client.models.GetLoanProductsRescheduleStrategyType
import org.openapitools.client.models.GetLoanProductsTemplateCurrency
import org.openapitools.client.models.GetLoanProductsTransactionProcessingStrategyOptions
import org.openapitools.client.models.GetLoanProductsValueConditionTypeOptions
import org.openapitools.client.models.GetLoansProductsDaysInMonthTemplateType
import org.openapitools.client.models.GetLoansProductsInterestCalculationPeriodType

class GetLoanProductsTemplateResponseTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of GetLoanProductsTemplateResponse
        //val modelInstance = GetLoanProductsTemplateResponse()

        // to test the property `accountingMappingOptions`
        should("test accountingMappingOptions") {
            // uncomment below to test the property
            //modelInstance.accountingMappingOptions shouldBe ("TODO")
        }

        // to test the property `accountingRule`
        should("test accountingRule") {
            // uncomment below to test the property
            //modelInstance.accountingRule shouldBe ("TODO")
        }

        // to test the property `accountingRuleOptions`
        should("test accountingRuleOptions") {
            // uncomment below to test the property
            //modelInstance.accountingRuleOptions shouldBe ("TODO")
        }

        // to test the property `advancedPaymentAllocationFutureInstallmentAllocationRules`
        should("test advancedPaymentAllocationFutureInstallmentAllocationRules") {
            // uncomment below to test the property
            //modelInstance.advancedPaymentAllocationFutureInstallmentAllocationRules shouldBe ("TODO")
        }

        // to test the property `advancedPaymentAllocationTransactionTypes`
        should("test advancedPaymentAllocationTransactionTypes") {
            // uncomment below to test the property
            //modelInstance.advancedPaymentAllocationTransactionTypes shouldBe ("TODO")
        }

        // to test the property `advancedPaymentAllocationTypes`
        should("test advancedPaymentAllocationTypes") {
            // uncomment below to test the property
            //modelInstance.advancedPaymentAllocationTypes shouldBe ("TODO")
        }

        // to test the property `amortizationType`
        should("test amortizationType") {
            // uncomment below to test the property
            //modelInstance.amortizationType shouldBe ("TODO")
        }

        // to test the property `amortizationTypeOptions`
        should("test amortizationTypeOptions") {
            // uncomment below to test the property
            //modelInstance.amortizationTypeOptions shouldBe ("TODO")
        }

        // to test the property `chargeOptions`
        should("test chargeOptions") {
            // uncomment below to test the property
            //modelInstance.chargeOptions shouldBe ("TODO")
        }

        // to test the property `currency`
        should("test currency") {
            // uncomment below to test the property
            //modelInstance.currency shouldBe ("TODO")
        }

        // to test the property `currencyOptions`
        should("test currencyOptions") {
            // uncomment below to test the property
            //modelInstance.currencyOptions shouldBe ("TODO")
        }

        // to test the property `daysInMonthType`
        should("test daysInMonthType") {
            // uncomment below to test the property
            //modelInstance.daysInMonthType shouldBe ("TODO")
        }

        // to test the property `daysInMonthTypeOptions`
        should("test daysInMonthTypeOptions") {
            // uncomment below to test the property
            //modelInstance.daysInMonthTypeOptions shouldBe ("TODO")
        }

        // to test the property `daysInYearType`
        should("test daysInYearType") {
            // uncomment below to test the property
            //modelInstance.daysInYearType shouldBe ("TODO")
        }

        // to test the property `daysInYearTypeOptions`
        should("test daysInYearTypeOptions") {
            // uncomment below to test the property
            //modelInstance.daysInYearTypeOptions shouldBe ("TODO")
        }

        // to test the property `includeInBorrowerCycle`
        should("test includeInBorrowerCycle") {
            // uncomment below to test the property
            //modelInstance.includeInBorrowerCycle shouldBe ("TODO")
        }

        // to test the property `interestCalculationPeriodType`
        should("test interestCalculationPeriodType") {
            // uncomment below to test the property
            //modelInstance.interestCalculationPeriodType shouldBe ("TODO")
        }

        // to test the property `interestCalculationPeriodTypeOptions`
        should("test interestCalculationPeriodTypeOptions") {
            // uncomment below to test the property
            //modelInstance.interestCalculationPeriodTypeOptions shouldBe ("TODO")
        }

        // to test the property `interestRateFrequencyType`
        should("test interestRateFrequencyType") {
            // uncomment below to test the property
            //modelInstance.interestRateFrequencyType shouldBe ("TODO")
        }

        // to test the property `interestRateFrequencyTypeOptions`
        should("test interestRateFrequencyTypeOptions") {
            // uncomment below to test the property
            //modelInstance.interestRateFrequencyTypeOptions shouldBe ("TODO")
        }

        // to test the property `interestRateVariationsForBorrowerCycle`
        should("test interestRateVariationsForBorrowerCycle") {
            // uncomment below to test the property
            //modelInstance.interestRateVariationsForBorrowerCycle shouldBe ("TODO")
        }

        // to test the property `interestRecalculationCompoundingTypeOptions`
        should("test interestRecalculationCompoundingTypeOptions") {
            // uncomment below to test the property
            //modelInstance.interestRecalculationCompoundingTypeOptions shouldBe ("TODO")
        }

        // to test the property `interestRecalculationData`
        should("test interestRecalculationData") {
            // uncomment below to test the property
            //modelInstance.interestRecalculationData shouldBe ("TODO")
        }

        // to test the property `interestRecalculationFrequencyTypeOptions`
        should("test interestRecalculationFrequencyTypeOptions") {
            // uncomment below to test the property
            //modelInstance.interestRecalculationFrequencyTypeOptions shouldBe ("TODO")
        }

        // to test the property `interestType`
        should("test interestType") {
            // uncomment below to test the property
            //modelInstance.interestType shouldBe ("TODO")
        }

        // to test the property `interestTypeOptions`
        should("test interestTypeOptions") {
            // uncomment below to test the property
            //modelInstance.interestTypeOptions shouldBe ("TODO")
        }

        // to test the property `isInterestRecalculationEnabled`
        should("test isInterestRecalculationEnabled") {
            // uncomment below to test the property
            //modelInstance.isInterestRecalculationEnabled shouldBe ("TODO")
        }

        // to test the property `loanScheduleProcessingTypeOptions`
        should("test loanScheduleProcessingTypeOptions") {
            // uncomment below to test the property
            //modelInstance.loanScheduleProcessingTypeOptions shouldBe ("TODO")
        }

        // to test the property `loanScheduleTypeOptions`
        should("test loanScheduleTypeOptions") {
            // uncomment below to test the property
            //modelInstance.loanScheduleTypeOptions shouldBe ("TODO")
        }

        // to test the property `numberOfRepaymentVariationsForBorrowerCycle`
        should("test numberOfRepaymentVariationsForBorrowerCycle") {
            // uncomment below to test the property
            //modelInstance.numberOfRepaymentVariationsForBorrowerCycle shouldBe ("TODO")
        }

        // to test the property `paymentTypeOptions`
        should("test paymentTypeOptions") {
            // uncomment below to test the property
            //modelInstance.paymentTypeOptions shouldBe ("TODO")
        }

        // to test the property `preClosureInterestCalculationStrategyOptions`
        should("test preClosureInterestCalculationStrategyOptions") {
            // uncomment below to test the property
            //modelInstance.preClosureInterestCalculationStrategyOptions shouldBe ("TODO")
        }

        // to test the property `principalVariationsForBorrowerCycle`
        should("test principalVariationsForBorrowerCycle") {
            // uncomment below to test the property
            //modelInstance.principalVariationsForBorrowerCycle shouldBe ("TODO")
        }

        // to test the property `repaymentFrequencyType`
        should("test repaymentFrequencyType") {
            // uncomment below to test the property
            //modelInstance.repaymentFrequencyType shouldBe ("TODO")
        }

        // to test the property `repaymentFrequencyTypeOptions`
        should("test repaymentFrequencyTypeOptions") {
            // uncomment below to test the property
            //modelInstance.repaymentFrequencyTypeOptions shouldBe ("TODO")
        }

        // to test the property `repaymentStartDateTypeOptions`
        should("test repaymentStartDateTypeOptions") {
            // uncomment below to test the property
            //modelInstance.repaymentStartDateTypeOptions shouldBe ("TODO")
        }

        // to test the property `rescheduleStrategyTypeOptions`
        should("test rescheduleStrategyTypeOptions") {
            // uncomment below to test the property
            //modelInstance.rescheduleStrategyTypeOptions shouldBe ("TODO")
        }

        // to test the property `transactionProcessingStrategyOptions`
        should("test transactionProcessingStrategyOptions") {
            // uncomment below to test the property
            //modelInstance.transactionProcessingStrategyOptions shouldBe ("TODO")
        }

        // to test the property `useBorrowerCycle`
        should("test useBorrowerCycle") {
            // uncomment below to test the property
            //modelInstance.useBorrowerCycle shouldBe ("TODO")
        }

        // to test the property `valueConditionTypeOptions`
        should("test valueConditionTypeOptions") {
            // uncomment below to test the property
            //modelInstance.valueConditionTypeOptions shouldBe ("TODO")
        }

    }
}
