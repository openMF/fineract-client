/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.GetLoansLoanIdSummary
import org.openapitools.client.models.GetLoansLoanIdCurrency
import org.openapitools.client.models.GetLoansLoanIdDisbursementDetails
import org.openapitools.client.models.GetLoansLoanIdLinkedAccount
import org.openapitools.client.models.GetLoansLoanIdOverdueCharges

class GetLoansLoanIdSummaryTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of GetLoansLoanIdSummary
        //val modelInstance = GetLoansLoanIdSummary()

        // to test the property `canDisburse`
        should("test canDisburse") {
            // uncomment below to test the property
            //modelInstance.canDisburse shouldBe ("TODO")
        }

        // to test the property `chargeOffReason`
        should("test chargeOffReason") {
            // uncomment below to test the property
            //modelInstance.chargeOffReason shouldBe ("TODO")
        }

        // to test the property `chargeOffReasonId`
        should("test chargeOffReasonId") {
            // uncomment below to test the property
            //modelInstance.chargeOffReasonId shouldBe ("TODO")
        }

        // to test the property `currency`
        should("test currency") {
            // uncomment below to test the property
            //modelInstance.currency shouldBe ("TODO")
        }

        // to test the property `disbursementDetails`
        should("test disbursementDetails") {
            // uncomment below to test the property
            //modelInstance.disbursementDetails shouldBe ("TODO")
        }

        // to test the property `emiAmountVariations`
        should("test emiAmountVariations") {
            // uncomment below to test the property
            //modelInstance.emiAmountVariations shouldBe ("TODO")
        }

        // to test the property `feeChargesCharged`
        should("test feeChargesCharged") {
            // uncomment below to test the property
            //modelInstance.feeChargesCharged shouldBe ("TODO")
        }

        // to test the property `feeChargesDueAtDisbursementCharged`
        should("test feeChargesDueAtDisbursementCharged") {
            // uncomment below to test the property
            //modelInstance.feeChargesDueAtDisbursementCharged shouldBe ("TODO")
        }

        // to test the property `feeChargesOutstanding`
        should("test feeChargesOutstanding") {
            // uncomment below to test the property
            //modelInstance.feeChargesOutstanding shouldBe ("TODO")
        }

        // to test the property `feeChargesOverdue`
        should("test feeChargesOverdue") {
            // uncomment below to test the property
            //modelInstance.feeChargesOverdue shouldBe ("TODO")
        }

        // to test the property `feeChargesPaid`
        should("test feeChargesPaid") {
            // uncomment below to test the property
            //modelInstance.feeChargesPaid shouldBe ("TODO")
        }

        // to test the property `feeChargesWaived`
        should("test feeChargesWaived") {
            // uncomment below to test the property
            //modelInstance.feeChargesWaived shouldBe ("TODO")
        }

        // to test the property `feeChargesWrittenOff`
        should("test feeChargesWrittenOff") {
            // uncomment below to test the property
            //modelInstance.feeChargesWrittenOff shouldBe ("TODO")
        }

        // to test the property `fixedEmiAmount`
        should("test fixedEmiAmount") {
            // uncomment below to test the property
            //modelInstance.fixedEmiAmount shouldBe ("TODO")
        }

        // to test the property `inArrears`
        should("test inArrears") {
            // uncomment below to test the property
            //modelInstance.inArrears shouldBe ("TODO")
        }

        // to test the property `interestCharged`
        should("test interestCharged") {
            // uncomment below to test the property
            //modelInstance.interestCharged shouldBe ("TODO")
        }

        // to test the property `interestOutstanding`
        should("test interestOutstanding") {
            // uncomment below to test the property
            //modelInstance.interestOutstanding shouldBe ("TODO")
        }

        // to test the property `interestOverdue`
        should("test interestOverdue") {
            // uncomment below to test the property
            //modelInstance.interestOverdue shouldBe ("TODO")
        }

        // to test the property `interestPaid`
        should("test interestPaid") {
            // uncomment below to test the property
            //modelInstance.interestPaid shouldBe ("TODO")
        }

        // to test the property `interestWaived`
        should("test interestWaived") {
            // uncomment below to test the property
            //modelInstance.interestWaived shouldBe ("TODO")
        }

        // to test the property `interestWrittenOff`
        should("test interestWrittenOff") {
            // uncomment below to test the property
            //modelInstance.interestWrittenOff shouldBe ("TODO")
        }

        // to test the property `isNPA`
        should("test isNPA") {
            // uncomment below to test the property
            //modelInstance.isNPA shouldBe ("TODO")
        }

        // to test the property `linkedAccount`
        should("test linkedAccount") {
            // uncomment below to test the property
            //modelInstance.linkedAccount shouldBe ("TODO")
        }

        // to test the property `maxOutstandingLoanBalance`
        should("test maxOutstandingLoanBalance") {
            // uncomment below to test the property
            //modelInstance.maxOutstandingLoanBalance shouldBe ("TODO")
        }

        // to test the property `overdueCharges`
        should("test overdueCharges") {
            // uncomment below to test the property
            //modelInstance.overdueCharges shouldBe ("TODO")
        }

        // to test the property `overdueSinceDate`
        should("test overdueSinceDate") {
            // uncomment below to test the property
            //modelInstance.overdueSinceDate shouldBe ("TODO")
        }

        // to test the property `penaltyChargesCharged`
        should("test penaltyChargesCharged") {
            // uncomment below to test the property
            //modelInstance.penaltyChargesCharged shouldBe ("TODO")
        }

        // to test the property `penaltyChargesOutstanding`
        should("test penaltyChargesOutstanding") {
            // uncomment below to test the property
            //modelInstance.penaltyChargesOutstanding shouldBe ("TODO")
        }

        // to test the property `penaltyChargesOverdue`
        should("test penaltyChargesOverdue") {
            // uncomment below to test the property
            //modelInstance.penaltyChargesOverdue shouldBe ("TODO")
        }

        // to test the property `penaltyChargesPaid`
        should("test penaltyChargesPaid") {
            // uncomment below to test the property
            //modelInstance.penaltyChargesPaid shouldBe ("TODO")
        }

        // to test the property `penaltyChargesWaived`
        should("test penaltyChargesWaived") {
            // uncomment below to test the property
            //modelInstance.penaltyChargesWaived shouldBe ("TODO")
        }

        // to test the property `penaltyChargesWrittenOff`
        should("test penaltyChargesWrittenOff") {
            // uncomment below to test the property
            //modelInstance.penaltyChargesWrittenOff shouldBe ("TODO")
        }

        // to test the property `principalAdjustments`
        should("test principalAdjustments") {
            // uncomment below to test the property
            //modelInstance.principalAdjustments shouldBe ("TODO")
        }

        // to test the property `principalDisbursed`
        should("test principalDisbursed") {
            // uncomment below to test the property
            //modelInstance.principalDisbursed shouldBe ("TODO")
        }

        // to test the property `principalOutstanding`
        should("test principalOutstanding") {
            // uncomment below to test the property
            //modelInstance.principalOutstanding shouldBe ("TODO")
        }

        // to test the property `principalOverdue`
        should("test principalOverdue") {
            // uncomment below to test the property
            //modelInstance.principalOverdue shouldBe ("TODO")
        }

        // to test the property `principalPaid`
        should("test principalPaid") {
            // uncomment below to test the property
            //modelInstance.principalPaid shouldBe ("TODO")
        }

        // to test the property `principalWrittenOff`
        should("test principalWrittenOff") {
            // uncomment below to test the property
            //modelInstance.principalWrittenOff shouldBe ("TODO")
        }

        // to test the property `totalChargeAdjustment`
        should("test totalChargeAdjustment") {
            // uncomment below to test the property
            //modelInstance.totalChargeAdjustment shouldBe ("TODO")
        }

        // to test the property `totalChargeAdjustmentReversed`
        should("test totalChargeAdjustmentReversed") {
            // uncomment below to test the property
            //modelInstance.totalChargeAdjustmentReversed shouldBe ("TODO")
        }

        // to test the property `totalChargeback`
        should("test totalChargeback") {
            // uncomment below to test the property
            //modelInstance.totalChargeback shouldBe ("TODO")
        }

        // to test the property `totalCostOfLoan`
        should("test totalCostOfLoan") {
            // uncomment below to test the property
            //modelInstance.totalCostOfLoan shouldBe ("TODO")
        }

        // to test the property `totalCreditBalanceRefund`
        should("test totalCreditBalanceRefund") {
            // uncomment below to test the property
            //modelInstance.totalCreditBalanceRefund shouldBe ("TODO")
        }

        // to test the property `totalCreditBalanceRefundReversed`
        should("test totalCreditBalanceRefundReversed") {
            // uncomment below to test the property
            //modelInstance.totalCreditBalanceRefundReversed shouldBe ("TODO")
        }

        // to test the property `totalExpectedCostOfLoan`
        should("test totalExpectedCostOfLoan") {
            // uncomment below to test the property
            //modelInstance.totalExpectedCostOfLoan shouldBe ("TODO")
        }

        // to test the property `totalExpectedRepayment`
        should("test totalExpectedRepayment") {
            // uncomment below to test the property
            //modelInstance.totalExpectedRepayment shouldBe ("TODO")
        }

        // to test the property `totalGoodwillCredit`
        should("test totalGoodwillCredit") {
            // uncomment below to test the property
            //modelInstance.totalGoodwillCredit shouldBe ("TODO")
        }

        // to test the property `totalGoodwillCreditReversed`
        should("test totalGoodwillCreditReversed") {
            // uncomment below to test the property
            //modelInstance.totalGoodwillCreditReversed shouldBe ("TODO")
        }

        // to test the property `totalMerchantRefund`
        should("test totalMerchantRefund") {
            // uncomment below to test the property
            //modelInstance.totalMerchantRefund shouldBe ("TODO")
        }

        // to test the property `totalMerchantRefundReversed`
        should("test totalMerchantRefundReversed") {
            // uncomment below to test the property
            //modelInstance.totalMerchantRefundReversed shouldBe ("TODO")
        }

        // to test the property `totalOutstanding`
        should("test totalOutstanding") {
            // uncomment below to test the property
            //modelInstance.totalOutstanding shouldBe ("TODO")
        }

        // to test the property `totalOverdue`
        should("test totalOverdue") {
            // uncomment below to test the property
            //modelInstance.totalOverdue shouldBe ("TODO")
        }

        // to test the property `totalPayoutRefund`
        should("test totalPayoutRefund") {
            // uncomment below to test the property
            //modelInstance.totalPayoutRefund shouldBe ("TODO")
        }

        // to test the property `totalPayoutRefundReversed`
        should("test totalPayoutRefundReversed") {
            // uncomment below to test the property
            //modelInstance.totalPayoutRefundReversed shouldBe ("TODO")
        }

        // to test the property `totalRecovered`
        should("test totalRecovered") {
            // uncomment below to test the property
            //modelInstance.totalRecovered shouldBe ("TODO")
        }

        // to test the property `totalRepayment`
        should("test totalRepayment") {
            // uncomment below to test the property
            //modelInstance.totalRepayment shouldBe ("TODO")
        }

        // to test the property `totalRepaymentTransaction`
        should("test totalRepaymentTransaction") {
            // uncomment below to test the property
            //modelInstance.totalRepaymentTransaction shouldBe ("TODO")
        }

        // to test the property `totalRepaymentTransactionReversed`
        should("test totalRepaymentTransactionReversed") {
            // uncomment below to test the property
            //modelInstance.totalRepaymentTransactionReversed shouldBe ("TODO")
        }

        // to test the property `totalWaived`
        should("test totalWaived") {
            // uncomment below to test the property
            //modelInstance.totalWaived shouldBe ("TODO")
        }

        // to test the property `totalWrittenOff`
        should("test totalWrittenOff") {
            // uncomment below to test the property
            //modelInstance.totalWrittenOff shouldBe ("TODO")
        }

        // to test the property `writeoffReason`
        should("test writeoffReason") {
            // uncomment below to test the property
            //modelInstance.writeoffReason shouldBe ("TODO")
        }

        // to test the property `writeoffReasonId`
        should("test writeoffReasonId") {
            // uncomment below to test the property
            //modelInstance.writeoffReasonId shouldBe ("TODO")
        }

    }
}
