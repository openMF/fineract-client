/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.GetPaymentTypesPaymentTypeIdResponse

class GetPaymentTypesPaymentTypeIdResponseTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of GetPaymentTypesPaymentTypeIdResponse
        //val modelInstance = GetPaymentTypesPaymentTypeIdResponse()

        // to test the property `codeName`
        should("test codeName") {
            // uncomment below to test the property
            //modelInstance.codeName shouldBe ("TODO")
        }

        // to test the property `description`
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `isCashPayment`
        should("test isCashPayment") {
            // uncomment below to test the property
            //modelInstance.isCashPayment shouldBe ("TODO")
        }

        // to test the property `isSystemDefined`
        should("test isSystemDefined") {
            // uncomment below to test the property
            //modelInstance.isSystemDefined shouldBe ("TODO")
        }

        // to test the property `name`
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `position`
        should("test position") {
            // uncomment below to test the property
            //modelInstance.position shouldBe ("TODO")
        }

    }
}
