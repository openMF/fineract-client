/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.GetReportMailingJobsResponse
import org.openapitools.client.models.EnumOptionData
import org.openapitools.client.models.ReportMailingJobTimelineData

class GetReportMailingJobsResponseTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of GetReportMailingJobsResponse
        //val modelInstance = GetReportMailingJobsResponse()

        // to test the property `description`
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `emailAttachmentFileFormat`
        should("test emailAttachmentFileFormat") {
            // uncomment below to test the property
            //modelInstance.emailAttachmentFileFormat shouldBe ("TODO")
        }

        // to test the property `emailMessage`
        should("test emailMessage") {
            // uncomment below to test the property
            //modelInstance.emailMessage shouldBe ("TODO")
        }

        // to test the property `emailRecipients`
        should("test emailRecipients") {
            // uncomment below to test the property
            //modelInstance.emailRecipients shouldBe ("TODO")
        }

        // to test the property `emailSubject`
        should("test emailSubject") {
            // uncomment below to test the property
            //modelInstance.emailSubject shouldBe ("TODO")
        }

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `isActive`
        should("test isActive") {
            // uncomment below to test the property
            //modelInstance.isActive shouldBe ("TODO")
        }

        // to test the property `name`
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `nextRunDateTime`
        should("test nextRunDateTime") {
            // uncomment below to test the property
            //modelInstance.nextRunDateTime shouldBe ("TODO")
        }

        // to test the property `numberOfRuns`
        should("test numberOfRuns") {
            // uncomment below to test the property
            //modelInstance.numberOfRuns shouldBe ("TODO")
        }

        // to test the property `recurrence`
        should("test recurrence") {
            // uncomment below to test the property
            //modelInstance.recurrence shouldBe ("TODO")
        }

        // to test the property `runAsUserId`
        should("test runAsUserId") {
            // uncomment below to test the property
            //modelInstance.runAsUserId shouldBe ("TODO")
        }

        // to test the property `startDateTime`
        should("test startDateTime") {
            // uncomment below to test the property
            //modelInstance.startDateTime shouldBe ("TODO")
        }

        // to test the property `stretchyReport`
        should("test stretchyReport") {
            // uncomment below to test the property
            //modelInstance.stretchyReport shouldBe ("TODO")
        }

        // to test the property `stretchyReportParamMap`
        should("test stretchyReportParamMap") {
            // uncomment below to test the property
            //modelInstance.stretchyReportParamMap shouldBe ("TODO")
        }

        // to test the property `timeline`
        should("test timeline") {
            // uncomment below to test the property
            //modelInstance.timeline shouldBe ("TODO")
        }

    }
}
