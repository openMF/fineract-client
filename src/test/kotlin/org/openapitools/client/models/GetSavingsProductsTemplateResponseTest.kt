/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.GetSavingsProductsTemplateResponse
import org.openapitools.client.models.GetSavingsCurrency
import org.openapitools.client.models.GetSavingsProductsAccountingMappingOptions
import org.openapitools.client.models.GetSavingsProductsChargeOptions
import org.openapitools.client.models.GetSavingsProductsInterestCalculationDaysInYearType
import org.openapitools.client.models.GetSavingsProductsInterestCalculationType
import org.openapitools.client.models.GetSavingsProductsInterestCompoundingPeriodType
import org.openapitools.client.models.GetSavingsProductsInterestPostingPeriodType
import org.openapitools.client.models.GetSavingsProductsLockinPeriodFrequencyTypeOptions
import org.openapitools.client.models.GetSavingsProductsPaymentTypeOptions
import org.openapitools.client.models.GetSavingsProductsTemplateAccountingRule
import org.openapitools.client.models.GetSavingsProductsWithdrawalFeeTypeOptions

class GetSavingsProductsTemplateResponseTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of GetSavingsProductsTemplateResponse
        //val modelInstance = GetSavingsProductsTemplateResponse()

        // to test the property `accountMapping`
        should("test accountMapping") {
            // uncomment below to test the property
            //modelInstance.accountMapping shouldBe ("TODO")
        }

        // to test the property `accountingMappingOptions`
        should("test accountingMappingOptions") {
            // uncomment below to test the property
            //modelInstance.accountingMappingOptions shouldBe ("TODO")
        }

        // to test the property `accountingRule`
        should("test accountingRule") {
            // uncomment below to test the property
            //modelInstance.accountingRule shouldBe ("TODO")
        }

        // to test the property `accountingRuleOptions`
        should("test accountingRuleOptions") {
            // uncomment below to test the property
            //modelInstance.accountingRuleOptions shouldBe ("TODO")
        }

        // to test the property `chargeOptions`
        should("test chargeOptions") {
            // uncomment below to test the property
            //modelInstance.chargeOptions shouldBe ("TODO")
        }

        // to test the property `currency`
        should("test currency") {
            // uncomment below to test the property
            //modelInstance.currency shouldBe ("TODO")
        }

        // to test the property `currencyOptions`
        should("test currencyOptions") {
            // uncomment below to test the property
            //modelInstance.currencyOptions shouldBe ("TODO")
        }

        // to test the property `interestCalculationDaysInYearType`
        should("test interestCalculationDaysInYearType") {
            // uncomment below to test the property
            //modelInstance.interestCalculationDaysInYearType shouldBe ("TODO")
        }

        // to test the property `interestCalculationDaysInYearTypeOptions`
        should("test interestCalculationDaysInYearTypeOptions") {
            // uncomment below to test the property
            //modelInstance.interestCalculationDaysInYearTypeOptions shouldBe ("TODO")
        }

        // to test the property `interestCalculationType`
        should("test interestCalculationType") {
            // uncomment below to test the property
            //modelInstance.interestCalculationType shouldBe ("TODO")
        }

        // to test the property `interestCalculationTypeOptions`
        should("test interestCalculationTypeOptions") {
            // uncomment below to test the property
            //modelInstance.interestCalculationTypeOptions shouldBe ("TODO")
        }

        // to test the property `interestCompoundingPeriodType`
        should("test interestCompoundingPeriodType") {
            // uncomment below to test the property
            //modelInstance.interestCompoundingPeriodType shouldBe ("TODO")
        }

        // to test the property `interestCompoundingPeriodTypeOptions`
        should("test interestCompoundingPeriodTypeOptions") {
            // uncomment below to test the property
            //modelInstance.interestCompoundingPeriodTypeOptions shouldBe ("TODO")
        }

        // to test the property `interestPostingPeriodType`
        should("test interestPostingPeriodType") {
            // uncomment below to test the property
            //modelInstance.interestPostingPeriodType shouldBe ("TODO")
        }

        // to test the property `interestPostingPeriodTypeOptions`
        should("test interestPostingPeriodTypeOptions") {
            // uncomment below to test the property
            //modelInstance.interestPostingPeriodTypeOptions shouldBe ("TODO")
        }

        // to test the property `lockinPeriodFrequencyTypeOptions`
        should("test lockinPeriodFrequencyTypeOptions") {
            // uncomment below to test the property
            //modelInstance.lockinPeriodFrequencyTypeOptions shouldBe ("TODO")
        }

        // to test the property `paymentTypeOptions`
        should("test paymentTypeOptions") {
            // uncomment below to test the property
            //modelInstance.paymentTypeOptions shouldBe ("TODO")
        }

        // to test the property `withdrawalFeeTypeOptions`
        should("test withdrawalFeeTypeOptions") {
            // uncomment below to test the property
            //modelInstance.withdrawalFeeTypeOptions shouldBe ("TODO")
        }

    }
}
