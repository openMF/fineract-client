/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.LoanProductBorrowerCycleVariationData
import org.openapitools.client.models.EnumOptionData

class LoanProductBorrowerCycleVariationDataTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of LoanProductBorrowerCycleVariationData
        //val modelInstance = LoanProductBorrowerCycleVariationData()

        // to test the property `borrowerCycleNumber`
        should("test borrowerCycleNumber") {
            // uncomment below to test the property
            //modelInstance.borrowerCycleNumber shouldBe ("TODO")
        }

        // to test the property `defaultValue`
        should("test defaultValue") {
            // uncomment below to test the property
            //modelInstance.defaultValue shouldBe ("TODO")
        }

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `loanProductParamType`
        should("test loanProductParamType") {
            // uncomment below to test the property
            //modelInstance.loanProductParamType shouldBe ("TODO")
        }

        // to test the property `loanProductValueConditionType`
        should("test loanProductValueConditionType") {
            // uncomment below to test the property
            //modelInstance.loanProductValueConditionType shouldBe ("TODO")
        }

        // to test the property `maxValue`
        should("test maxValue") {
            // uncomment below to test the property
            //modelInstance.maxValue shouldBe ("TODO")
        }

        // to test the property `minValue`
        should("test minValue") {
            // uncomment below to test the property
            //modelInstance.minValue shouldBe ("TODO")
        }

        // to test the property `paramType`
        should("test paramType") {
            // uncomment below to test the property
            //modelInstance.paramType shouldBe ("TODO")
        }

        // to test the property `valueConditionType`
        should("test valueConditionType") {
            // uncomment below to test the property
            //modelInstance.valueConditionType shouldBe ("TODO")
        }

    }
}
