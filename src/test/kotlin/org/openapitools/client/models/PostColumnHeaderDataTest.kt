/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.PostColumnHeaderData

class PostColumnHeaderDataTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of PostColumnHeaderData
        //val modelInstance = PostColumnHeaderData()

        // to test the property `name`
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `type` - Any of them: Boolean | Date | DateTime | Decimal | Dropdown | Number | String | Text
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

        // to test the property `code` - Used in Code Value fields. Column name becomes: code_cd_name. Mandatory if using type Dropdown, otherwise an error is returned.
        should("test code") {
            // uncomment below to test the property
            //modelInstance.code shouldBe ("TODO")
        }

        // to test the property `indexed` - Defaults to false
        should("test indexed") {
            // uncomment below to test the property
            //modelInstance.indexed shouldBe ("TODO")
        }

        // to test the property `length` - Length of the text field. Mandatory if type String is used, otherwise an error is returned.
        should("test length") {
            // uncomment below to test the property
            //modelInstance.length shouldBe ("TODO")
        }

        // to test the property `mandatory` - Defaults to false
        should("test mandatory") {
            // uncomment below to test the property
            //modelInstance.mandatory shouldBe ("TODO")
        }

        // to test the property `unique` - Defaults to false
        should("test unique") {
            // uncomment below to test the property
            //modelInstance.unique shouldBe ("TODO")
        }

    }
}
