/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.SavingsAccountData
import org.openapitools.client.models.ChargeData
import org.openapitools.client.models.ClientData
import org.openapitools.client.models.CurrencyData
import org.openapitools.client.models.DatatableData
import org.openapitools.client.models.EnumOptionData
import org.openapitools.client.models.GroupGeneralData
import org.openapitools.client.models.SavingsAccountApplicationTimelineData
import org.openapitools.client.models.SavingsAccountChargeData
import org.openapitools.client.models.SavingsAccountStatusEnumData
import org.openapitools.client.models.SavingsAccountSubStatusEnumData
import org.openapitools.client.models.SavingsAccountSummaryData
import org.openapitools.client.models.SavingsAccountTransactionData
import org.openapitools.client.models.SavingsProductData
import org.openapitools.client.models.StaffData
import org.openapitools.client.models.TaxGroupData

class SavingsAccountDataTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of SavingsAccountData
        //val modelInstance = SavingsAccountData()

        // to test the property `accountNo`
        should("test accountNo") {
            // uncomment below to test the property
            //modelInstance.accountNo shouldBe ("TODO")
        }

        // to test the property `accrualBasedAccountingEnabledOnSavingsProduct`
        should("test accrualBasedAccountingEnabledOnSavingsProduct") {
            // uncomment below to test the property
            //modelInstance.accrualBasedAccountingEnabledOnSavingsProduct shouldBe ("TODO")
        }

        // to test the property `activatedOnDate`
        should("test activatedOnDate") {
            // uncomment below to test the property
            //modelInstance.activatedOnDate shouldBe ("TODO")
        }

        // to test the property `activationLocalDate`
        should("test activationLocalDate") {
            // uncomment below to test the property
            //modelInstance.activationLocalDate shouldBe ("TODO")
        }

        // to test the property `allowOverdraft`
        should("test allowOverdraft") {
            // uncomment below to test the property
            //modelInstance.allowOverdraft shouldBe ("TODO")
        }

        // to test the property `annualFee`
        should("test annualFee") {
            // uncomment below to test the property
            //modelInstance.annualFee shouldBe ("TODO")
        }

        // to test the property `cashBasedAccountingEnabledOnSavingsProduct`
        should("test cashBasedAccountingEnabledOnSavingsProduct") {
            // uncomment below to test the property
            //modelInstance.cashBasedAccountingEnabledOnSavingsProduct shouldBe ("TODO")
        }

        // to test the property `chargeOptions`
        should("test chargeOptions") {
            // uncomment below to test the property
            //modelInstance.chargeOptions shouldBe ("TODO")
        }

        // to test the property `charges`
        should("test charges") {
            // uncomment below to test the property
            //modelInstance.charges shouldBe ("TODO")
        }

        // to test the property `clientData`
        should("test clientData") {
            // uncomment below to test the property
            //modelInstance.clientData shouldBe ("TODO")
        }

        // to test the property `clientId`
        should("test clientId") {
            // uncomment below to test the property
            //modelInstance.clientId shouldBe ("TODO")
        }

        // to test the property `clientName`
        should("test clientName") {
            // uncomment below to test the property
            //modelInstance.clientName shouldBe ("TODO")
        }

        // to test the property `currency`
        should("test currency") {
            // uncomment below to test the property
            //modelInstance.currency shouldBe ("TODO")
        }

        // to test the property `datatables`
        should("test datatables") {
            // uncomment below to test the property
            //modelInstance.datatables shouldBe ("TODO")
        }

        // to test the property `dateFormat`
        should("test dateFormat") {
            // uncomment below to test the property
            //modelInstance.dateFormat shouldBe ("TODO")
        }

        // to test the property `daysToDormancy`
        should("test daysToDormancy") {
            // uncomment below to test the property
            //modelInstance.daysToDormancy shouldBe ("TODO")
        }

        // to test the property `daysToEscheat`
        should("test daysToEscheat") {
            // uncomment below to test the property
            //modelInstance.daysToEscheat shouldBe ("TODO")
        }

        // to test the property `daysToInactive`
        should("test daysToInactive") {
            // uncomment below to test the property
            //modelInstance.daysToInactive shouldBe ("TODO")
        }

        // to test the property `depositType`
        should("test depositType") {
            // uncomment below to test the property
            //modelInstance.depositType shouldBe ("TODO")
        }

        // to test the property `depositTypeId`
        should("test depositTypeId") {
            // uncomment below to test the property
            //modelInstance.depositTypeId shouldBe ("TODO")
        }

        // to test the property `enforceMinRequiredBalance`
        should("test enforceMinRequiredBalance") {
            // uncomment below to test the property
            //modelInstance.enforceMinRequiredBalance shouldBe ("TODO")
        }

        // to test the property `existingReversedTransactionIds`
        should("test existingReversedTransactionIds") {
            // uncomment below to test the property
            //modelInstance.existingReversedTransactionIds shouldBe ("TODO")
        }

        // to test the property `existingTransactionIds`
        should("test existingTransactionIds") {
            // uncomment below to test the property
            //modelInstance.existingTransactionIds shouldBe ("TODO")
        }

        // to test the property `externalId`
        should("test externalId") {
            // uncomment below to test the property
            //modelInstance.externalId shouldBe ("TODO")
        }

        // to test the property `fieldOfficerId`
        should("test fieldOfficerId") {
            // uncomment below to test the property
            //modelInstance.fieldOfficerId shouldBe ("TODO")
        }

        // to test the property `fieldOfficerName`
        should("test fieldOfficerName") {
            // uncomment below to test the property
            //modelInstance.fieldOfficerName shouldBe ("TODO")
        }

        // to test the property `fieldOfficerOptions`
        should("test fieldOfficerOptions") {
            // uncomment below to test the property
            //modelInstance.fieldOfficerOptions shouldBe ("TODO")
        }

        // to test the property `glAccountIdForInterestOnSavings`
        should("test glAccountIdForInterestOnSavings") {
            // uncomment below to test the property
            //modelInstance.glAccountIdForInterestOnSavings shouldBe ("TODO")
        }

        // to test the property `glAccountIdForSavingsControl`
        should("test glAccountIdForSavingsControl") {
            // uncomment below to test the property
            //modelInstance.glAccountIdForSavingsControl shouldBe ("TODO")
        }

        // to test the property `groupGeneralData`
        should("test groupGeneralData") {
            // uncomment below to test the property
            //modelInstance.groupGeneralData shouldBe ("TODO")
        }

        // to test the property `groupId`
        should("test groupId") {
            // uncomment below to test the property
            //modelInstance.groupId shouldBe ("TODO")
        }

        // to test the property `groupName`
        should("test groupName") {
            // uncomment below to test the property
            //modelInstance.groupName shouldBe ("TODO")
        }

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `interestCalculationDaysInYearType`
        should("test interestCalculationDaysInYearType") {
            // uncomment below to test the property
            //modelInstance.interestCalculationDaysInYearType shouldBe ("TODO")
        }

        // to test the property `interestCalculationDaysInYearTypeId`
        should("test interestCalculationDaysInYearTypeId") {
            // uncomment below to test the property
            //modelInstance.interestCalculationDaysInYearTypeId shouldBe ("TODO")
        }

        // to test the property `interestCalculationDaysInYearTypeOptions`
        should("test interestCalculationDaysInYearTypeOptions") {
            // uncomment below to test the property
            //modelInstance.interestCalculationDaysInYearTypeOptions shouldBe ("TODO")
        }

        // to test the property `interestCalculationType`
        should("test interestCalculationType") {
            // uncomment below to test the property
            //modelInstance.interestCalculationType shouldBe ("TODO")
        }

        // to test the property `interestCalculationTypeId`
        should("test interestCalculationTypeId") {
            // uncomment below to test the property
            //modelInstance.interestCalculationTypeId shouldBe ("TODO")
        }

        // to test the property `interestCalculationTypeOptions`
        should("test interestCalculationTypeOptions") {
            // uncomment below to test the property
            //modelInstance.interestCalculationTypeOptions shouldBe ("TODO")
        }

        // to test the property `interestCompoundingPeriodType`
        should("test interestCompoundingPeriodType") {
            // uncomment below to test the property
            //modelInstance.interestCompoundingPeriodType shouldBe ("TODO")
        }

        // to test the property `interestCompoundingPeriodTypeId`
        should("test interestCompoundingPeriodTypeId") {
            // uncomment below to test the property
            //modelInstance.interestCompoundingPeriodTypeId shouldBe ("TODO")
        }

        // to test the property `interestCompoundingPeriodTypeOptions`
        should("test interestCompoundingPeriodTypeOptions") {
            // uncomment below to test the property
            //modelInstance.interestCompoundingPeriodTypeOptions shouldBe ("TODO")
        }

        // to test the property `interestPostingPeriodType`
        should("test interestPostingPeriodType") {
            // uncomment below to test the property
            //modelInstance.interestPostingPeriodType shouldBe ("TODO")
        }

        // to test the property `interestPostingPeriodTypeId`
        should("test interestPostingPeriodTypeId") {
            // uncomment below to test the property
            //modelInstance.interestPostingPeriodTypeId shouldBe ("TODO")
        }

        // to test the property `interestPostingPeriodTypeOptions`
        should("test interestPostingPeriodTypeOptions") {
            // uncomment below to test the property
            //modelInstance.interestPostingPeriodTypeOptions shouldBe ("TODO")
        }

        // to test the property `isDormancyTrackingActive`
        should("test isDormancyTrackingActive") {
            // uncomment below to test the property
            //modelInstance.isDormancyTrackingActive shouldBe ("TODO")
        }

        // to test the property `lastActiveTransactionDate`
        should("test lastActiveTransactionDate") {
            // uncomment below to test the property
            //modelInstance.lastActiveTransactionDate shouldBe ("TODO")
        }

        // to test the property `lastSavingsAccountTransaction`
        should("test lastSavingsAccountTransaction") {
            // uncomment below to test the property
            //modelInstance.lastSavingsAccountTransaction shouldBe ("TODO")
        }

        // to test the property `lienAllowed`
        should("test lienAllowed") {
            // uncomment below to test the property
            //modelInstance.lienAllowed shouldBe ("TODO")
        }

        // to test the property `locale`
        should("test locale") {
            // uncomment below to test the property
            //modelInstance.locale shouldBe ("TODO")
        }

        // to test the property `lockedInUntilDate`
        should("test lockedInUntilDate") {
            // uncomment below to test the property
            //modelInstance.lockedInUntilDate shouldBe ("TODO")
        }

        // to test the property `lockinPeriodFrequency`
        should("test lockinPeriodFrequency") {
            // uncomment below to test the property
            //modelInstance.lockinPeriodFrequency shouldBe ("TODO")
        }

        // to test the property `lockinPeriodFrequencyType`
        should("test lockinPeriodFrequencyType") {
            // uncomment below to test the property
            //modelInstance.lockinPeriodFrequencyType shouldBe ("TODO")
        }

        // to test the property `lockinPeriodFrequencyTypeId`
        should("test lockinPeriodFrequencyTypeId") {
            // uncomment below to test the property
            //modelInstance.lockinPeriodFrequencyTypeId shouldBe ("TODO")
        }

        // to test the property `lockinPeriodFrequencyTypeOptions`
        should("test lockinPeriodFrequencyTypeOptions") {
            // uncomment below to test the property
            //modelInstance.lockinPeriodFrequencyTypeOptions shouldBe ("TODO")
        }

        // to test the property `maxAllowedLienLimit`
        should("test maxAllowedLienLimit") {
            // uncomment below to test the property
            //modelInstance.maxAllowedLienLimit shouldBe ("TODO")
        }

        // to test the property `minBalanceForInterestCalculation`
        should("test minBalanceForInterestCalculation") {
            // uncomment below to test the property
            //modelInstance.minBalanceForInterestCalculation shouldBe ("TODO")
        }

        // to test the property `minOverdraftForInterestCalculation`
        should("test minOverdraftForInterestCalculation") {
            // uncomment below to test the property
            //modelInstance.minOverdraftForInterestCalculation shouldBe ("TODO")
        }

        // to test the property `minRequiredBalance`
        should("test minRequiredBalance") {
            // uncomment below to test the property
            //modelInstance.minRequiredBalance shouldBe ("TODO")
        }

        // to test the property `minRequiredOpeningBalance`
        should("test minRequiredOpeningBalance") {
            // uncomment below to test the property
            //modelInstance.minRequiredOpeningBalance shouldBe ("TODO")
        }

        // to test the property `newSavingsAccountTransactionData`
        should("test newSavingsAccountTransactionData") {
            // uncomment below to test the property
            //modelInstance.newSavingsAccountTransactionData shouldBe ("TODO")
        }

        // to test the property `nominalAnnualInterestRate`
        should("test nominalAnnualInterestRate") {
            // uncomment below to test the property
            //modelInstance.nominalAnnualInterestRate shouldBe ("TODO")
        }

        // to test the property `nominalAnnualInterestRateOverdraft`
        should("test nominalAnnualInterestRateOverdraft") {
            // uncomment below to test the property
            //modelInstance.nominalAnnualInterestRateOverdraft shouldBe ("TODO")
        }

        // to test the property `officeId`
        should("test officeId") {
            // uncomment below to test the property
            //modelInstance.officeId shouldBe ("TODO")
        }

        // to test the property `onHoldFunds`
        should("test onHoldFunds") {
            // uncomment below to test the property
            //modelInstance.onHoldFunds shouldBe ("TODO")
        }

        // to test the property `overdraftLimit`
        should("test overdraftLimit") {
            // uncomment below to test the property
            //modelInstance.overdraftLimit shouldBe ("TODO")
        }

        // to test the property `productId`
        should("test productId") {
            // uncomment below to test the property
            //modelInstance.productId shouldBe ("TODO")
        }

        // to test the property `productOptions`
        should("test productOptions") {
            // uncomment below to test the property
            //modelInstance.productOptions shouldBe ("TODO")
        }

        // to test the property `reasonForBlock`
        should("test reasonForBlock") {
            // uncomment below to test the property
            //modelInstance.reasonForBlock shouldBe ("TODO")
        }

        // to test the property `rowIndex`
        should("test rowIndex") {
            // uncomment below to test the property
            //modelInstance.rowIndex shouldBe ("TODO")
        }

        // to test the property `savingsAccountSummaryData`
        should("test savingsAccountSummaryData") {
            // uncomment below to test the property
            //modelInstance.savingsAccountSummaryData shouldBe ("TODO")
        }

        // to test the property `savingsAccountTransactionData`
        should("test savingsAccountTransactionData") {
            // uncomment below to test the property
            //modelInstance.savingsAccountTransactionData shouldBe ("TODO")
        }

        // to test the property `savingsAccountTransactionSummaryWrapper`
        should("test savingsAccountTransactionSummaryWrapper") {
            // uncomment below to test the property
            //modelInstance.savingsAccountTransactionSummaryWrapper shouldBe ("TODO")
        }

        // to test the property `savingsAccountTransactionsWithPivotConfig`
        should("test savingsAccountTransactionsWithPivotConfig") {
            // uncomment below to test the property
            //modelInstance.savingsAccountTransactionsWithPivotConfig shouldBe ("TODO")
        }

        // to test the property `savingsAmountOnHold`
        should("test savingsAmountOnHold") {
            // uncomment below to test the property
            //modelInstance.savingsAmountOnHold shouldBe ("TODO")
        }

        // to test the property `savingsHelper`
        should("test savingsHelper") {
            // uncomment below to test the property
            //modelInstance.savingsHelper shouldBe ("TODO")
        }

        // to test the property `savingsProduct`
        should("test savingsProduct") {
            // uncomment below to test the property
            //modelInstance.savingsProduct shouldBe ("TODO")
        }

        // to test the property `savingsProductData`
        should("test savingsProductData") {
            // uncomment below to test the property
            //modelInstance.savingsProductData shouldBe ("TODO")
        }

        // to test the property `savingsProductId`
        should("test savingsProductId") {
            // uncomment below to test the property
            //modelInstance.savingsProductId shouldBe ("TODO")
        }

        // to test the property `savingsProductName`
        should("test savingsProductName") {
            // uncomment below to test the property
            //modelInstance.savingsProductName shouldBe ("TODO")
        }

        // to test the property `startInterestCalculationDate`
        should("test startInterestCalculationDate") {
            // uncomment below to test the property
            //modelInstance.startInterestCalculationDate shouldBe ("TODO")
        }

        // to test the property `status`
        should("test status") {
            // uncomment below to test the property
            //modelInstance.status shouldBe ("TODO")
        }

        // to test the property `subStatus`
        should("test subStatus") {
            // uncomment below to test the property
            //modelInstance.subStatus shouldBe ("TODO")
        }

        // to test the property `submittedOnDate`
        should("test submittedOnDate") {
            // uncomment below to test the property
            //modelInstance.submittedOnDate shouldBe ("TODO")
        }

        // to test the property `summary`
        should("test summary") {
            // uncomment below to test the property
            //modelInstance.summary shouldBe ("TODO")
        }

        // to test the property `taxGroup`
        should("test taxGroup") {
            // uncomment below to test the property
            //modelInstance.taxGroup shouldBe ("TODO")
        }

        // to test the property `timeline`
        should("test timeline") {
            // uncomment below to test the property
            //modelInstance.timeline shouldBe ("TODO")
        }

        // to test the property `transactions`
        should("test transactions") {
            // uncomment below to test the property
            //modelInstance.transactions shouldBe ("TODO")
        }

        // to test the property `updatedTransactions`
        should("test updatedTransactions") {
            // uncomment below to test the property
            //modelInstance.updatedTransactions shouldBe ("TODO")
        }

        // to test the property `withHoldTax`
        should("test withHoldTax") {
            // uncomment below to test the property
            //modelInstance.withHoldTax shouldBe ("TODO")
        }

        // to test the property `withdrawalFee`
        should("test withdrawalFee") {
            // uncomment below to test the property
            //modelInstance.withdrawalFee shouldBe ("TODO")
        }

        // to test the property `withdrawalFeeForTransfers`
        should("test withdrawalFeeForTransfers") {
            // uncomment below to test the property
            //modelInstance.withdrawalFeeForTransfers shouldBe ("TODO")
        }

        // to test the property `withdrawalFeeTypeOptions`
        should("test withdrawalFeeTypeOptions") {
            // uncomment below to test the property
            //modelInstance.withdrawalFeeTypeOptions shouldBe ("TODO")
        }

    }
}
