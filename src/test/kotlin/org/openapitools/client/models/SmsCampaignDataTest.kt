/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.SmsCampaignData
import org.openapitools.client.models.EnumOptionData

class SmsCampaignDataTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of SmsCampaignData
        //val modelInstance = SmsCampaignData()

        // to test the property `campaignName`
        should("test campaignName") {
            // uncomment below to test the property
            //modelInstance.campaignName shouldBe ("TODO")
        }

        // to test the property `campaignStatus`
        should("test campaignStatus") {
            // uncomment below to test the property
            //modelInstance.campaignStatus shouldBe ("TODO")
        }

        // to test the property `campaignType`
        should("test campaignType") {
            // uncomment below to test the property
            //modelInstance.campaignType shouldBe ("TODO")
        }

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `lastTriggerDate`
        should("test lastTriggerDate") {
            // uncomment below to test the property
            //modelInstance.lastTriggerDate shouldBe ("TODO")
        }

        // to test the property `message`
        should("test message") {
            // uncomment below to test the property
            //modelInstance.message shouldBe ("TODO")
        }

        // to test the property `nextTriggerDate`
        should("test nextTriggerDate") {
            // uncomment below to test the property
            //modelInstance.nextTriggerDate shouldBe ("TODO")
        }

        // to test the property `notification`
        should("test notification") {
            // uncomment below to test the property
            //modelInstance.notification shouldBe ("TODO")
        }

        // to test the property `paramValue`
        should("test paramValue") {
            // uncomment below to test the property
            //modelInstance.paramValue shouldBe ("TODO")
        }

        // to test the property `recurrence`
        should("test recurrence") {
            // uncomment below to test the property
            //modelInstance.recurrence shouldBe ("TODO")
        }

        // to test the property `recurrenceStartDate`
        should("test recurrenceStartDate") {
            // uncomment below to test the property
            //modelInstance.recurrenceStartDate shouldBe ("TODO")
        }

        // to test the property `reportName`
        should("test reportName") {
            // uncomment below to test the property
            //modelInstance.reportName shouldBe ("TODO")
        }

        // to test the property `runReportId`
        should("test runReportId") {
            // uncomment below to test the property
            //modelInstance.runReportId shouldBe ("TODO")
        }

    }
}
